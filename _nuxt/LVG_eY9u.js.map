{"version":3,"file":"LVG_eY9u.js","sources":["../../../../../../.pnpm/embla-carousel-auto-scroll@8.6.0_embla-carousel@8.6.0/node_modules/embla-carousel-auto-scroll/esm/embla-carousel-auto-scroll.esm.js"],"sourcesContent":["const defaultOptions = {\n  direction: 'forward',\n  speed: 2,\n  startDelay: 1000,\n  active: true,\n  breakpoints: {},\n  playOnInit: true,\n  stopOnFocusIn: true,\n  stopOnInteraction: true,\n  stopOnMouseEnter: false,\n  rootNode: null\n};\n\nfunction getAutoScrollRootNode(emblaApi, rootNode) {\n  const emblaRootNode = emblaApi.rootNode();\n  return rootNode && rootNode(emblaRootNode) || emblaRootNode;\n}\n\nfunction AutoScroll(userOptions = {}) {\n  let options;\n  let emblaApi;\n  let destroyed;\n  let startDelay;\n  let timerId = 0;\n  let autoScrollActive = false;\n  let mouseIsOver = false;\n  let defaultScrollBehaviour;\n  function init(emblaApiInstance, optionsHandler) {\n    emblaApi = emblaApiInstance;\n    const {\n      mergeOptions,\n      optionsAtMedia\n    } = optionsHandler;\n    const optionsBase = mergeOptions(defaultOptions, AutoScroll.globalOptions);\n    const allOptions = mergeOptions(optionsBase, userOptions);\n    options = optionsAtMedia(allOptions);\n    if (emblaApi.scrollSnapList().length <= 1) return;\n    startDelay = options.startDelay;\n    destroyed = false;\n    defaultScrollBehaviour = emblaApi.internalEngine().scrollBody;\n    const {\n      eventStore\n    } = emblaApi.internalEngine();\n    const isDraggable = !!emblaApi.internalEngine().options.watchDrag;\n    const root = getAutoScrollRootNode(emblaApi, options.rootNode);\n    if (isDraggable) {\n      emblaApi.on('pointerDown', pointerDown);\n    }\n    if (isDraggable && !options.stopOnInteraction) {\n      emblaApi.on('pointerUp', pointerUp);\n    }\n    if (options.stopOnMouseEnter) {\n      eventStore.add(root, 'mouseenter', mouseEnter);\n    }\n    if (options.stopOnMouseEnter && !options.stopOnInteraction) {\n      eventStore.add(root, 'mouseleave', mouseLeave);\n    }\n    if (options.stopOnFocusIn) {\n      emblaApi.on('slideFocusStart', stopAutoScroll);\n    }\n    if (options.stopOnFocusIn && !options.stopOnInteraction) {\n      eventStore.add(emblaApi.containerNode(), 'focusout', startAutoScroll);\n    }\n    if (options.playOnInit) startAutoScroll();\n  }\n  function destroy() {\n    emblaApi.off('pointerDown', pointerDown).off('pointerUp', pointerUp).off('slideFocusStart', stopAutoScroll).off('settle', settle);\n    stopAutoScroll();\n    destroyed = true;\n    autoScrollActive = false;\n  }\n  function startAutoScroll() {\n    if (destroyed) return;\n    if (autoScrollActive) return;\n    emblaApi.emit('autoScroll:play');\n    const engine = emblaApi.internalEngine();\n    const {\n      ownerWindow\n    } = engine;\n    timerId = ownerWindow.setTimeout(() => {\n      engine.scrollBody = createAutoScrollBehaviour(engine);\n      engine.animation.start();\n    }, startDelay);\n    autoScrollActive = true;\n  }\n  function stopAutoScroll() {\n    if (destroyed) return;\n    if (!autoScrollActive) return;\n    emblaApi.emit('autoScroll:stop');\n    const engine = emblaApi.internalEngine();\n    const {\n      ownerWindow\n    } = engine;\n    engine.scrollBody = defaultScrollBehaviour;\n    ownerWindow.clearTimeout(timerId);\n    timerId = 0;\n    autoScrollActive = false;\n  }\n  function createAutoScrollBehaviour(engine) {\n    const {\n      location,\n      previousLocation,\n      offsetLocation,\n      target,\n      scrollTarget,\n      index,\n      indexPrevious,\n      limit: {\n        reachedMin,\n        reachedMax,\n        constrain\n      },\n      options: {\n        loop\n      }\n    } = engine;\n    const directionSign = options.direction === 'forward' ? -1 : 1;\n    const noop = () => self;\n    let bodyVelocity = 0;\n    let scrollDirection = 0;\n    let rawLocation = location.get();\n    let rawLocationPrevious = 0;\n    let hasSettled = false;\n    function seek() {\n      let directionDiff = 0;\n      previousLocation.set(location);\n      bodyVelocity = directionSign * options.speed;\n      rawLocation += bodyVelocity;\n      location.add(bodyVelocity);\n      target.set(location);\n      directionDiff = rawLocation - rawLocationPrevious;\n      scrollDirection = Math.sign(directionDiff);\n      rawLocationPrevious = rawLocation;\n      const currentIndex = scrollTarget.byDistance(0, false).index;\n      if (index.get() !== currentIndex) {\n        indexPrevious.set(index.get());\n        index.set(currentIndex);\n        emblaApi.emit('select');\n      }\n      const reachedEnd = options.direction === 'forward' ? reachedMin(offsetLocation.get()) : reachedMax(offsetLocation.get());\n      if (!loop && reachedEnd) {\n        hasSettled = true;\n        const constrainedLocation = constrain(location.get());\n        location.set(constrainedLocation);\n        target.set(location);\n        stopAutoScroll();\n      }\n      return self;\n    }\n    const self = {\n      direction: () => scrollDirection,\n      duration: () => -1,\n      velocity: () => bodyVelocity,\n      settled: () => hasSettled,\n      seek,\n      useBaseFriction: noop,\n      useBaseDuration: noop,\n      useFriction: noop,\n      useDuration: noop\n    };\n    return self;\n  }\n  function pointerDown() {\n    if (!mouseIsOver) stopAutoScroll();\n  }\n  function pointerUp() {\n    if (!mouseIsOver) startAutoScrollOnSettle();\n  }\n  function mouseEnter() {\n    mouseIsOver = true;\n    stopAutoScroll();\n  }\n  function mouseLeave() {\n    mouseIsOver = false;\n    startAutoScroll();\n  }\n  function settle() {\n    emblaApi.off('settle', settle);\n    startAutoScroll();\n  }\n  function startAutoScrollOnSettle() {\n    emblaApi.on('settle', settle);\n  }\n  function play(startDelayOverride) {\n    if (typeof startDelayOverride !== 'undefined') {\n      startDelay = startDelayOverride;\n    }\n    startAutoScroll();\n  }\n  function stop() {\n    if (autoScrollActive) stopAutoScroll();\n  }\n  function reset() {\n    if (autoScrollActive) {\n      stopAutoScroll();\n      startAutoScrollOnSettle();\n    }\n  }\n  function isPlaying() {\n    return autoScrollActive;\n  }\n  const self = {\n    name: 'autoScroll',\n    options: userOptions,\n    init,\n    destroy,\n    play,\n    stop,\n    reset,\n    isPlaying\n  };\n  return self;\n}\nAutoScroll.globalOptions = undefined;\n\nexport { AutoScroll as default };\n//# sourceMappingURL=embla-carousel-auto-scroll.esm.js.map\n"],"names":["defaultOptions","getAutoScrollRootNode","emblaApi","rootNode","emblaRootNode","AutoScroll","userOptions","options","destroyed","startDelay","timerId","autoScrollActive","mouseIsOver","defaultScrollBehaviour","init","emblaApiInstance","optionsHandler","mergeOptions","optionsAtMedia","optionsBase","allOptions","eventStore","isDraggable","root","pointerDown","pointerUp","mouseEnter","mouseLeave","stopAutoScroll","startAutoScroll","destroy","settle","engine","ownerWindow","createAutoScrollBehaviour","location","previousLocation","offsetLocation","target","scrollTarget","index","indexPrevious","reachedMin","reachedMax","constrain","loop","directionSign","noop","self","bodyVelocity","scrollDirection","rawLocation","rawLocationPrevious","hasSettled","seek","directionDiff","currentIndex","reachedEnd","constrainedLocation","startAutoScrollOnSettle","play","startDelayOverride","stop","reset","isPlaying"],"mappings":"AAAA,MAAMA,EAAiB,CACrB,UAAW,UACX,MAAO,EACP,WAAY,IACZ,OAAQ,GACR,YAAa,CAAA,EACb,WAAY,GACZ,cAAe,GACf,kBAAmB,GACnB,iBAAkB,GAClB,SAAU,IACZ,EAEA,SAASC,EAAsBC,EAAUC,EAAU,CACjD,MAAMC,EAAgBF,EAAS,SAAQ,EACvC,OAAOC,GAAYA,EAASC,CAAa,GAAKA,CAChD,CAEA,SAASC,EAAWC,EAAc,GAAI,CACpC,IAAIC,EACAL,EACAM,EACAC,EACAC,EAAU,EACVC,EAAmB,GACnBC,EAAc,GACdC,EACJ,SAASC,EAAKC,EAAkBC,EAAgB,CAC9Cd,EAAWa,EACX,KAAM,CACJ,aAAAE,EACA,eAAAC,CACN,EAAQF,EACEG,EAAcF,EAAajB,EAAgBK,EAAW,aAAa,EACnEe,EAAaH,EAAaE,EAAab,CAAW,EAExD,GADAC,EAAUW,EAAeE,CAAU,EAC/BlB,EAAS,iBAAiB,QAAU,EAAG,OAC3CO,EAAaF,EAAQ,WACrBC,EAAY,GACZK,EAAyBX,EAAS,eAAc,EAAG,WACnD,KAAM,CACJ,WAAAmB,CACN,EAAQnB,EAAS,eAAc,EACrBoB,EAAc,CAAC,CAACpB,EAAS,eAAc,EAAG,QAAQ,UAClDqB,EAAOtB,EAAsBC,EAAUK,EAAQ,QAAQ,EACzDe,GACFpB,EAAS,GAAG,cAAesB,CAAW,EAEpCF,GAAe,CAACf,EAAQ,mBAC1BL,EAAS,GAAG,YAAauB,CAAS,EAEhClB,EAAQ,kBACVc,EAAW,IAAIE,EAAM,aAAcG,CAAU,EAE3CnB,EAAQ,kBAAoB,CAACA,EAAQ,mBACvCc,EAAW,IAAIE,EAAM,aAAcI,CAAU,EAE3CpB,EAAQ,eACVL,EAAS,GAAG,kBAAmB0B,CAAc,EAE3CrB,EAAQ,eAAiB,CAACA,EAAQ,mBACpCc,EAAW,IAAInB,EAAS,cAAa,EAAI,WAAY2B,CAAe,EAElEtB,EAAQ,YAAYsB,EAAe,CACzC,CACA,SAASC,GAAU,CACjB5B,EAAS,IAAI,cAAesB,CAAW,EAAE,IAAI,YAAaC,CAAS,EAAE,IAAI,kBAAmBG,CAAc,EAAE,IAAI,SAAUG,CAAM,EAChIH,EAAc,EACdpB,EAAY,GACZG,EAAmB,EACrB,CACA,SAASkB,GAAkB,CAEzB,GADIrB,GACAG,EAAkB,OACtBT,EAAS,KAAK,iBAAiB,EAC/B,MAAM8B,EAAS9B,EAAS,eAAc,EAChC,CACJ,YAAA+B,CACN,EAAQD,EACJtB,EAAUuB,EAAY,WAAW,IAAM,CACrCD,EAAO,WAAaE,EAA0BF,CAAM,EACpDA,EAAO,UAAU,MAAK,CACxB,EAAGvB,CAAU,EACbE,EAAmB,EACrB,CACA,SAASiB,GAAiB,CAExB,GADIpB,GACA,CAACG,EAAkB,OACvBT,EAAS,KAAK,iBAAiB,EAC/B,MAAM8B,EAAS9B,EAAS,eAAc,EAChC,CACJ,YAAA+B,CACN,EAAQD,EACJA,EAAO,WAAanB,EACpBoB,EAAY,aAAavB,CAAO,EAChCA,EAAU,EACVC,EAAmB,EACrB,CACA,SAASuB,EAA0BF,EAAQ,CACzC,KAAM,CACJ,SAAAG,EACA,iBAAAC,EACA,eAAAC,EACA,OAAAC,EACA,aAAAC,EACA,MAAAC,EACA,cAAAC,EACA,MAAO,CACL,WAAAC,EACA,WAAAC,EACA,UAAAC,CACR,EACM,QAAS,CACP,KAAAC,CACR,CACA,EAAQb,EACEc,EAAgBvC,EAAQ,YAAc,UAAY,GAAK,EACvDwC,EAAO,IAAMC,EACnB,IAAIC,EAAe,EACfC,EAAkB,EAClBC,EAAchB,EAAS,IAAG,EAC1BiB,EAAsB,EACtBC,EAAa,GACjB,SAASC,GAAO,CACd,IAAIC,EAAgB,EACpBnB,EAAiB,IAAID,CAAQ,EAC7Bc,EAAeH,EAAgBvC,EAAQ,MACvC4C,GAAeF,EACfd,EAAS,IAAIc,CAAY,EACzBX,EAAO,IAAIH,CAAQ,EACnBoB,EAAgBJ,EAAcC,EAC9BF,EAAkB,KAAK,KAAKK,CAAa,EACzCH,EAAsBD,EACtB,MAAMK,EAAejB,EAAa,WAAW,EAAG,EAAK,EAAE,MACnDC,EAAM,IAAG,IAAOgB,IAClBf,EAAc,IAAID,EAAM,KAAK,EAC7BA,EAAM,IAAIgB,CAAY,EACtBtD,EAAS,KAAK,QAAQ,GAExB,MAAMuD,EAAalD,EAAQ,YAAc,UAAYmC,EAAWL,EAAe,IAAG,CAAE,EAAIM,EAAWN,EAAe,IAAG,CAAE,EACvH,GAAI,CAACQ,GAAQY,EAAY,CACvBJ,EAAa,GACb,MAAMK,EAAsBd,EAAUT,EAAS,IAAG,CAAE,EACpDA,EAAS,IAAIuB,CAAmB,EAChCpB,EAAO,IAAIH,CAAQ,EACnBP,EAAc,CAChB,CACA,OAAOoB,CACT,CACA,MAAMA,EAAO,CACX,UAAW,IAAME,EACjB,SAAU,IAAM,GAChB,SAAU,IAAMD,EAChB,QAAS,IAAMI,EACf,KAAAC,EACA,gBAAiBP,EACjB,gBAAiBA,EACjB,YAAaA,EACb,YAAaA,CACnB,EACI,OAAOC,CACT,CACA,SAASxB,GAAc,CAChBZ,GAAagB,EAAc,CAClC,CACA,SAASH,GAAY,CACdb,GAAa+C,EAAuB,CAC3C,CACA,SAASjC,GAAa,CACpBd,EAAc,GACdgB,EAAc,CAChB,CACA,SAASD,GAAa,CACpBf,EAAc,GACdiB,EAAe,CACjB,CACA,SAASE,GAAS,CAChB7B,EAAS,IAAI,SAAU6B,CAAM,EAC7BF,EAAe,CACjB,CACA,SAAS8B,GAA0B,CACjCzD,EAAS,GAAG,SAAU6B,CAAM,CAC9B,CACA,SAAS6B,EAAKC,EAAoB,CAC5B,OAAOA,EAAuB,MAChCpD,EAAaoD,GAEfhC,EAAe,CACjB,CACA,SAASiC,GAAO,CACVnD,GAAkBiB,EAAc,CACtC,CACA,SAASmC,GAAQ,CACXpD,IACFiB,EAAc,EACd+B,EAAuB,EAE3B,CACA,SAASK,GAAY,CACnB,OAAOrD,CACT,CAWA,MAVa,CACX,KAAM,aACN,QAASL,EACT,KAAAQ,EACA,QAAAgB,EACA,KAAA8B,EACA,KAAAE,EACA,MAAAC,EACA,UAAAC,CACJ,CAEA,CACA3D,EAAW,cAAgB","x_google_ignoreList":[0]}