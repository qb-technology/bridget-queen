{"version":3,"file":"C3cNijze.js","sources":["../../../../../../.pnpm/@sqlite.org+sqlite-wasm@3.50.1-build1/node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-bundler-friendly.mjs","../../../../../../.pnpm/@sqlite.org+sqlite-wasm@3.50.1-build1/node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-worker1-promiser.mjs","../../../../../../.pnpm/@sqlite.org+sqlite-wasm@3.50.1-build1/node_modules/@sqlite.org/sqlite-wasm/index.mjs"],"sourcesContent":["/*\n ** LICENSE for the sqlite3 WebAssembly/JavaScript APIs.\n **\n ** This bundle (typically released as sqlite3.js or sqlite3.mjs)\n ** is an amalgamation of JavaScript source code from two projects:\n **\n ** 1) https://emscripten.org: the Emscripten \"glue code\" is covered by\n **    the terms of the MIT license and University of Illinois/NCSA\n **    Open Source License, as described at:\n **\n **    https://emscripten.org/docs/introducing_emscripten/emscripten_license.html\n **\n ** 2) https://sqlite.org: all code and documentation labeled as being\n **    from this source are released under the same terms as the sqlite3\n **    C library:\n **\n ** 2022-10-16\n **\n ** The author disclaims copyright to this source code.  In place of a\n ** legal notice, here is a blessing:\n **\n ** *   May you do good and not evil.\n ** *   May you find forgiveness for yourself and forgive others.\n ** *   May you share freely, never taking more than you give.\n */\n/*\n ** This code was built from sqlite3 version...\n **\n ** SQLITE_VERSION \"3.50.1\"\n ** SQLITE_VERSION_NUMBER 3050001\n ** SQLITE_SOURCE_ID \"2025-06-06 14:52:32 b77dc5e0f596d2140d9ac682b2893ff65d3a4140aa86067a3efebe29dc914c95\"\n **\n ** Using the Emscripten SDK version 3.1.70.\n */\n\nvar sqlite3InitModule = (() => {\n  var _scriptName = import.meta.url;\n\n  return function (moduleArg = {}) {\n    var moduleRtn;\n\n    var Module = moduleArg;\n\n    var readyPromiseResolve, readyPromiseReject;\n    var readyPromise = new Promise((resolve, reject) => {\n      readyPromiseResolve = resolve;\n      readyPromiseReject = reject;\n    });\n\n    var ENVIRONMENT_IS_WEB = typeof window == 'object';\n    var ENVIRONMENT_IS_WORKER = typeof importScripts == 'function';\n\n    var ENVIRONMENT_IS_NODE =\n      typeof process == 'object' &&\n      typeof process.versions == 'object' &&\n      typeof process.versions.node == 'string' &&\n      process.type != 'renderer';\n    var ENVIRONMENT_IS_SHELL =\n      !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\n    const sqlite3InitModuleState =\n      globalThis.sqlite3InitModuleState ||\n      Object.assign(Object.create(null), {\n        debugModule: () => {},\n      });\n    delete globalThis.sqlite3InitModuleState;\n    sqlite3InitModuleState.debugModule(\n      'globalThis.location =',\n      globalThis.location,\n    );\n\n    var moduleOverrides = Object.assign({}, Module);\n\n    var arguments_ = [];\n    var thisProgram = './this.program';\n    var quit_ = (status, toThrow) => {\n      throw toThrow;\n    };\n\n    var scriptDirectory = '';\n    function locateFile(path) {\n      if (Module['locateFile']) {\n        return Module['locateFile'](path, scriptDirectory);\n      }\n      return scriptDirectory + path;\n    }\n\n    var readAsync, readBinary;\n\n    if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n      if (ENVIRONMENT_IS_WORKER) {\n        scriptDirectory = self.location.href;\n      } else if (typeof document != 'undefined' && document.currentScript) {\n        scriptDirectory = document.currentScript.src;\n      }\n\n      if (_scriptName) {\n        scriptDirectory = _scriptName;\n      }\n\n      if (scriptDirectory.startsWith('blob:')) {\n        scriptDirectory = '';\n      } else {\n        scriptDirectory = scriptDirectory.substr(\n          0,\n          scriptDirectory.replace(/[?#].*/, '').lastIndexOf('/') + 1,\n        );\n      }\n\n      {\n        if (ENVIRONMENT_IS_WORKER) {\n          readBinary = (url) => {\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', url, false);\n            xhr.responseType = 'arraybuffer';\n            xhr.send(null);\n            return new Uint8Array(xhr.response);\n          };\n        }\n\n        readAsync = (url) => {\n          return fetch(url, { credentials: 'same-origin' }).then((response) => {\n            if (response.ok) {\n              return response.arrayBuffer();\n            }\n            return Promise.reject(\n              new Error(response.status + ' : ' + response.url),\n            );\n          });\n        };\n      }\n    } else {\n    }\n\n    var out = Module['print'] || console.log.bind(console);\n    var err = Module['printErr'] || console.error.bind(console);\n\n    Object.assign(Module, moduleOverrides);\n\n    moduleOverrides = null;\n\n    if (Module['arguments']) arguments_ = Module['arguments'];\n\n    if (Module['thisProgram']) thisProgram = Module['thisProgram'];\n\n    var wasmBinary = Module['wasmBinary'];\n\n    var wasmMemory;\n\n    var ABORT = false;\n\n    var EXITSTATUS;\n\n    function assert(condition, text) {\n      if (!condition) {\n        abort(text);\n      }\n    }\n\n    var HEAP,\n      HEAP8,\n      HEAPU8,\n      HEAP16,\n      HEAPU16,\n      HEAP32,\n      HEAPU32,\n      HEAPF32,\n      HEAP64,\n      HEAPU64,\n      HEAPF64;\n\n    function updateMemoryViews() {\n      var b = wasmMemory.buffer;\n      Module['HEAP8'] = HEAP8 = new Int8Array(b);\n      Module['HEAP16'] = HEAP16 = new Int16Array(b);\n      Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\n      Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\n      Module['HEAP32'] = HEAP32 = new Int32Array(b);\n      Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\n      Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\n      Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\n      Module['HEAP64'] = HEAP64 = new BigInt64Array(b);\n      Module['HEAPU64'] = HEAPU64 = new BigUint64Array(b);\n    }\n\n    if (Module['wasmMemory']) {\n      wasmMemory = Module['wasmMemory'];\n    } else {\n      var INITIAL_MEMORY = Module['INITIAL_MEMORY'] || 16777216;\n\n      wasmMemory = new WebAssembly.Memory({\n        initial: INITIAL_MEMORY / 65536,\n\n        maximum: 32768,\n      });\n    }\n\n    updateMemoryViews();\n\n    var __ATPRERUN__ = [];\n    var __ATINIT__ = [];\n    var __ATEXIT__ = [];\n    var __ATPOSTRUN__ = [];\n\n    var runtimeInitialized = false;\n\n    function preRun() {\n      var preRuns = Module['preRun'];\n      if (preRuns) {\n        if (typeof preRuns == 'function') preRuns = [preRuns];\n        preRuns.forEach(addOnPreRun);\n      }\n      callRuntimeCallbacks(__ATPRERUN__);\n    }\n\n    function initRuntime() {\n      runtimeInitialized = true;\n\n      if (!Module['noFSInit'] && !FS.initialized) FS.init();\n      FS.ignorePermissions = false;\n\n      TTY.init();\n      callRuntimeCallbacks(__ATINIT__);\n    }\n\n    function postRun() {\n      var postRuns = Module['postRun'];\n      if (postRuns) {\n        if (typeof postRuns == 'function') postRuns = [postRuns];\n        postRuns.forEach(addOnPostRun);\n      }\n\n      callRuntimeCallbacks(__ATPOSTRUN__);\n    }\n\n    function addOnPreRun(cb) {\n      __ATPRERUN__.unshift(cb);\n    }\n\n    function addOnInit(cb) {\n      __ATINIT__.unshift(cb);\n    }\n\n    function addOnExit(cb) {}\n\n    function addOnPostRun(cb) {\n      __ATPOSTRUN__.unshift(cb);\n    }\n\n    var runDependencies = 0;\n    var runDependencyWatcher = null;\n    var dependenciesFulfilled = null;\n\n    function getUniqueRunDependency(id) {\n      return id;\n    }\n\n    function addRunDependency(id) {\n      runDependencies++;\n\n      Module['monitorRunDependencies']?.(runDependencies);\n    }\n\n    function removeRunDependency(id) {\n      runDependencies--;\n\n      Module['monitorRunDependencies']?.(runDependencies);\n\n      if (runDependencies == 0) {\n        if (runDependencyWatcher !== null) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n        }\n        if (dependenciesFulfilled) {\n          var callback = dependenciesFulfilled;\n          dependenciesFulfilled = null;\n          callback();\n        }\n      }\n    }\n\n    function abort(what) {\n      Module['onAbort']?.(what);\n\n      what = 'Aborted(' + what + ')';\n\n      err(what);\n\n      ABORT = true;\n\n      what += '. Build with -sASSERTIONS for more info.';\n\n      var e = new WebAssembly.RuntimeError(what);\n\n      readyPromiseReject(e);\n\n      throw e;\n    }\n\n    var dataURIPrefix = 'data:application/octet-stream;base64,';\n\n    var isDataURI = (filename) => filename.startsWith(dataURIPrefix);\n\n    var isFileURI = (filename) => filename.startsWith('file://');\n\n    function findWasmBinary() {\n      if (Module['locateFile']) {\n        var f = 'sqlite3.wasm';\n        if (!isDataURI(f)) {\n          return locateFile(f);\n        }\n        return f;\n      }\n\n      return new URL('sqlite3.wasm', import.meta.url).href;\n    }\n\n    var wasmBinaryFile;\n\n    function getBinarySync(file) {\n      if (file == wasmBinaryFile && wasmBinary) {\n        return new Uint8Array(wasmBinary);\n      }\n      if (readBinary) {\n        return readBinary(file);\n      }\n      throw 'both async and sync fetching of the wasm failed';\n    }\n\n    function getBinaryPromise(binaryFile) {\n      if (!wasmBinary) {\n        return readAsync(binaryFile).then(\n          (response) => new Uint8Array(response),\n\n          () => getBinarySync(binaryFile),\n        );\n      }\n\n      return Promise.resolve().then(() => getBinarySync(binaryFile));\n    }\n\n    function instantiateArrayBuffer(binaryFile, imports, receiver) {\n      return getBinaryPromise(binaryFile)\n        .then((binary) => {\n          return WebAssembly.instantiate(binary, imports);\n        })\n        .then(receiver, (reason) => {\n          err(`failed to asynchronously prepare wasm: ${reason}`);\n\n          abort(reason);\n        });\n    }\n\n    function instantiateAsync(binary, binaryFile, imports, callback) {\n      if (\n        !binary &&\n        typeof WebAssembly.instantiateStreaming == 'function' &&\n        !isDataURI(binaryFile) &&\n        typeof fetch == 'function'\n      ) {\n        return fetch(binaryFile, { credentials: 'same-origin' }).then(\n          (response) => {\n            var result = WebAssembly.instantiateStreaming(response, imports);\n\n            return result.then(callback, function (reason) {\n              err(`wasm streaming compile failed: ${reason}`);\n              err('falling back to ArrayBuffer instantiation');\n              return instantiateArrayBuffer(binaryFile, imports, callback);\n            });\n          },\n        );\n      }\n      return instantiateArrayBuffer(binaryFile, imports, callback);\n    }\n\n    function getWasmImports() {\n      return {\n        env: wasmImports,\n        wasi_snapshot_preview1: wasmImports,\n      };\n    }\n\n    function createWasm() {\n      var info = getWasmImports();\n\n      function receiveInstance(instance, module) {\n        wasmExports = instance.exports;\n\n        addOnInit(wasmExports['__wasm_call_ctors']);\n\n        removeRunDependency('wasm-instantiate');\n        return wasmExports;\n      }\n\n      addRunDependency('wasm-instantiate');\n\n      function receiveInstantiationResult(result) {\n        receiveInstance(result['instance']);\n      }\n\n      if (Module['instantiateWasm']) {\n        try {\n          return Module['instantiateWasm'](info, receiveInstance);\n        } catch (e) {\n          err(`Module.instantiateWasm callback failed with error: ${e}`);\n\n          readyPromiseReject(e);\n        }\n      }\n\n      wasmBinaryFile ??= findWasmBinary();\n\n      instantiateAsync(\n        wasmBinary,\n        wasmBinaryFile,\n        info,\n        receiveInstantiationResult,\n      ).catch(readyPromiseReject);\n      return {};\n    }\n\n    function ExitStatus(status) {\n      this.name = 'ExitStatus';\n      this.message = `Program terminated with exit(${status})`;\n      this.status = status;\n    }\n\n    var callRuntimeCallbacks = (callbacks) => {\n      callbacks.forEach((f) => f(Module));\n    };\n\n    function getValue(ptr, type = 'i8') {\n      if (type.endsWith('*')) type = '*';\n      switch (type) {\n        case 'i1':\n          return HEAP8[ptr];\n        case 'i8':\n          return HEAP8[ptr];\n        case 'i16':\n          return HEAP16[ptr >> 1];\n        case 'i32':\n          return HEAP32[ptr >> 2];\n        case 'i64':\n          return HEAP64[ptr >> 3];\n        case 'float':\n          return HEAPF32[ptr >> 2];\n        case 'double':\n          return HEAPF64[ptr >> 3];\n        case '*':\n          return HEAPU32[ptr >> 2];\n        default:\n          abort(`invalid type for getValue: ${type}`);\n      }\n    }\n\n    var noExitRuntime = Module['noExitRuntime'] || true;\n\n    function setValue(ptr, value, type = 'i8') {\n      if (type.endsWith('*')) type = '*';\n      switch (type) {\n        case 'i1':\n          HEAP8[ptr] = value;\n          break;\n        case 'i8':\n          HEAP8[ptr] = value;\n          break;\n        case 'i16':\n          HEAP16[ptr >> 1] = value;\n          break;\n        case 'i32':\n          HEAP32[ptr >> 2] = value;\n          break;\n        case 'i64':\n          HEAP64[ptr >> 3] = BigInt(value);\n          break;\n        case 'float':\n          HEAPF32[ptr >> 2] = value;\n          break;\n        case 'double':\n          HEAPF64[ptr >> 3] = value;\n          break;\n        case '*':\n          HEAPU32[ptr >> 2] = value;\n          break;\n        default:\n          abort(`invalid type for setValue: ${type}`);\n      }\n    }\n\n    var stackRestore = (val) => __emscripten_stack_restore(val);\n\n    var stackSave = () => _emscripten_stack_get_current();\n\n    var PATH = {\n      isAbs: (path) => path.charAt(0) === '/',\n      splitPath: (filename) => {\n        var splitPathRe =\n          /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },\n      normalizeArray: (parts, allowAboveRoot) => {\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n          if (last === '.') {\n            parts.splice(i, 1);\n          } else if (last === '..') {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift('..');\n          }\n        }\n        return parts;\n      },\n      normalize: (path) => {\n        var isAbsolute = PATH.isAbs(path),\n          trailingSlash = path.substr(-1) === '/';\n\n        path = PATH.normalizeArray(\n          path.split('/').filter((p) => !!p),\n          !isAbsolute,\n        ).join('/');\n        if (!path && !isAbsolute) {\n          path = '.';\n        }\n        if (path && trailingSlash) {\n          path += '/';\n        }\n        return (isAbsolute ? '/' : '') + path;\n      },\n      dirname: (path) => {\n        var result = PATH.splitPath(path),\n          root = result[0],\n          dir = result[1];\n        if (!root && !dir) {\n          return '.';\n        }\n        if (dir) {\n          dir = dir.substr(0, dir.length - 1);\n        }\n        return root + dir;\n      },\n      basename: (path) => {\n        if (path === '/') return '/';\n        path = PATH.normalize(path);\n        path = path.replace(/\\/$/, '');\n        var lastSlash = path.lastIndexOf('/');\n        if (lastSlash === -1) return path;\n        return path.substr(lastSlash + 1);\n      },\n      join: (...paths) => PATH.normalize(paths.join('/')),\n      join2: (l, r) => PATH.normalize(l + '/' + r),\n    };\n\n    var initRandomFill = () => {\n      if (\n        typeof crypto == 'object' &&\n        typeof crypto['getRandomValues'] == 'function'\n      ) {\n        return (view) => crypto.getRandomValues(view);\n      } else abort('initRandomDevice');\n    };\n    var randomFill = (view) => {\n      return (randomFill = initRandomFill())(view);\n    };\n\n    var PATH_FS = {\n      resolve: (...args) => {\n        var resolvedPath = '',\n          resolvedAbsolute = false;\n        for (var i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n          var path = i >= 0 ? args[i] : FS.cwd();\n\n          if (typeof path != 'string') {\n            throw new TypeError('Arguments to path.resolve must be strings');\n          } else if (!path) {\n            return '';\n          }\n          resolvedPath = path + '/' + resolvedPath;\n          resolvedAbsolute = PATH.isAbs(path);\n        }\n\n        resolvedPath = PATH.normalizeArray(\n          resolvedPath.split('/').filter((p) => !!p),\n          !resolvedAbsolute,\n        ).join('/');\n        return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n      },\n      relative: (from, to) => {\n        from = PATH_FS.resolve(from).substr(1);\n        to = PATH_FS.resolve(to).substr(1);\n        function trim(arr) {\n          var start = 0;\n          for (; start < arr.length; start++) {\n            if (arr[start] !== '') break;\n          }\n          var end = arr.length - 1;\n          for (; end >= 0; end--) {\n            if (arr[end] !== '') break;\n          }\n          if (start > end) return [];\n          return arr.slice(start, end - start + 1);\n        }\n        var fromParts = trim(from.split('/'));\n        var toParts = trim(to.split('/'));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n        for (var i = 0; i < length; i++) {\n          if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n          }\n        }\n        var outputParts = [];\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n          outputParts.push('..');\n        }\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join('/');\n      },\n    };\n\n    var UTF8Decoder =\n      typeof TextDecoder != 'undefined' ? new TextDecoder() : undefined;\n\n    var UTF8ArrayToString = (heapOrArray, idx = 0, maxBytesToRead = NaN) => {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n\n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n      }\n      var str = '';\n\n      while (idx < endPtr) {\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 0x80)) {\n          str += String.fromCharCode(u0);\n          continue;\n        }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xe0) == 0xc0) {\n          str += String.fromCharCode(((u0 & 31) << 6) | u1);\n          continue;\n        }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xf0) == 0xe0) {\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n        } else {\n          u0 =\n            ((u0 & 7) << 18) |\n            (u1 << 12) |\n            (u2 << 6) |\n            (heapOrArray[idx++] & 63);\n        }\n\n        if (u0 < 0x10000) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 0x10000;\n          str += String.fromCharCode(\n            0xd800 | (ch >> 10),\n            0xdc00 | (ch & 0x3ff),\n          );\n        }\n      }\n      return str;\n    };\n\n    var FS_stdin_getChar_buffer = [];\n\n    var lengthBytesUTF8 = (str) => {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        var c = str.charCodeAt(i);\n        if (c <= 0x7f) {\n          len++;\n        } else if (c <= 0x7ff) {\n          len += 2;\n        } else if (c >= 0xd800 && c <= 0xdfff) {\n          len += 4;\n          ++i;\n        } else {\n          len += 3;\n        }\n      }\n      return len;\n    };\n\n    var stringToUTF8Array = (str, heap, outIdx, maxBytesToWrite) => {\n      if (!(maxBytesToWrite > 0)) return 0;\n\n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1;\n      for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n        if (u >= 0xd800 && u <= 0xdfff) {\n          var u1 = str.charCodeAt(++i);\n          u = (0x10000 + ((u & 0x3ff) << 10)) | (u1 & 0x3ff);\n        }\n        if (u <= 0x7f) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 0x7ff) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 0xc0 | (u >> 6);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else if (u <= 0xffff) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 0xe0 | (u >> 12);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          heap[outIdx++] = 0xf0 | (u >> 18);\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        }\n      }\n\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    };\n\n    function intArrayFromString(stringy, dontAddNull, length) {\n      var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n      var u8array = new Array(len);\n      var numBytesWritten = stringToUTF8Array(\n        stringy,\n        u8array,\n        0,\n        u8array.length,\n      );\n      if (dontAddNull) u8array.length = numBytesWritten;\n      return u8array;\n    }\n    var FS_stdin_getChar = () => {\n      if (!FS_stdin_getChar_buffer.length) {\n        var result = null;\n        if (\n          typeof window != 'undefined' &&\n          typeof window.prompt == 'function'\n        ) {\n          result = window.prompt('Input: ');\n          if (result !== null) {\n            result += '\\n';\n          }\n        } else {\n        }\n        if (!result) {\n          return null;\n        }\n        FS_stdin_getChar_buffer = intArrayFromString(result, true);\n      }\n      return FS_stdin_getChar_buffer.shift();\n    };\n    var TTY = {\n      ttys: [],\n      init() {},\n      shutdown() {},\n      register(dev, ops) {\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\n        FS.registerDevice(dev, TTY.stream_ops);\n      },\n      stream_ops: {\n        open(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        },\n        close(stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n        fsync(stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n        read(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === undefined && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === undefined) break;\n            bytesRead++;\n            buffer[offset + i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        },\n        write(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        },\n      },\n      default_tty_ops: {\n        get_char(tty) {\n          return FS_stdin_getChar();\n        },\n        put_char(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        fsync(tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          }\n        },\n        ioctl_tcgets(tty) {\n          return {\n            c_iflag: 25856,\n            c_oflag: 5,\n            c_cflag: 191,\n            c_lflag: 35387,\n            c_cc: [\n              0x03, 0x1c, 0x7f, 0x15, 0x04, 0x00, 0x01, 0x00, 0x11, 0x13, 0x1a,\n              0x00, 0x12, 0x0f, 0x17, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n            ],\n          };\n        },\n        ioctl_tcsets(tty, optional_actions, data) {\n          return 0;\n        },\n        ioctl_tiocgwinsz(tty) {\n          return [24, 80];\n        },\n      },\n      default_tty1_ops: {\n        put_char(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        fsync(tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          }\n        },\n      },\n    };\n\n    var zeroMemory = (address, size) => {\n      HEAPU8.fill(0, address, address + size);\n    };\n\n    var alignMemory = (size, alignment) => {\n      return Math.ceil(size / alignment) * alignment;\n    };\n    var mmapAlloc = (size) => {\n      size = alignMemory(size, 65536);\n      var ptr = _emscripten_builtin_memalign(65536, size);\n      if (ptr) zeroMemory(ptr, size);\n      return ptr;\n    };\n    var MEMFS = {\n      ops_table: null,\n      mount(mount) {\n        return MEMFS.createNode(null, '/', 16384 | 511, 0);\n      },\n      createNode(parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n          throw new FS.ErrnoError(63);\n        }\n        MEMFS.ops_table ||= {\n          dir: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n              lookup: MEMFS.node_ops.lookup,\n              mknod: MEMFS.node_ops.mknod,\n              rename: MEMFS.node_ops.rename,\n              unlink: MEMFS.node_ops.unlink,\n              rmdir: MEMFS.node_ops.rmdir,\n              readdir: MEMFS.node_ops.readdir,\n              symlink: MEMFS.node_ops.symlink,\n            },\n            stream: {\n              llseek: MEMFS.stream_ops.llseek,\n            },\n          },\n          file: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n            },\n            stream: {\n              llseek: MEMFS.stream_ops.llseek,\n              read: MEMFS.stream_ops.read,\n              write: MEMFS.stream_ops.write,\n              allocate: MEMFS.stream_ops.allocate,\n              mmap: MEMFS.stream_ops.mmap,\n              msync: MEMFS.stream_ops.msync,\n            },\n          },\n          link: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n              readlink: MEMFS.node_ops.readlink,\n            },\n            stream: {},\n          },\n          chrdev: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n            },\n            stream: FS.chrdev_stream_ops,\n          },\n        };\n        var node = FS.createNode(parent, name, mode, dev);\n        if (FS.isDir(node.mode)) {\n          node.node_ops = MEMFS.ops_table.dir.node;\n          node.stream_ops = MEMFS.ops_table.dir.stream;\n          node.contents = {};\n        } else if (FS.isFile(node.mode)) {\n          node.node_ops = MEMFS.ops_table.file.node;\n          node.stream_ops = MEMFS.ops_table.file.stream;\n          node.usedBytes = 0;\n\n          node.contents = null;\n        } else if (FS.isLink(node.mode)) {\n          node.node_ops = MEMFS.ops_table.link.node;\n          node.stream_ops = MEMFS.ops_table.link.stream;\n        } else if (FS.isChrdev(node.mode)) {\n          node.node_ops = MEMFS.ops_table.chrdev.node;\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n        node.timestamp = Date.now();\n\n        if (parent) {\n          parent.contents[name] = node;\n          parent.timestamp = node.timestamp;\n        }\n        return node;\n      },\n      getFileDataAsTypedArray(node) {\n        if (!node.contents) return new Uint8Array(0);\n        if (node.contents.subarray)\n          return node.contents.subarray(0, node.usedBytes);\n        return new Uint8Array(node.contents);\n      },\n      expandFileStorage(node, newCapacity) {\n        var prevCapacity = node.contents ? node.contents.length : 0;\n        if (prevCapacity >= newCapacity) return;\n\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n        newCapacity = Math.max(\n          newCapacity,\n          (prevCapacity *\n            (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) >>>\n            0,\n        );\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\n        var oldContents = node.contents;\n        node.contents = new Uint8Array(newCapacity);\n        if (node.usedBytes > 0)\n          node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n      },\n      resizeFileStorage(node, newSize) {\n        if (node.usedBytes == newSize) return;\n        if (newSize == 0) {\n          node.contents = null;\n          node.usedBytes = 0;\n        } else {\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newSize);\n          if (oldContents) {\n            node.contents.set(\n              oldContents.subarray(0, Math.min(newSize, node.usedBytes)),\n            );\n          }\n          node.usedBytes = newSize;\n        }\n      },\n      node_ops: {\n        getattr(node) {\n          var attr = {};\n\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        },\n        setattr(node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== undefined) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        },\n        lookup(parent, name) {\n          throw FS.genericErrors[44];\n        },\n        mknod(parent, name, mode, dev) {\n          return MEMFS.createNode(parent, name, mode, dev);\n        },\n        rename(old_node, new_dir, new_name) {\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {}\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n\n          delete old_node.parent.contents[old_node.name];\n          old_node.parent.timestamp = Date.now();\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          new_dir.timestamp = old_node.parent.timestamp;\n        },\n        unlink(parent, name) {\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        rmdir(parent, name) {\n          var node = FS.lookupNode(parent, name);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        readdir(node) {\n          var entries = ['.', '..'];\n          for (var key of Object.keys(node.contents)) {\n            entries.push(key);\n          }\n          return entries;\n        },\n        symlink(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        },\n        readlink(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        },\n      },\n      stream_ops: {\n        read(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes) return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) {\n            buffer.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++)\n              buffer[offset + i] = contents[position + i];\n          }\n          return size;\n        },\n        write(stream, buffer, offset, length, position, canOwn) {\n          if (buffer.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n\n          if (!length) return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n\n          if (buffer.subarray && (!node.contents || node.contents.subarray)) {\n            if (canOwn) {\n              node.contents = buffer.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) {\n              node.contents = buffer.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) {\n              node.contents.set(\n                buffer.subarray(offset, offset + length),\n                position,\n              );\n              return length;\n            }\n          }\n\n          MEMFS.expandFileStorage(node, position + length);\n          if (node.contents.subarray && buffer.subarray) {\n            node.contents.set(\n              buffer.subarray(offset, offset + length),\n              position,\n            );\n          } else {\n            for (var i = 0; i < length; i++) {\n              node.contents[position + i] = buffer[offset + i];\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        },\n        llseek(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        },\n        allocate(stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(\n            stream.node.usedBytes,\n            offset + length,\n          );\n        },\n        mmap(stream, length, position, prot, flags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n\n          if (!(flags & 2) && contents && contents.buffer === HEAP8.buffer) {\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            if (contents) {\n              if (position > 0 || position + length < contents.length) {\n                if (contents.subarray) {\n                  contents = contents.subarray(position, position + length);\n                } else {\n                  contents = Array.prototype.slice.call(\n                    contents,\n                    position,\n                    position + length,\n                  );\n                }\n              }\n              HEAP8.set(contents, ptr);\n            }\n          }\n          return { ptr, allocated };\n        },\n        msync(stream, buffer, offset, length, mmapFlags) {\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n\n          return 0;\n        },\n      },\n    };\n\n    var asyncLoad = (url, onload, onerror, noRunDep) => {\n      var dep = !noRunDep ? getUniqueRunDependency(`al ${url}`) : '';\n      readAsync(url).then(\n        (arrayBuffer) => {\n          onload(new Uint8Array(arrayBuffer));\n          if (dep) removeRunDependency(dep);\n        },\n        (err) => {\n          if (onerror) {\n            onerror();\n          } else {\n            throw `Loading data file \"${url}\" failed.`;\n          }\n        },\n      );\n      if (dep) addRunDependency(dep);\n    };\n\n    var FS_createDataFile = (\n      parent,\n      name,\n      fileData,\n      canRead,\n      canWrite,\n      canOwn,\n    ) => {\n      FS.createDataFile(parent, name, fileData, canRead, canWrite, canOwn);\n    };\n\n    var preloadPlugins = Module['preloadPlugins'] || [];\n    var FS_handledByPreloadPlugin = (byteArray, fullname, finish, onerror) => {\n      if (typeof Browser != 'undefined') Browser.init();\n\n      var handled = false;\n      preloadPlugins.forEach((plugin) => {\n        if (handled) return;\n        if (plugin['canHandle'](fullname)) {\n          plugin['handle'](byteArray, fullname, finish, onerror);\n          handled = true;\n        }\n      });\n      return handled;\n    };\n    var FS_createPreloadedFile = (\n      parent,\n      name,\n      url,\n      canRead,\n      canWrite,\n      onload,\n      onerror,\n      dontCreateFile,\n      canOwn,\n      preFinish,\n    ) => {\n      var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\n      var dep = getUniqueRunDependency(`cp ${fullname}`);\n      function processData(byteArray) {\n        function finish(byteArray) {\n          preFinish?.();\n          if (!dontCreateFile) {\n            FS_createDataFile(\n              parent,\n              name,\n              byteArray,\n              canRead,\n              canWrite,\n              canOwn,\n            );\n          }\n          onload?.();\n          removeRunDependency(dep);\n        }\n        if (\n          FS_handledByPreloadPlugin(byteArray, fullname, finish, () => {\n            onerror?.();\n            removeRunDependency(dep);\n          })\n        ) {\n          return;\n        }\n        finish(byteArray);\n      }\n      addRunDependency(dep);\n      if (typeof url == 'string') {\n        asyncLoad(url, processData, onerror);\n      } else {\n        processData(url);\n      }\n    };\n\n    var FS_modeStringToFlags = (str) => {\n      var flagModes = {\n        r: 0,\n        'r+': 2,\n        w: 512 | 64 | 1,\n        'w+': 512 | 64 | 2,\n        a: 1024 | 64 | 1,\n        'a+': 1024 | 64 | 2,\n      };\n      var flags = flagModes[str];\n      if (typeof flags == 'undefined') {\n        throw new Error(`Unknown file open mode: ${str}`);\n      }\n      return flags;\n    };\n\n    var FS_getMode = (canRead, canWrite) => {\n      var mode = 0;\n      if (canRead) mode |= 292 | 73;\n      if (canWrite) mode |= 146;\n      return mode;\n    };\n\n    var FS = {\n      root: null,\n      mounts: [],\n      devices: {},\n      streams: [],\n      nextInode: 1,\n      nameTable: null,\n      currentPath: '/',\n      initialized: false,\n      ignorePermissions: true,\n      ErrnoError: class {\n        constructor(errno) {\n          this.name = 'ErrnoError';\n          this.errno = errno;\n        }\n      },\n      genericErrors: {},\n      filesystems: null,\n      syncFSRequests: 0,\n      readFiles: {},\n      FSStream: class {\n        constructor() {\n          this.shared = {};\n        }\n        get object() {\n          return this.node;\n        }\n        set object(val) {\n          this.node = val;\n        }\n        get isRead() {\n          return (this.flags & 2097155) !== 1;\n        }\n        get isWrite() {\n          return (this.flags & 2097155) !== 0;\n        }\n        get isAppend() {\n          return this.flags & 1024;\n        }\n        get flags() {\n          return this.shared.flags;\n        }\n        set flags(val) {\n          this.shared.flags = val;\n        }\n        get position() {\n          return this.shared.position;\n        }\n        set position(val) {\n          this.shared.position = val;\n        }\n      },\n      FSNode: class {\n        constructor(parent, name, mode, rdev) {\n          if (!parent) {\n            parent = this;\n          }\n          this.parent = parent;\n          this.mount = parent.mount;\n          this.mounted = null;\n          this.id = FS.nextInode++;\n          this.name = name;\n          this.mode = mode;\n          this.node_ops = {};\n          this.stream_ops = {};\n          this.rdev = rdev;\n          this.readMode = 292 | 73;\n          this.writeMode = 146;\n        }\n        get read() {\n          return (this.mode & this.readMode) === this.readMode;\n        }\n        set read(val) {\n          val ? (this.mode |= this.readMode) : (this.mode &= ~this.readMode);\n        }\n        get write() {\n          return (this.mode & this.writeMode) === this.writeMode;\n        }\n        set write(val) {\n          val ? (this.mode |= this.writeMode) : (this.mode &= ~this.writeMode);\n        }\n        get isFolder() {\n          return FS.isDir(this.mode);\n        }\n        get isDevice() {\n          return FS.isChrdev(this.mode);\n        }\n      },\n      lookupPath(path, opts = {}) {\n        path = PATH_FS.resolve(path);\n\n        if (!path) return { path: '', node: null };\n\n        var defaults = {\n          follow_mount: true,\n          recurse_count: 0,\n        };\n        opts = Object.assign(defaults, opts);\n\n        if (opts.recurse_count > 8) {\n          throw new FS.ErrnoError(32);\n        }\n\n        var parts = path.split('/').filter((p) => !!p);\n\n        var current = FS.root;\n        var current_path = '/';\n\n        for (var i = 0; i < parts.length; i++) {\n          var islast = i === parts.length - 1;\n          if (islast && opts.parent) {\n            break;\n          }\n\n          current = FS.lookupNode(current, parts[i]);\n          current_path = PATH.join2(current_path, parts[i]);\n\n          if (FS.isMountpoint(current)) {\n            if (!islast || (islast && opts.follow_mount)) {\n              current = current.mounted.root;\n            }\n          }\n\n          if (!islast || opts.follow) {\n            var count = 0;\n            while (FS.isLink(current.mode)) {\n              var link = FS.readlink(current_path);\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n\n              var lookup = FS.lookupPath(current_path, {\n                recurse_count: opts.recurse_count + 1,\n              });\n              current = lookup.node;\n\n              if (count++ > 40) {\n                throw new FS.ErrnoError(32);\n              }\n            }\n          }\n        }\n\n        return { path: current_path, node: current };\n      },\n      getPath(node) {\n        var path;\n        while (true) {\n          if (FS.isRoot(node)) {\n            var mount = node.mount.mountpoint;\n            if (!path) return mount;\n            return mount[mount.length - 1] !== '/'\n              ? `${mount}/${path}`\n              : mount + path;\n          }\n          path = path ? `${node.name}/${path}` : node.name;\n          node = node.parent;\n        }\n      },\n      hashName(parentid, name) {\n        var hash = 0;\n\n        for (var i = 0; i < name.length; i++) {\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\n        }\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\n      },\n      hashAddNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        node.name_next = FS.nameTable[hash];\n        FS.nameTable[hash] = node;\n      },\n      hashRemoveNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        if (FS.nameTable[hash] === node) {\n          FS.nameTable[hash] = node.name_next;\n        } else {\n          var current = FS.nameTable[hash];\n          while (current) {\n            if (current.name_next === node) {\n              current.name_next = node.name_next;\n              break;\n            }\n            current = current.name_next;\n          }\n        }\n      },\n      lookupNode(parent, name) {\n        var errCode = FS.mayLookup(parent);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        var hash = FS.hashName(parent.id, name);\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n          var nodeName = node.name;\n          if (node.parent.id === parent.id && nodeName === name) {\n            return node;\n          }\n        }\n\n        return FS.lookup(parent, name);\n      },\n      createNode(parent, name, mode, rdev) {\n        var node = new FS.FSNode(parent, name, mode, rdev);\n\n        FS.hashAddNode(node);\n\n        return node;\n      },\n      destroyNode(node) {\n        FS.hashRemoveNode(node);\n      },\n      isRoot(node) {\n        return node === node.parent;\n      },\n      isMountpoint(node) {\n        return !!node.mounted;\n      },\n      isFile(mode) {\n        return (mode & 61440) === 32768;\n      },\n      isDir(mode) {\n        return (mode & 61440) === 16384;\n      },\n      isLink(mode) {\n        return (mode & 61440) === 40960;\n      },\n      isChrdev(mode) {\n        return (mode & 61440) === 8192;\n      },\n      isBlkdev(mode) {\n        return (mode & 61440) === 24576;\n      },\n      isFIFO(mode) {\n        return (mode & 61440) === 4096;\n      },\n      isSocket(mode) {\n        return (mode & 49152) === 49152;\n      },\n      flagsToPermissionString(flag) {\n        var perms = ['r', 'w', 'rw'][flag & 3];\n        if (flag & 512) {\n          perms += 'w';\n        }\n        return perms;\n      },\n      nodePermissions(node, perms) {\n        if (FS.ignorePermissions) {\n          return 0;\n        }\n\n        if (perms.includes('r') && !(node.mode & 292)) {\n          return 2;\n        } else if (perms.includes('w') && !(node.mode & 146)) {\n          return 2;\n        } else if (perms.includes('x') && !(node.mode & 73)) {\n          return 2;\n        }\n        return 0;\n      },\n      mayLookup(dir) {\n        if (!FS.isDir(dir.mode)) return 54;\n        var errCode = FS.nodePermissions(dir, 'x');\n        if (errCode) return errCode;\n        if (!dir.node_ops.lookup) return 2;\n        return 0;\n      },\n      mayCreate(dir, name) {\n        try {\n          var node = FS.lookupNode(dir, name);\n          return 20;\n        } catch (e) {}\n        return FS.nodePermissions(dir, 'wx');\n      },\n      mayDelete(dir, name, isdir) {\n        var node;\n        try {\n          node = FS.lookupNode(dir, name);\n        } catch (e) {\n          return e.errno;\n        }\n        var errCode = FS.nodePermissions(dir, 'wx');\n        if (errCode) {\n          return errCode;\n        }\n        if (isdir) {\n          if (!FS.isDir(node.mode)) {\n            return 54;\n          }\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n            return 10;\n          }\n        } else {\n          if (FS.isDir(node.mode)) {\n            return 31;\n          }\n        }\n        return 0;\n      },\n      mayOpen(node, flags) {\n        if (!node) {\n          return 44;\n        }\n        if (FS.isLink(node.mode)) {\n          return 32;\n        } else if (FS.isDir(node.mode)) {\n          if (FS.flagsToPermissionString(flags) !== 'r' || flags & 512) {\n            return 31;\n          }\n        }\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n      },\n      MAX_OPEN_FDS: 4096,\n      nextfd() {\n        for (var fd = 0; fd <= FS.MAX_OPEN_FDS; fd++) {\n          if (!FS.streams[fd]) {\n            return fd;\n          }\n        }\n        throw new FS.ErrnoError(33);\n      },\n      getStreamChecked(fd) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        return stream;\n      },\n      getStream: (fd) => FS.streams[fd],\n      createStream(stream, fd = -1) {\n        stream = Object.assign(new FS.FSStream(), stream);\n        if (fd == -1) {\n          fd = FS.nextfd();\n        }\n        stream.fd = fd;\n        FS.streams[fd] = stream;\n        return stream;\n      },\n      closeStream(fd) {\n        FS.streams[fd] = null;\n      },\n      dupStream(origStream, fd = -1) {\n        var stream = FS.createStream(origStream, fd);\n        stream.stream_ops?.dup?.(stream);\n        return stream;\n      },\n      chrdev_stream_ops: {\n        open(stream) {\n          var device = FS.getDevice(stream.node.rdev);\n\n          stream.stream_ops = device.stream_ops;\n\n          stream.stream_ops.open?.(stream);\n        },\n        llseek() {\n          throw new FS.ErrnoError(70);\n        },\n      },\n      major: (dev) => dev >> 8,\n      minor: (dev) => dev & 0xff,\n      makedev: (ma, mi) => (ma << 8) | mi,\n      registerDevice(dev, ops) {\n        FS.devices[dev] = { stream_ops: ops };\n      },\n      getDevice: (dev) => FS.devices[dev],\n      getMounts(mount) {\n        var mounts = [];\n        var check = [mount];\n\n        while (check.length) {\n          var m = check.pop();\n\n          mounts.push(m);\n\n          check.push(...m.mounts);\n        }\n\n        return mounts;\n      },\n      syncfs(populate, callback) {\n        if (typeof populate == 'function') {\n          callback = populate;\n          populate = false;\n        }\n\n        FS.syncFSRequests++;\n\n        if (FS.syncFSRequests > 1) {\n          err(\n            `warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`,\n          );\n        }\n\n        var mounts = FS.getMounts(FS.root.mount);\n        var completed = 0;\n\n        function doCallback(errCode) {\n          FS.syncFSRequests--;\n          return callback(errCode);\n        }\n\n        function done(errCode) {\n          if (errCode) {\n            if (!done.errored) {\n              done.errored = true;\n              return doCallback(errCode);\n            }\n            return;\n          }\n          if (++completed >= mounts.length) {\n            doCallback(null);\n          }\n        }\n\n        mounts.forEach((mount) => {\n          if (!mount.type.syncfs) {\n            return done(null);\n          }\n          mount.type.syncfs(mount, populate, done);\n        });\n      },\n      mount(type, opts, mountpoint) {\n        var root = mountpoint === '/';\n        var pseudo = !mountpoint;\n        var node;\n\n        if (root && FS.root) {\n          throw new FS.ErrnoError(10);\n        } else if (!root && !pseudo) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n\n          mountpoint = lookup.path;\n          node = lookup.node;\n\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n\n          if (!FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n        }\n\n        var mount = {\n          type,\n          opts,\n          mountpoint,\n          mounts: [],\n        };\n\n        var mountRoot = type.mount(mount);\n        mountRoot.mount = mount;\n        mount.root = mountRoot;\n\n        if (root) {\n          FS.root = mountRoot;\n        } else if (node) {\n          node.mounted = mount;\n\n          if (node.mount) {\n            node.mount.mounts.push(mount);\n          }\n        }\n\n        return mountRoot;\n      },\n      unmount(mountpoint) {\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n\n        if (!FS.isMountpoint(lookup.node)) {\n          throw new FS.ErrnoError(28);\n        }\n\n        var node = lookup.node;\n        var mount = node.mounted;\n        var mounts = FS.getMounts(mount);\n\n        Object.keys(FS.nameTable).forEach((hash) => {\n          var current = FS.nameTable[hash];\n\n          while (current) {\n            var next = current.name_next;\n\n            if (mounts.includes(current.mount)) {\n              FS.destroyNode(current);\n            }\n\n            current = next;\n          }\n        });\n\n        node.mounted = null;\n\n        var idx = node.mount.mounts.indexOf(mount);\n        node.mount.mounts.splice(idx, 1);\n      },\n      lookup(parent, name) {\n        return parent.node_ops.lookup(parent, name);\n      },\n      mknod(path, mode, dev) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        if (!name || name === '.' || name === '..') {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.mayCreate(parent, name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.mknod) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.mknod(parent, name, mode, dev);\n      },\n      create(path, mode) {\n        mode = mode !== undefined ? mode : 438;\n        mode &= 4095;\n        mode |= 32768;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdir(path, mode) {\n        mode = mode !== undefined ? mode : 511;\n        mode &= 511 | 512;\n        mode |= 16384;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdirTree(path, mode) {\n        var dirs = path.split('/');\n        var d = '';\n        for (var i = 0; i < dirs.length; ++i) {\n          if (!dirs[i]) continue;\n          d += '/' + dirs[i];\n          try {\n            FS.mkdir(d, mode);\n          } catch (e) {\n            if (e.errno != 20) throw e;\n          }\n        }\n      },\n      mkdev(path, mode, dev) {\n        if (typeof dev == 'undefined') {\n          dev = mode;\n          mode = 438;\n        }\n        mode |= 8192;\n        return FS.mknod(path, mode, dev);\n      },\n      symlink(oldpath, newpath) {\n        if (!PATH_FS.resolve(oldpath)) {\n          throw new FS.ErrnoError(44);\n        }\n        var lookup = FS.lookupPath(newpath, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var newname = PATH.basename(newpath);\n        var errCode = FS.mayCreate(parent, newname);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.symlink) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.symlink(parent, newname, oldpath);\n      },\n      rename(old_path, new_path) {\n        var old_dirname = PATH.dirname(old_path);\n        var new_dirname = PATH.dirname(new_path);\n        var old_name = PATH.basename(old_path);\n        var new_name = PATH.basename(new_path);\n\n        var lookup, old_dir, new_dir;\n\n        lookup = FS.lookupPath(old_path, { parent: true });\n        old_dir = lookup.node;\n        lookup = FS.lookupPath(new_path, { parent: true });\n        new_dir = lookup.node;\n\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n\n        if (old_dir.mount !== new_dir.mount) {\n          throw new FS.ErrnoError(75);\n        }\n\n        var old_node = FS.lookupNode(old_dir, old_name);\n\n        var relative = PATH_FS.relative(old_path, new_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(28);\n        }\n\n        relative = PATH_FS.relative(new_path, old_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(55);\n        }\n\n        var new_node;\n        try {\n          new_node = FS.lookupNode(new_dir, new_name);\n        } catch (e) {}\n\n        if (old_node === new_node) {\n          return;\n        }\n\n        var isdir = FS.isDir(old_node.mode);\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        errCode = new_node\n          ? FS.mayDelete(new_dir, new_name, isdir)\n          : FS.mayCreate(new_dir, new_name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!old_dir.node_ops.rename) {\n          throw new FS.ErrnoError(63);\n        }\n        if (\n          FS.isMountpoint(old_node) ||\n          (new_node && FS.isMountpoint(new_node))\n        ) {\n          throw new FS.ErrnoError(10);\n        }\n\n        if (new_dir !== old_dir) {\n          errCode = FS.nodePermissions(old_dir, 'w');\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n\n        FS.hashRemoveNode(old_node);\n\n        try {\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\n\n          old_node.parent = new_dir;\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.hashAddNode(old_node);\n        }\n      },\n      rmdir(path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, true);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.rmdir) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.rmdir(parent, name);\n        FS.destroyNode(node);\n      },\n      readdir(path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node.node_ops.readdir) {\n          throw new FS.ErrnoError(54);\n        }\n        return node.node_ops.readdir(node);\n      },\n      unlink(path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, false);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.unlink) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.unlink(parent, name);\n        FS.destroyNode(node);\n      },\n      readlink(path) {\n        var lookup = FS.lookupPath(path);\n        var link = lookup.node;\n        if (!link) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!link.node_ops.readlink) {\n          throw new FS.ErrnoError(28);\n        }\n        return PATH_FS.resolve(\n          FS.getPath(link.parent),\n          link.node_ops.readlink(link),\n        );\n      },\n      stat(path, dontFollow) {\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\n        var node = lookup.node;\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!node.node_ops.getattr) {\n          throw new FS.ErrnoError(63);\n        }\n        return node.node_ops.getattr(node);\n      },\n      lstat(path) {\n        return FS.stat(path, true);\n      },\n      chmod(path, mode, dontFollow) {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          mode: (mode & 4095) | (node.mode & ~4095),\n          timestamp: Date.now(),\n        });\n      },\n      lchmod(path, mode) {\n        FS.chmod(path, mode, true);\n      },\n      fchmod(fd, mode) {\n        var stream = FS.getStreamChecked(fd);\n        FS.chmod(stream.node, mode);\n      },\n      chown(path, uid, gid, dontFollow) {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          timestamp: Date.now(),\n        });\n      },\n      lchown(path, uid, gid) {\n        FS.chown(path, uid, gid, true);\n      },\n      fchown(fd, uid, gid) {\n        var stream = FS.getStreamChecked(fd);\n        FS.chown(stream.node, uid, gid);\n      },\n      truncate(path, len) {\n        if (len < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!FS.isFile(node.mode)) {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.nodePermissions(node, 'w');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        node.node_ops.setattr(node, {\n          size: len,\n          timestamp: Date.now(),\n        });\n      },\n      ftruncate(fd, len) {\n        var stream = FS.getStreamChecked(fd);\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(28);\n        }\n        FS.truncate(stream.node, len);\n      },\n      utime(path, atime, mtime) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        node.node_ops.setattr(node, {\n          timestamp: Math.max(atime, mtime),\n        });\n      },\n      open(path, flags, mode) {\n        if (path === '') {\n          throw new FS.ErrnoError(44);\n        }\n        flags = typeof flags == 'string' ? FS_modeStringToFlags(flags) : flags;\n        if (flags & 64) {\n          mode = typeof mode == 'undefined' ? 438 : mode;\n          mode = (mode & 4095) | 32768;\n        } else {\n          mode = 0;\n        }\n        var node;\n        if (typeof path == 'object') {\n          node = path;\n        } else {\n          path = PATH.normalize(path);\n          try {\n            var lookup = FS.lookupPath(path, {\n              follow: !(flags & 131072),\n            });\n            node = lookup.node;\n          } catch (e) {}\n        }\n\n        var created = false;\n        if (flags & 64) {\n          if (node) {\n            if (flags & 128) {\n              throw new FS.ErrnoError(20);\n            }\n          } else {\n            node = FS.mknod(path, mode, 0);\n            created = true;\n          }\n        }\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n\n        if (FS.isChrdev(node.mode)) {\n          flags &= ~512;\n        }\n\n        if (flags & 65536 && !FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n\n        if (!created) {\n          var errCode = FS.mayOpen(node, flags);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n\n        if (flags & 512 && !created) {\n          FS.truncate(node, 0);\n        }\n\n        flags &= ~(128 | 512 | 131072);\n\n        var stream = FS.createStream({\n          node,\n          path: FS.getPath(node),\n          flags,\n          seekable: true,\n          position: 0,\n          stream_ops: node.stream_ops,\n\n          ungotten: [],\n          error: false,\n        });\n\n        if (stream.stream_ops.open) {\n          stream.stream_ops.open(stream);\n        }\n        if (Module['logReadFiles'] && !(flags & 1)) {\n          if (!(path in FS.readFiles)) {\n            FS.readFiles[path] = 1;\n          }\n        }\n        return stream;\n      },\n      close(stream) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (stream.getdents) stream.getdents = null;\n        try {\n          if (stream.stream_ops.close) {\n            stream.stream_ops.close(stream);\n          }\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.closeStream(stream.fd);\n        }\n        stream.fd = null;\n      },\n      isClosed(stream) {\n        return stream.fd === null;\n      },\n      llseek(stream, offset, whence) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!stream.seekable || !stream.stream_ops.llseek) {\n          throw new FS.ErrnoError(70);\n        }\n        if (whence != 0 && whence != 1 && whence != 2) {\n          throw new FS.ErrnoError(28);\n        }\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\n        stream.ungotten = [];\n        return stream.position;\n      },\n      read(stream, buffer, offset, length, position) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.read) {\n          throw new FS.ErrnoError(28);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesRead = stream.stream_ops.read(\n          stream,\n          buffer,\n          offset,\n          length,\n          position,\n        );\n        if (!seeking) stream.position += bytesRead;\n        return bytesRead;\n      },\n      write(stream, buffer, offset, length, position, canOwn) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.write) {\n          throw new FS.ErrnoError(28);\n        }\n        if (stream.seekable && stream.flags & 1024) {\n          FS.llseek(stream, 0, 2);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesWritten = stream.stream_ops.write(\n          stream,\n          buffer,\n          offset,\n          length,\n          position,\n          canOwn,\n        );\n        if (!seeking) stream.position += bytesWritten;\n        return bytesWritten;\n      },\n      allocate(stream, offset, length) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (offset < 0 || length <= 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (!stream.stream_ops.allocate) {\n          throw new FS.ErrnoError(138);\n        }\n        stream.stream_ops.allocate(stream, offset, length);\n      },\n      mmap(stream, length, position, prot, flags) {\n        if (\n          (prot & 2) !== 0 &&\n          (flags & 2) === 0 &&\n          (stream.flags & 2097155) !== 2\n        ) {\n          throw new FS.ErrnoError(2);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(2);\n        }\n        if (!stream.stream_ops.mmap) {\n          throw new FS.ErrnoError(43);\n        }\n        if (!length) {\n          throw new FS.ErrnoError(28);\n        }\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\n      },\n      msync(stream, buffer, offset, length, mmapFlags) {\n        if (!stream.stream_ops.msync) {\n          return 0;\n        }\n        return stream.stream_ops.msync(\n          stream,\n          buffer,\n          offset,\n          length,\n          mmapFlags,\n        );\n      },\n      ioctl(stream, cmd, arg) {\n        if (!stream.stream_ops.ioctl) {\n          throw new FS.ErrnoError(59);\n        }\n        return stream.stream_ops.ioctl(stream, cmd, arg);\n      },\n      readFile(path, opts = {}) {\n        opts.flags = opts.flags || 0;\n        opts.encoding = opts.encoding || 'binary';\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\n          throw new Error(`Invalid encoding type \"${opts.encoding}\"`);\n        }\n        var ret;\n        var stream = FS.open(path, opts.flags);\n        var stat = FS.stat(path);\n        var length = stat.size;\n        var buf = new Uint8Array(length);\n        FS.read(stream, buf, 0, length, 0);\n        if (opts.encoding === 'utf8') {\n          ret = UTF8ArrayToString(buf);\n        } else if (opts.encoding === 'binary') {\n          ret = buf;\n        }\n        FS.close(stream);\n        return ret;\n      },\n      writeFile(path, data, opts = {}) {\n        opts.flags = opts.flags || 577;\n        var stream = FS.open(path, opts.flags, opts.mode);\n        if (typeof data == 'string') {\n          var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n        } else if (ArrayBuffer.isView(data)) {\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n        } else {\n          throw new Error('Unsupported data type');\n        }\n        FS.close(stream);\n      },\n      cwd: () => FS.currentPath,\n      chdir(path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        if (lookup.node === null) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!FS.isDir(lookup.node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        var errCode = FS.nodePermissions(lookup.node, 'x');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        FS.currentPath = lookup.path;\n      },\n      createDefaultDirectories() {\n        FS.mkdir('/tmp');\n        FS.mkdir('/home');\n        FS.mkdir('/home/web_user');\n      },\n      createDefaultDevices() {\n        FS.mkdir('/dev');\n\n        FS.registerDevice(FS.makedev(1, 3), {\n          read: () => 0,\n          write: (stream, buffer, offset, length, pos) => length,\n        });\n        FS.mkdev('/dev/null', FS.makedev(1, 3));\n\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n        FS.mkdev('/dev/tty', FS.makedev(5, 0));\n        FS.mkdev('/dev/tty1', FS.makedev(6, 0));\n\n        var randomBuffer = new Uint8Array(1024),\n          randomLeft = 0;\n        var randomByte = () => {\n          if (randomLeft === 0) {\n            randomLeft = randomFill(randomBuffer).byteLength;\n          }\n          return randomBuffer[--randomLeft];\n        };\n        FS.createDevice('/dev', 'random', randomByte);\n        FS.createDevice('/dev', 'urandom', randomByte);\n\n        FS.mkdir('/dev/shm');\n        FS.mkdir('/dev/shm/tmp');\n      },\n      createSpecialDirectories() {\n        FS.mkdir('/proc');\n        var proc_self = FS.mkdir('/proc/self');\n        FS.mkdir('/proc/self/fd');\n        FS.mount(\n          {\n            mount() {\n              var node = FS.createNode(proc_self, 'fd', 16384 | 511, 73);\n              node.node_ops = {\n                lookup(parent, name) {\n                  var fd = +name;\n                  var stream = FS.getStreamChecked(fd);\n                  var ret = {\n                    parent: null,\n                    mount: { mountpoint: 'fake' },\n                    node_ops: { readlink: () => stream.path },\n                  };\n                  ret.parent = ret;\n                  return ret;\n                },\n              };\n              return node;\n            },\n          },\n          {},\n          '/proc/self/fd',\n        );\n      },\n      createStandardStreams(input, output, error) {\n        if (input) {\n          FS.createDevice('/dev', 'stdin', input);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdin');\n        }\n        if (output) {\n          FS.createDevice('/dev', 'stdout', null, output);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdout');\n        }\n        if (error) {\n          FS.createDevice('/dev', 'stderr', null, error);\n        } else {\n          FS.symlink('/dev/tty1', '/dev/stderr');\n        }\n\n        var stdin = FS.open('/dev/stdin', 0);\n        var stdout = FS.open('/dev/stdout', 1);\n        var stderr = FS.open('/dev/stderr', 1);\n      },\n      staticInit() {\n        [44].forEach((code) => {\n          FS.genericErrors[code] = new FS.ErrnoError(code);\n          FS.genericErrors[code].stack = '<generic error, no stack>';\n        });\n\n        FS.nameTable = new Array(4096);\n\n        FS.mount(MEMFS, {}, '/');\n\n        FS.createDefaultDirectories();\n        FS.createDefaultDevices();\n        FS.createSpecialDirectories();\n\n        FS.filesystems = {\n          MEMFS: MEMFS,\n        };\n      },\n      init(input, output, error) {\n        FS.initialized = true;\n\n        input ??= Module['stdin'];\n        output ??= Module['stdout'];\n        error ??= Module['stderr'];\n\n        FS.createStandardStreams(input, output, error);\n      },\n      quit() {\n        FS.initialized = false;\n\n        for (var i = 0; i < FS.streams.length; i++) {\n          var stream = FS.streams[i];\n          if (!stream) {\n            continue;\n          }\n          FS.close(stream);\n        }\n      },\n      findObject(path, dontResolveLastLink) {\n        var ret = FS.analyzePath(path, dontResolveLastLink);\n        if (!ret.exists) {\n          return null;\n        }\n        return ret.object;\n      },\n      analyzePath(path, dontResolveLastLink) {\n        try {\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          path = lookup.path;\n        } catch (e) {}\n        var ret = {\n          isRoot: false,\n          exists: false,\n          error: 0,\n          name: null,\n          path: null,\n          object: null,\n          parentExists: false,\n          parentPath: null,\n          parentObject: null,\n        };\n        try {\n          var lookup = FS.lookupPath(path, { parent: true });\n          ret.parentExists = true;\n          ret.parentPath = lookup.path;\n          ret.parentObject = lookup.node;\n          ret.name = PATH.basename(path);\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          ret.exists = true;\n          ret.path = lookup.path;\n          ret.object = lookup.node;\n          ret.name = lookup.node.name;\n          ret.isRoot = lookup.path === '/';\n        } catch (e) {\n          ret.error = e.errno;\n        }\n        return ret;\n      },\n      createPath(parent, path, canRead, canWrite) {\n        parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n        var parts = path.split('/').reverse();\n        while (parts.length) {\n          var part = parts.pop();\n          if (!part) continue;\n          var current = PATH.join2(parent, part);\n          try {\n            FS.mkdir(current);\n          } catch (e) {}\n          parent = current;\n        }\n        return current;\n      },\n      createFile(parent, name, properties, canRead, canWrite) {\n        var path = PATH.join2(\n          typeof parent == 'string' ? parent : FS.getPath(parent),\n          name,\n        );\n        var mode = FS_getMode(canRead, canWrite);\n        return FS.create(path, mode);\n      },\n      createDataFile(parent, name, data, canRead, canWrite, canOwn) {\n        var path = name;\n        if (parent) {\n          parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n          path = name ? PATH.join2(parent, name) : parent;\n        }\n        var mode = FS_getMode(canRead, canWrite);\n        var node = FS.create(path, mode);\n        if (data) {\n          if (typeof data == 'string') {\n            var arr = new Array(data.length);\n            for (var i = 0, len = data.length; i < len; ++i)\n              arr[i] = data.charCodeAt(i);\n            data = arr;\n          }\n\n          FS.chmod(node, mode | 146);\n          var stream = FS.open(node, 577);\n          FS.write(stream, data, 0, data.length, 0, canOwn);\n          FS.close(stream);\n          FS.chmod(node, mode);\n        }\n      },\n      createDevice(parent, name, input, output) {\n        var path = PATH.join2(\n          typeof parent == 'string' ? parent : FS.getPath(parent),\n          name,\n        );\n        var mode = FS_getMode(!!input, !!output);\n        FS.createDevice.major ??= 64;\n        var dev = FS.makedev(FS.createDevice.major++, 0);\n\n        FS.registerDevice(dev, {\n          open(stream) {\n            stream.seekable = false;\n          },\n          close(stream) {\n            if (output?.buffer?.length) {\n              output(10);\n            }\n          },\n          read(stream, buffer, offset, length, pos) {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === undefined && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === undefined) break;\n              bytesRead++;\n              buffer[offset + i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          },\n          write(stream, buffer, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer[offset + i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          },\n        });\n        return FS.mkdev(path, mode, dev);\n      },\n      forceLoadFile(obj) {\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents)\n          return true;\n        if (typeof XMLHttpRequest != 'undefined') {\n          throw new Error(\n            'Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.',\n          );\n        } else {\n          try {\n            obj.contents = readBinary(obj.url);\n            obj.usedBytes = obj.contents.length;\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n        }\n      },\n      createLazyFile(parent, name, url, canRead, canWrite) {\n        class LazyUint8Array {\n          constructor() {\n            this.lengthKnown = false;\n            this.chunks = [];\n          }\n          get(idx) {\n            if (idx > this.length - 1 || idx < 0) {\n              return undefined;\n            }\n            var chunkOffset = idx % this.chunkSize;\n            var chunkNum = (idx / this.chunkSize) | 0;\n            return this.getter(chunkNum)[chunkOffset];\n          }\n          setDataGetter(getter) {\n            this.getter = getter;\n          }\n          cacheLength() {\n            var xhr = new XMLHttpRequest();\n            xhr.open('HEAD', url, false);\n            xhr.send(null);\n            if (\n              !((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304)\n            )\n              throw new Error(\n                \"Couldn't load \" + url + '. Status: ' + xhr.status,\n              );\n            var datalength = Number(xhr.getResponseHeader('Content-length'));\n            var header;\n            var hasByteServing =\n              (header = xhr.getResponseHeader('Accept-Ranges')) &&\n              header === 'bytes';\n            var usesGzip =\n              (header = xhr.getResponseHeader('Content-Encoding')) &&\n              header === 'gzip';\n\n            var chunkSize = 1024 * 1024;\n\n            if (!hasByteServing) chunkSize = datalength;\n\n            var doXHR = (from, to) => {\n              if (from > to)\n                throw new Error(\n                  'invalid range (' +\n                    from +\n                    ', ' +\n                    to +\n                    ') or no bytes requested!',\n                );\n              if (to > datalength - 1)\n                throw new Error(\n                  'only ' + datalength + ' bytes available! programmer error!',\n                );\n\n              var xhr = new XMLHttpRequest();\n              xhr.open('GET', url, false);\n              if (datalength !== chunkSize)\n                xhr.setRequestHeader('Range', 'bytes=' + from + '-' + to);\n\n              xhr.responseType = 'arraybuffer';\n              if (xhr.overrideMimeType) {\n                xhr.overrideMimeType('text/plain; charset=x-user-defined');\n              }\n\n              xhr.send(null);\n              if (\n                !((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304)\n              )\n                throw new Error(\n                  \"Couldn't load \" + url + '. Status: ' + xhr.status,\n                );\n              if (xhr.response !== undefined) {\n                return new Uint8Array(xhr.response || []);\n              }\n              return intArrayFromString(xhr.responseText || '', true);\n            };\n            var lazyArray = this;\n            lazyArray.setDataGetter((chunkNum) => {\n              var start = chunkNum * chunkSize;\n              var end = (chunkNum + 1) * chunkSize - 1;\n              end = Math.min(end, datalength - 1);\n              if (typeof lazyArray.chunks[chunkNum] == 'undefined') {\n                lazyArray.chunks[chunkNum] = doXHR(start, end);\n              }\n              if (typeof lazyArray.chunks[chunkNum] == 'undefined')\n                throw new Error('doXHR failed!');\n              return lazyArray.chunks[chunkNum];\n            });\n\n            if (usesGzip || !datalength) {\n              chunkSize = datalength = 1;\n              datalength = this.getter(0).length;\n              chunkSize = datalength;\n              out(\n                'LazyFiles on gzip forces download of the whole file when length is accessed',\n              );\n            }\n\n            this._length = datalength;\n            this._chunkSize = chunkSize;\n            this.lengthKnown = true;\n          }\n          get length() {\n            if (!this.lengthKnown) {\n              this.cacheLength();\n            }\n            return this._length;\n          }\n          get chunkSize() {\n            if (!this.lengthKnown) {\n              this.cacheLength();\n            }\n            return this._chunkSize;\n          }\n        }\n\n        if (typeof XMLHttpRequest != 'undefined') {\n          if (!ENVIRONMENT_IS_WORKER)\n            throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\n          var lazyArray = new LazyUint8Array();\n          var properties = { isDevice: false, contents: lazyArray };\n        } else {\n          var properties = { isDevice: false, url: url };\n        }\n\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\n\n        if (properties.contents) {\n          node.contents = properties.contents;\n        } else if (properties.url) {\n          node.contents = null;\n          node.url = properties.url;\n        }\n\n        Object.defineProperties(node, {\n          usedBytes: {\n            get: function () {\n              return this.contents.length;\n            },\n          },\n        });\n\n        var stream_ops = {};\n        var keys = Object.keys(node.stream_ops);\n        keys.forEach((key) => {\n          var fn = node.stream_ops[key];\n          stream_ops[key] = (...args) => {\n            FS.forceLoadFile(node);\n            return fn(...args);\n          };\n        });\n        function writeChunks(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= contents.length) return 0;\n          var size = Math.min(contents.length - position, length);\n          if (contents.slice) {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          } else {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents.get(position + i);\n            }\n          }\n          return size;\n        }\n\n        stream_ops.read = (stream, buffer, offset, length, position) => {\n          FS.forceLoadFile(node);\n          return writeChunks(stream, buffer, offset, length, position);\n        };\n\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\n          FS.forceLoadFile(node);\n          var ptr = mmapAlloc(length);\n          if (!ptr) {\n            throw new FS.ErrnoError(48);\n          }\n          writeChunks(stream, HEAP8, ptr, length, position);\n          return { ptr, allocated: true };\n        };\n        node.stream_ops = stream_ops;\n        return node;\n      },\n    };\n\n    var UTF8ToString = (ptr, maxBytesToRead) => {\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n    };\n    var SYSCALLS = {\n      DEFAULT_POLLMASK: 5,\n      calculateAt(dirfd, path, allowEmpty) {\n        if (PATH.isAbs(path)) {\n          return path;\n        }\n\n        var dir;\n        if (dirfd === -100) {\n          dir = FS.cwd();\n        } else {\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\n          dir = dirstream.path;\n        }\n        if (path.length == 0) {\n          if (!allowEmpty) {\n            throw new FS.ErrnoError(44);\n          }\n          return dir;\n        }\n        return PATH.join2(dir, path);\n      },\n      doStat(func, path, buf) {\n        var stat = func(path);\n        HEAP32[buf >> 2] = stat.dev;\n        HEAP32[(buf + 4) >> 2] = stat.mode;\n        HEAPU32[(buf + 8) >> 2] = stat.nlink;\n        HEAP32[(buf + 12) >> 2] = stat.uid;\n        HEAP32[(buf + 16) >> 2] = stat.gid;\n        HEAP32[(buf + 20) >> 2] = stat.rdev;\n        HEAP64[(buf + 24) >> 3] = BigInt(stat.size);\n        HEAP32[(buf + 32) >> 2] = 4096;\n        HEAP32[(buf + 36) >> 2] = stat.blocks;\n        var atime = stat.atime.getTime();\n        var mtime = stat.mtime.getTime();\n        var ctime = stat.ctime.getTime();\n        HEAP64[(buf + 40) >> 3] = BigInt(Math.floor(atime / 1000));\n        HEAPU32[(buf + 48) >> 2] = (atime % 1000) * 1000 * 1000;\n        HEAP64[(buf + 56) >> 3] = BigInt(Math.floor(mtime / 1000));\n        HEAPU32[(buf + 64) >> 2] = (mtime % 1000) * 1000 * 1000;\n        HEAP64[(buf + 72) >> 3] = BigInt(Math.floor(ctime / 1000));\n        HEAPU32[(buf + 80) >> 2] = (ctime % 1000) * 1000 * 1000;\n        HEAP64[(buf + 88) >> 3] = BigInt(stat.ino);\n        return 0;\n      },\n      doMsync(addr, stream, len, flags, offset) {\n        if (!FS.isFile(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (flags & 2) {\n          return 0;\n        }\n        var buffer = HEAPU8.slice(addr, addr + len);\n        FS.msync(stream, buffer, offset, len, flags);\n      },\n      getStreamFromFD(fd) {\n        var stream = FS.getStreamChecked(fd);\n        return stream;\n      },\n      varargs: undefined,\n      getStr(ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },\n    };\n    function ___syscall_chmod(path, mode) {\n      try {\n        path = SYSCALLS.getStr(path);\n        FS.chmod(path, mode);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_faccessat(dirfd, path, amode, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (amode & ~7) {\n          return -28;\n        }\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node) {\n          return -44;\n        }\n        var perms = '';\n        if (amode & 4) perms += 'r';\n        if (amode & 2) perms += 'w';\n        if (amode & 1) perms += 'x';\n        if (perms && FS.nodePermissions(node, perms)) {\n          return -2;\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fchmod(fd, mode) {\n      try {\n        FS.fchmod(fd, mode);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fchown32(fd, owner, group) {\n      try {\n        FS.fchown(fd, owner, group);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function syscallGetVarargI() {\n      var ret = HEAP32[+SYSCALLS.varargs >> 2];\n      SYSCALLS.varargs += 4;\n      return ret;\n    }\n    var syscallGetVarargP = syscallGetVarargI;\n\n    function ___syscall_fcntl64(fd, cmd, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        switch (cmd) {\n          case 0: {\n            var arg = syscallGetVarargI();\n            if (arg < 0) {\n              return -28;\n            }\n            while (FS.streams[arg]) {\n              arg++;\n            }\n            var newStream;\n            newStream = FS.dupStream(stream, arg);\n            return newStream.fd;\n          }\n          case 1:\n          case 2:\n            return 0;\n          case 3:\n            return stream.flags;\n          case 4: {\n            var arg = syscallGetVarargI();\n            stream.flags |= arg;\n            return 0;\n          }\n          case 12: {\n            var arg = syscallGetVarargP();\n            var offset = 0;\n\n            HEAP16[(arg + offset) >> 1] = 2;\n            return 0;\n          }\n          case 13:\n          case 14:\n            return 0;\n        }\n        return -28;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fstat64(fd, buf) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        return SYSCALLS.doStat(FS.stat, stream.path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    var INT53_MAX = 9007199254740992;\n\n    var INT53_MIN = -9007199254740992;\n    var bigintToI53Checked = (num) =>\n      num < INT53_MIN || num > INT53_MAX ? NaN : Number(num);\n    function ___syscall_ftruncate64(fd, length) {\n      length = bigintToI53Checked(length);\n\n      try {\n        if (isNaN(length)) return 61;\n        FS.ftruncate(fd, length);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    var stringToUTF8 = (str, outPtr, maxBytesToWrite) => {\n      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    };\n    function ___syscall_getcwd(buf, size) {\n      try {\n        if (size === 0) return -28;\n        var cwd = FS.cwd();\n        var cwdLengthInBytes = lengthBytesUTF8(cwd) + 1;\n        if (size < cwdLengthInBytes) return -68;\n        stringToUTF8(cwd, buf, size);\n        return cwdLengthInBytes;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_ioctl(fd, op, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        switch (op) {\n          case 21509: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21505: {\n            if (!stream.tty) return -59;\n            if (stream.tty.ops.ioctl_tcgets) {\n              var termios = stream.tty.ops.ioctl_tcgets(stream);\n              var argp = syscallGetVarargP();\n              HEAP32[argp >> 2] = termios.c_iflag || 0;\n              HEAP32[(argp + 4) >> 2] = termios.c_oflag || 0;\n              HEAP32[(argp + 8) >> 2] = termios.c_cflag || 0;\n              HEAP32[(argp + 12) >> 2] = termios.c_lflag || 0;\n              for (var i = 0; i < 32; i++) {\n                HEAP8[argp + i + 17] = termios.c_cc[i] || 0;\n              }\n              return 0;\n            }\n            return 0;\n          }\n          case 21510:\n          case 21511:\n          case 21512: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21506:\n          case 21507:\n          case 21508: {\n            if (!stream.tty) return -59;\n            if (stream.tty.ops.ioctl_tcsets) {\n              var argp = syscallGetVarargP();\n              var c_iflag = HEAP32[argp >> 2];\n              var c_oflag = HEAP32[(argp + 4) >> 2];\n              var c_cflag = HEAP32[(argp + 8) >> 2];\n              var c_lflag = HEAP32[(argp + 12) >> 2];\n              var c_cc = [];\n              for (var i = 0; i < 32; i++) {\n                c_cc.push(HEAP8[argp + i + 17]);\n              }\n              return stream.tty.ops.ioctl_tcsets(stream.tty, op, {\n                c_iflag,\n                c_oflag,\n                c_cflag,\n                c_lflag,\n                c_cc,\n              });\n            }\n            return 0;\n          }\n          case 21519: {\n            if (!stream.tty) return -59;\n            var argp = syscallGetVarargP();\n            HEAP32[argp >> 2] = 0;\n            return 0;\n          }\n          case 21520: {\n            if (!stream.tty) return -59;\n            return -28;\n          }\n          case 21531: {\n            var argp = syscallGetVarargP();\n            return FS.ioctl(stream, op, argp);\n          }\n          case 21523: {\n            if (!stream.tty) return -59;\n            if (stream.tty.ops.ioctl_tiocgwinsz) {\n              var winsize = stream.tty.ops.ioctl_tiocgwinsz(stream.tty);\n              var argp = syscallGetVarargP();\n              HEAP16[argp >> 1] = winsize[0];\n              HEAP16[(argp + 2) >> 1] = winsize[1];\n            }\n            return 0;\n          }\n          case 21524: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21515: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          default:\n            return -28;\n        }\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_lstat64(path, buf) {\n      try {\n        path = SYSCALLS.getStr(path);\n        return SYSCALLS.doStat(FS.lstat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_mkdirat(dirfd, path, mode) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n\n        path = PATH.normalize(path);\n        if (path[path.length - 1] === '/')\n          path = path.substr(0, path.length - 1);\n        FS.mkdir(path, mode, 0);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_newfstatat(dirfd, path, buf, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        var nofollow = flags & 256;\n        var allowEmpty = flags & 4096;\n        flags = flags & ~6400;\n        path = SYSCALLS.calculateAt(dirfd, path, allowEmpty);\n        return SYSCALLS.doStat(nofollow ? FS.lstat : FS.stat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_openat(dirfd, path, flags, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        var mode = varargs ? syscallGetVarargI() : 0;\n        return FS.open(path, flags, mode).fd;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_readlinkat(dirfd, path, buf, bufsize) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (bufsize <= 0) return -28;\n        var ret = FS.readlink(path);\n\n        var len = Math.min(bufsize, lengthBytesUTF8(ret));\n        var endChar = HEAP8[buf + len];\n        stringToUTF8(ret, buf, bufsize + 1);\n\n        HEAP8[buf + len] = endChar;\n        return len;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_rmdir(path) {\n      try {\n        path = SYSCALLS.getStr(path);\n        FS.rmdir(path);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_stat64(path, buf) {\n      try {\n        path = SYSCALLS.getStr(path);\n        return SYSCALLS.doStat(FS.stat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_unlinkat(dirfd, path, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (flags === 0) {\n          FS.unlink(path);\n        } else if (flags === 512) {\n          FS.rmdir(path);\n        } else {\n          abort('Invalid flags passed to unlinkat');\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    var readI53FromI64 = (ptr) => {\n      return HEAPU32[ptr >> 2] + HEAP32[(ptr + 4) >> 2] * 4294967296;\n    };\n\n    function ___syscall_utimensat(dirfd, path, times, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path, true);\n        var now = Date.now(),\n          atime,\n          mtime;\n        if (!times) {\n          atime = now;\n          mtime = now;\n        } else {\n          var seconds = readI53FromI64(times);\n          var nanoseconds = HEAP32[(times + 8) >> 2];\n          if (nanoseconds == 1073741823) {\n            atime = now;\n          } else if (nanoseconds == 1073741822) {\n            atime = -1;\n          } else {\n            atime = seconds * 1000 + nanoseconds / (1000 * 1000);\n          }\n          times += 16;\n          seconds = readI53FromI64(times);\n          nanoseconds = HEAP32[(times + 8) >> 2];\n          if (nanoseconds == 1073741823) {\n            mtime = now;\n          } else if (nanoseconds == 1073741822) {\n            mtime = -1;\n          } else {\n            mtime = seconds * 1000 + nanoseconds / (1000 * 1000);\n          }\n        }\n\n        if (mtime != -1 || atime != -1) {\n          FS.utime(path, atime, mtime);\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    var nowIsMonotonic = 1;\n    var __emscripten_get_now_is_monotonic = () => nowIsMonotonic;\n\n    var isLeapYear = (year) =>\n      year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n\n    var MONTH_DAYS_LEAP_CUMULATIVE = [\n      0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335,\n    ];\n\n    var MONTH_DAYS_REGULAR_CUMULATIVE = [\n      0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334,\n    ];\n    var ydayFromDate = (date) => {\n      var leap = isLeapYear(date.getFullYear());\n      var monthDaysCumulative = leap\n        ? MONTH_DAYS_LEAP_CUMULATIVE\n        : MONTH_DAYS_REGULAR_CUMULATIVE;\n      var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1;\n\n      return yday;\n    };\n\n    function __localtime_js(time, tmPtr) {\n      time = bigintToI53Checked(time);\n\n      var date = new Date(time * 1000);\n      HEAP32[tmPtr >> 2] = date.getSeconds();\n      HEAP32[(tmPtr + 4) >> 2] = date.getMinutes();\n      HEAP32[(tmPtr + 8) >> 2] = date.getHours();\n      HEAP32[(tmPtr + 12) >> 2] = date.getDate();\n      HEAP32[(tmPtr + 16) >> 2] = date.getMonth();\n      HEAP32[(tmPtr + 20) >> 2] = date.getFullYear() - 1900;\n      HEAP32[(tmPtr + 24) >> 2] = date.getDay();\n\n      var yday = ydayFromDate(date) | 0;\n      HEAP32[(tmPtr + 28) >> 2] = yday;\n      HEAP32[(tmPtr + 36) >> 2] = -(date.getTimezoneOffset() * 60);\n\n      var start = new Date(date.getFullYear(), 0, 1);\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n      var winterOffset = start.getTimezoneOffset();\n      var dst =\n        (summerOffset != winterOffset &&\n          date.getTimezoneOffset() == Math.min(winterOffset, summerOffset)) | 0;\n      HEAP32[(tmPtr + 32) >> 2] = dst;\n    }\n\n    function __mmap_js(len, prot, flags, fd, offset, allocated, addr) {\n      offset = bigintToI53Checked(offset);\n\n      try {\n        if (isNaN(offset)) return 61;\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var res = FS.mmap(stream, len, offset, prot, flags);\n        var ptr = res.ptr;\n        HEAP32[allocated >> 2] = res.allocated;\n        HEAPU32[addr >> 2] = ptr;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function __munmap_js(addr, len, prot, flags, fd, offset) {\n      offset = bigintToI53Checked(offset);\n\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        if (prot & 2) {\n          SYSCALLS.doMsync(addr, stream, len, flags, offset);\n        }\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    var __tzset_js = (timezone, daylight, std_name, dst_name) => {\n      var currentYear = new Date().getFullYear();\n      var winter = new Date(currentYear, 0, 1);\n      var summer = new Date(currentYear, 6, 1);\n      var winterOffset = winter.getTimezoneOffset();\n      var summerOffset = summer.getTimezoneOffset();\n\n      var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\n\n      HEAPU32[timezone >> 2] = stdTimezoneOffset * 60;\n\n      HEAP32[daylight >> 2] = Number(winterOffset != summerOffset);\n\n      var extractZone = (timezoneOffset) => {\n        var sign = timezoneOffset >= 0 ? '-' : '+';\n\n        var absOffset = Math.abs(timezoneOffset);\n        var hours = String(Math.floor(absOffset / 60)).padStart(2, '0');\n        var minutes = String(absOffset % 60).padStart(2, '0');\n\n        return `UTC${sign}${hours}${minutes}`;\n      };\n\n      var winterName = extractZone(winterOffset);\n      var summerName = extractZone(summerOffset);\n      if (summerOffset < winterOffset) {\n        stringToUTF8(winterName, std_name, 17);\n        stringToUTF8(summerName, dst_name, 17);\n      } else {\n        stringToUTF8(winterName, dst_name, 17);\n        stringToUTF8(summerName, std_name, 17);\n      }\n    };\n\n    var _emscripten_date_now = () => Date.now();\n\n    var _emscripten_get_now = () => performance.now();\n\n    var getHeapMax = () => 2147483648;\n\n    var growMemory = (size) => {\n      var b = wasmMemory.buffer;\n      var pages = ((size - b.byteLength + 65535) / 65536) | 0;\n      try {\n        wasmMemory.grow(pages);\n        updateMemoryViews();\n        return 1;\n      } catch (e) {}\n    };\n    var _emscripten_resize_heap = (requestedSize) => {\n      var oldSize = HEAPU8.length;\n\n      requestedSize >>>= 0;\n\n      var maxHeapSize = getHeapMax();\n      if (requestedSize > maxHeapSize) {\n        return false;\n      }\n\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n\n        overGrownHeapSize = Math.min(\n          overGrownHeapSize,\n          requestedSize + 100663296,\n        );\n\n        var newSize = Math.min(\n          maxHeapSize,\n          alignMemory(Math.max(requestedSize, overGrownHeapSize), 65536),\n        );\n\n        var replacement = growMemory(newSize);\n        if (replacement) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    var ENV = {};\n\n    var getExecutableName = () => {\n      return thisProgram || './this.program';\n    };\n    var getEnvStrings = () => {\n      if (!getEnvStrings.strings) {\n        var lang =\n          (\n            (typeof navigator == 'object' &&\n              navigator.languages &&\n              navigator.languages[0]) ||\n            'C'\n          ).replace('-', '_') + '.UTF-8';\n        var env = {\n          USER: 'web_user',\n          LOGNAME: 'web_user',\n          PATH: '/',\n          PWD: '/',\n          HOME: '/home/web_user',\n          LANG: lang,\n          _: getExecutableName(),\n        };\n\n        for (var x in ENV) {\n          if (ENV[x] === undefined) delete env[x];\n          else env[x] = ENV[x];\n        }\n        var strings = [];\n        for (var x in env) {\n          strings.push(`${x}=${env[x]}`);\n        }\n        getEnvStrings.strings = strings;\n      }\n      return getEnvStrings.strings;\n    };\n\n    var stringToAscii = (str, buffer) => {\n      for (var i = 0; i < str.length; ++i) {\n        HEAP8[buffer++] = str.charCodeAt(i);\n      }\n\n      HEAP8[buffer] = 0;\n    };\n    var _environ_get = (__environ, environ_buf) => {\n      var bufSize = 0;\n      getEnvStrings().forEach((string, i) => {\n        var ptr = environ_buf + bufSize;\n        HEAPU32[(__environ + i * 4) >> 2] = ptr;\n        stringToAscii(string, ptr);\n        bufSize += string.length + 1;\n      });\n      return 0;\n    };\n\n    var _environ_sizes_get = (penviron_count, penviron_buf_size) => {\n      var strings = getEnvStrings();\n      HEAPU32[penviron_count >> 2] = strings.length;\n      var bufSize = 0;\n      strings.forEach((string) => (bufSize += string.length + 1));\n      HEAPU32[penviron_buf_size >> 2] = bufSize;\n      return 0;\n    };\n\n    function _fd_close(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.close(stream);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_fdstat_get(fd, pbuf) {\n      try {\n        var rightsBase = 0;\n        var rightsInheriting = 0;\n        var flags = 0;\n        {\n          var stream = SYSCALLS.getStreamFromFD(fd);\n\n          var type = stream.tty\n            ? 2\n            : FS.isDir(stream.mode)\n              ? 3\n              : FS.isLink(stream.mode)\n                ? 7\n                : 4;\n        }\n        HEAP8[pbuf] = type;\n        HEAP16[(pbuf + 2) >> 1] = flags;\n        HEAP64[(pbuf + 8) >> 3] = BigInt(rightsBase);\n        HEAP64[(pbuf + 16) >> 3] = BigInt(rightsInheriting);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return e.errno;\n      }\n    }\n\n    var doReadv = (stream, iov, iovcnt, offset) => {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[(iov + 4) >> 2];\n        iov += 8;\n        var curr = FS.read(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (curr < len) break;\n        if (typeof offset != 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    };\n\n    function _fd_read(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doReadv(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_seek(fd, offset, whence, newOffset) {\n      offset = bigintToI53Checked(offset);\n\n      try {\n        if (isNaN(offset)) return 61;\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.llseek(stream, offset, whence);\n        HEAP64[newOffset >> 3] = BigInt(stream.position);\n        if (stream.getdents && offset === 0 && whence === 0)\n          stream.getdents = null;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_sync(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        if (stream.stream_ops?.fsync) {\n          return stream.stream_ops.fsync(stream);\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return e.errno;\n      }\n    }\n\n    var doWritev = (stream, iov, iovcnt, offset) => {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[(iov + 4) >> 2];\n        iov += 8;\n        var curr = FS.write(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (curr < len) {\n          break;\n        }\n        if (typeof offset != 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    };\n\n    function _fd_write(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doWritev(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return e.errno;\n      }\n    }\n\n    FS.createPreloadedFile = FS_createPreloadedFile;\n    FS.staticInit();\n\n    var wasmImports = {\n      __syscall_chmod: ___syscall_chmod,\n\n      __syscall_faccessat: ___syscall_faccessat,\n\n      __syscall_fchmod: ___syscall_fchmod,\n\n      __syscall_fchown32: ___syscall_fchown32,\n\n      __syscall_fcntl64: ___syscall_fcntl64,\n\n      __syscall_fstat64: ___syscall_fstat64,\n\n      __syscall_ftruncate64: ___syscall_ftruncate64,\n\n      __syscall_getcwd: ___syscall_getcwd,\n\n      __syscall_ioctl: ___syscall_ioctl,\n\n      __syscall_lstat64: ___syscall_lstat64,\n\n      __syscall_mkdirat: ___syscall_mkdirat,\n\n      __syscall_newfstatat: ___syscall_newfstatat,\n\n      __syscall_openat: ___syscall_openat,\n\n      __syscall_readlinkat: ___syscall_readlinkat,\n\n      __syscall_rmdir: ___syscall_rmdir,\n\n      __syscall_stat64: ___syscall_stat64,\n\n      __syscall_unlinkat: ___syscall_unlinkat,\n\n      __syscall_utimensat: ___syscall_utimensat,\n\n      _emscripten_get_now_is_monotonic: __emscripten_get_now_is_monotonic,\n\n      _localtime_js: __localtime_js,\n\n      _mmap_js: __mmap_js,\n\n      _munmap_js: __munmap_js,\n\n      _tzset_js: __tzset_js,\n\n      emscripten_date_now: _emscripten_date_now,\n\n      emscripten_get_now: _emscripten_get_now,\n\n      emscripten_resize_heap: _emscripten_resize_heap,\n\n      environ_get: _environ_get,\n\n      environ_sizes_get: _environ_sizes_get,\n\n      fd_close: _fd_close,\n\n      fd_fdstat_get: _fd_fdstat_get,\n\n      fd_read: _fd_read,\n\n      fd_seek: _fd_seek,\n\n      fd_sync: _fd_sync,\n\n      fd_write: _fd_write,\n\n      memory: wasmMemory,\n    };\n    var wasmExports = createWasm();\n    var ___wasm_call_ctors = () =>\n      (___wasm_call_ctors = wasmExports['__wasm_call_ctors'])();\n    var _sqlite3_status64 = (Module['_sqlite3_status64'] = (a0, a1, a2, a3) =>\n      (_sqlite3_status64 = Module['_sqlite3_status64'] =\n        wasmExports['sqlite3_status64'])(a0, a1, a2, a3));\n    var _sqlite3_status = (Module['_sqlite3_status'] = (a0, a1, a2, a3) =>\n      (_sqlite3_status = Module['_sqlite3_status'] =\n        wasmExports['sqlite3_status'])(a0, a1, a2, a3));\n    var _sqlite3_db_status = (Module['_sqlite3_db_status'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3_db_status = Module['_sqlite3_db_status'] =\n        wasmExports['sqlite3_db_status'])(a0, a1, a2, a3, a4));\n    var _sqlite3_msize = (Module['_sqlite3_msize'] = (a0) =>\n      (_sqlite3_msize = Module['_sqlite3_msize'] =\n        wasmExports['sqlite3_msize'])(a0));\n    var _sqlite3_vfs_find = (Module['_sqlite3_vfs_find'] = (a0) =>\n      (_sqlite3_vfs_find = Module['_sqlite3_vfs_find'] =\n        wasmExports['sqlite3_vfs_find'])(a0));\n    var _sqlite3_initialize = (Module['_sqlite3_initialize'] = () =>\n      (_sqlite3_initialize = Module['_sqlite3_initialize'] =\n        wasmExports['sqlite3_initialize'])());\n    var _sqlite3_malloc = (Module['_sqlite3_malloc'] = (a0) =>\n      (_sqlite3_malloc = Module['_sqlite3_malloc'] =\n        wasmExports['sqlite3_malloc'])(a0));\n    var _sqlite3_free = (Module['_sqlite3_free'] = (a0) =>\n      (_sqlite3_free = Module['_sqlite3_free'] = wasmExports['sqlite3_free'])(\n        a0,\n      ));\n    var _sqlite3_vfs_register = (Module['_sqlite3_vfs_register'] = (a0, a1) =>\n      (_sqlite3_vfs_register = Module['_sqlite3_vfs_register'] =\n        wasmExports['sqlite3_vfs_register'])(a0, a1));\n    var _sqlite3_vfs_unregister = (Module['_sqlite3_vfs_unregister'] = (a0) =>\n      (_sqlite3_vfs_unregister = Module['_sqlite3_vfs_unregister'] =\n        wasmExports['sqlite3_vfs_unregister'])(a0));\n    var _sqlite3_malloc64 = (Module['_sqlite3_malloc64'] = (a0) =>\n      (_sqlite3_malloc64 = Module['_sqlite3_malloc64'] =\n        wasmExports['sqlite3_malloc64'])(a0));\n    var _sqlite3_realloc = (Module['_sqlite3_realloc'] = (a0, a1) =>\n      (_sqlite3_realloc = Module['_sqlite3_realloc'] =\n        wasmExports['sqlite3_realloc'])(a0, a1));\n    var _sqlite3_realloc64 = (Module['_sqlite3_realloc64'] = (a0, a1) =>\n      (_sqlite3_realloc64 = Module['_sqlite3_realloc64'] =\n        wasmExports['sqlite3_realloc64'])(a0, a1));\n    var _sqlite3_value_text = (Module['_sqlite3_value_text'] = (a0) =>\n      (_sqlite3_value_text = Module['_sqlite3_value_text'] =\n        wasmExports['sqlite3_value_text'])(a0));\n    var _sqlite3_randomness = (Module['_sqlite3_randomness'] = (a0, a1) =>\n      (_sqlite3_randomness = Module['_sqlite3_randomness'] =\n        wasmExports['sqlite3_randomness'])(a0, a1));\n    var _sqlite3_stricmp = (Module['_sqlite3_stricmp'] = (a0, a1) =>\n      (_sqlite3_stricmp = Module['_sqlite3_stricmp'] =\n        wasmExports['sqlite3_stricmp'])(a0, a1));\n    var _sqlite3_strnicmp = (Module['_sqlite3_strnicmp'] = (a0, a1, a2) =>\n      (_sqlite3_strnicmp = Module['_sqlite3_strnicmp'] =\n        wasmExports['sqlite3_strnicmp'])(a0, a1, a2));\n    var _sqlite3_uri_parameter = (Module['_sqlite3_uri_parameter'] = (a0, a1) =>\n      (_sqlite3_uri_parameter = Module['_sqlite3_uri_parameter'] =\n        wasmExports['sqlite3_uri_parameter'])(a0, a1));\n    var _sqlite3_uri_boolean = (Module['_sqlite3_uri_boolean'] = (a0, a1, a2) =>\n      (_sqlite3_uri_boolean = Module['_sqlite3_uri_boolean'] =\n        wasmExports['sqlite3_uri_boolean'])(a0, a1, a2));\n    var _sqlite3_serialize = (Module['_sqlite3_serialize'] = (a0, a1, a2, a3) =>\n      (_sqlite3_serialize = Module['_sqlite3_serialize'] =\n        wasmExports['sqlite3_serialize'])(a0, a1, a2, a3));\n    var _sqlite3_prepare_v2 = (Module['_sqlite3_prepare_v2'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3_prepare_v2 = Module['_sqlite3_prepare_v2'] =\n        wasmExports['sqlite3_prepare_v2'])(a0, a1, a2, a3, a4));\n    var _sqlite3_step = (Module['_sqlite3_step'] = (a0) =>\n      (_sqlite3_step = Module['_sqlite3_step'] = wasmExports['sqlite3_step'])(\n        a0,\n      ));\n    var _sqlite3_column_int64 = (Module['_sqlite3_column_int64'] = (a0, a1) =>\n      (_sqlite3_column_int64 = Module['_sqlite3_column_int64'] =\n        wasmExports['sqlite3_column_int64'])(a0, a1));\n    var _sqlite3_reset = (Module['_sqlite3_reset'] = (a0) =>\n      (_sqlite3_reset = Module['_sqlite3_reset'] =\n        wasmExports['sqlite3_reset'])(a0));\n    var _sqlite3_exec = (Module['_sqlite3_exec'] = (a0, a1, a2, a3, a4) =>\n      (_sqlite3_exec = Module['_sqlite3_exec'] = wasmExports['sqlite3_exec'])(\n        a0,\n        a1,\n        a2,\n        a3,\n        a4,\n      ));\n    var _sqlite3_column_int = (Module['_sqlite3_column_int'] = (a0, a1) =>\n      (_sqlite3_column_int = Module['_sqlite3_column_int'] =\n        wasmExports['sqlite3_column_int'])(a0, a1));\n    var _sqlite3_finalize = (Module['_sqlite3_finalize'] = (a0) =>\n      (_sqlite3_finalize = Module['_sqlite3_finalize'] =\n        wasmExports['sqlite3_finalize'])(a0));\n    var _sqlite3_file_control = (Module['_sqlite3_file_control'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3_file_control = Module['_sqlite3_file_control'] =\n        wasmExports['sqlite3_file_control'])(a0, a1, a2, a3));\n    var _sqlite3_column_name = (Module['_sqlite3_column_name'] = (a0, a1) =>\n      (_sqlite3_column_name = Module['_sqlite3_column_name'] =\n        wasmExports['sqlite3_column_name'])(a0, a1));\n    var _sqlite3_column_text = (Module['_sqlite3_column_text'] = (a0, a1) =>\n      (_sqlite3_column_text = Module['_sqlite3_column_text'] =\n        wasmExports['sqlite3_column_text'])(a0, a1));\n    var _sqlite3_column_type = (Module['_sqlite3_column_type'] = (a0, a1) =>\n      (_sqlite3_column_type = Module['_sqlite3_column_type'] =\n        wasmExports['sqlite3_column_type'])(a0, a1));\n    var _sqlite3_errmsg = (Module['_sqlite3_errmsg'] = (a0) =>\n      (_sqlite3_errmsg = Module['_sqlite3_errmsg'] =\n        wasmExports['sqlite3_errmsg'])(a0));\n    var _sqlite3_deserialize = (Module['_sqlite3_deserialize'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n      a5,\n    ) =>\n      (_sqlite3_deserialize = Module['_sqlite3_deserialize'] =\n        wasmExports['sqlite3_deserialize'])(a0, a1, a2, a3, a4, a5));\n    var _sqlite3_clear_bindings = (Module['_sqlite3_clear_bindings'] = (a0) =>\n      (_sqlite3_clear_bindings = Module['_sqlite3_clear_bindings'] =\n        wasmExports['sqlite3_clear_bindings'])(a0));\n    var _sqlite3_value_blob = (Module['_sqlite3_value_blob'] = (a0) =>\n      (_sqlite3_value_blob = Module['_sqlite3_value_blob'] =\n        wasmExports['sqlite3_value_blob'])(a0));\n    var _sqlite3_value_bytes = (Module['_sqlite3_value_bytes'] = (a0) =>\n      (_sqlite3_value_bytes = Module['_sqlite3_value_bytes'] =\n        wasmExports['sqlite3_value_bytes'])(a0));\n    var _sqlite3_value_double = (Module['_sqlite3_value_double'] = (a0) =>\n      (_sqlite3_value_double = Module['_sqlite3_value_double'] =\n        wasmExports['sqlite3_value_double'])(a0));\n    var _sqlite3_value_int = (Module['_sqlite3_value_int'] = (a0) =>\n      (_sqlite3_value_int = Module['_sqlite3_value_int'] =\n        wasmExports['sqlite3_value_int'])(a0));\n    var _sqlite3_value_int64 = (Module['_sqlite3_value_int64'] = (a0) =>\n      (_sqlite3_value_int64 = Module['_sqlite3_value_int64'] =\n        wasmExports['sqlite3_value_int64'])(a0));\n    var _sqlite3_value_subtype = (Module['_sqlite3_value_subtype'] = (a0) =>\n      (_sqlite3_value_subtype = Module['_sqlite3_value_subtype'] =\n        wasmExports['sqlite3_value_subtype'])(a0));\n    var _sqlite3_value_pointer = (Module['_sqlite3_value_pointer'] = (a0, a1) =>\n      (_sqlite3_value_pointer = Module['_sqlite3_value_pointer'] =\n        wasmExports['sqlite3_value_pointer'])(a0, a1));\n    var _sqlite3_value_type = (Module['_sqlite3_value_type'] = (a0) =>\n      (_sqlite3_value_type = Module['_sqlite3_value_type'] =\n        wasmExports['sqlite3_value_type'])(a0));\n    var _sqlite3_value_nochange = (Module['_sqlite3_value_nochange'] = (a0) =>\n      (_sqlite3_value_nochange = Module['_sqlite3_value_nochange'] =\n        wasmExports['sqlite3_value_nochange'])(a0));\n    var _sqlite3_value_frombind = (Module['_sqlite3_value_frombind'] = (a0) =>\n      (_sqlite3_value_frombind = Module['_sqlite3_value_frombind'] =\n        wasmExports['sqlite3_value_frombind'])(a0));\n    var _sqlite3_value_dup = (Module['_sqlite3_value_dup'] = (a0) =>\n      (_sqlite3_value_dup = Module['_sqlite3_value_dup'] =\n        wasmExports['sqlite3_value_dup'])(a0));\n    var _sqlite3_value_free = (Module['_sqlite3_value_free'] = (a0) =>\n      (_sqlite3_value_free = Module['_sqlite3_value_free'] =\n        wasmExports['sqlite3_value_free'])(a0));\n    var _sqlite3_result_blob = (Module['_sqlite3_result_blob'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3_result_blob = Module['_sqlite3_result_blob'] =\n        wasmExports['sqlite3_result_blob'])(a0, a1, a2, a3));\n    var _sqlite3_result_error_toobig = (Module['_sqlite3_result_error_toobig'] =\n      (a0) =>\n        (_sqlite3_result_error_toobig = Module['_sqlite3_result_error_toobig'] =\n          wasmExports['sqlite3_result_error_toobig'])(a0));\n    var _sqlite3_result_error_nomem = (Module['_sqlite3_result_error_nomem'] = (\n      a0,\n    ) =>\n      (_sqlite3_result_error_nomem = Module['_sqlite3_result_error_nomem'] =\n        wasmExports['sqlite3_result_error_nomem'])(a0));\n    var _sqlite3_result_double = (Module['_sqlite3_result_double'] = (a0, a1) =>\n      (_sqlite3_result_double = Module['_sqlite3_result_double'] =\n        wasmExports['sqlite3_result_double'])(a0, a1));\n    var _sqlite3_result_error = (Module['_sqlite3_result_error'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_result_error = Module['_sqlite3_result_error'] =\n        wasmExports['sqlite3_result_error'])(a0, a1, a2));\n    var _sqlite3_result_int = (Module['_sqlite3_result_int'] = (a0, a1) =>\n      (_sqlite3_result_int = Module['_sqlite3_result_int'] =\n        wasmExports['sqlite3_result_int'])(a0, a1));\n    var _sqlite3_result_int64 = (Module['_sqlite3_result_int64'] = (a0, a1) =>\n      (_sqlite3_result_int64 = Module['_sqlite3_result_int64'] =\n        wasmExports['sqlite3_result_int64'])(a0, a1));\n    var _sqlite3_result_null = (Module['_sqlite3_result_null'] = (a0) =>\n      (_sqlite3_result_null = Module['_sqlite3_result_null'] =\n        wasmExports['sqlite3_result_null'])(a0));\n    var _sqlite3_result_pointer = (Module['_sqlite3_result_pointer'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3_result_pointer = Module['_sqlite3_result_pointer'] =\n        wasmExports['sqlite3_result_pointer'])(a0, a1, a2, a3));\n    var _sqlite3_result_subtype = (Module['_sqlite3_result_subtype'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3_result_subtype = Module['_sqlite3_result_subtype'] =\n        wasmExports['sqlite3_result_subtype'])(a0, a1));\n    var _sqlite3_result_text = (Module['_sqlite3_result_text'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3_result_text = Module['_sqlite3_result_text'] =\n        wasmExports['sqlite3_result_text'])(a0, a1, a2, a3));\n    var _sqlite3_result_zeroblob = (Module['_sqlite3_result_zeroblob'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3_result_zeroblob = Module['_sqlite3_result_zeroblob'] =\n        wasmExports['sqlite3_result_zeroblob'])(a0, a1));\n    var _sqlite3_result_zeroblob64 = (Module['_sqlite3_result_zeroblob64'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3_result_zeroblob64 = Module['_sqlite3_result_zeroblob64'] =\n        wasmExports['sqlite3_result_zeroblob64'])(a0, a1));\n    var _sqlite3_result_error_code = (Module['_sqlite3_result_error_code'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3_result_error_code = Module['_sqlite3_result_error_code'] =\n        wasmExports['sqlite3_result_error_code'])(a0, a1));\n    var _sqlite3_user_data = (Module['_sqlite3_user_data'] = (a0) =>\n      (_sqlite3_user_data = Module['_sqlite3_user_data'] =\n        wasmExports['sqlite3_user_data'])(a0));\n    var _sqlite3_context_db_handle = (Module['_sqlite3_context_db_handle'] = (\n      a0,\n    ) =>\n      (_sqlite3_context_db_handle = Module['_sqlite3_context_db_handle'] =\n        wasmExports['sqlite3_context_db_handle'])(a0));\n    var _sqlite3_vtab_nochange = (Module['_sqlite3_vtab_nochange'] = (a0) =>\n      (_sqlite3_vtab_nochange = Module['_sqlite3_vtab_nochange'] =\n        wasmExports['sqlite3_vtab_nochange'])(a0));\n    var _sqlite3_vtab_in_first = (Module['_sqlite3_vtab_in_first'] = (a0, a1) =>\n      (_sqlite3_vtab_in_first = Module['_sqlite3_vtab_in_first'] =\n        wasmExports['sqlite3_vtab_in_first'])(a0, a1));\n    var _sqlite3_vtab_in_next = (Module['_sqlite3_vtab_in_next'] = (a0, a1) =>\n      (_sqlite3_vtab_in_next = Module['_sqlite3_vtab_in_next'] =\n        wasmExports['sqlite3_vtab_in_next'])(a0, a1));\n    var _sqlite3_aggregate_context = (Module['_sqlite3_aggregate_context'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3_aggregate_context = Module['_sqlite3_aggregate_context'] =\n        wasmExports['sqlite3_aggregate_context'])(a0, a1));\n    var _sqlite3_get_auxdata = (Module['_sqlite3_get_auxdata'] = (a0, a1) =>\n      (_sqlite3_get_auxdata = Module['_sqlite3_get_auxdata'] =\n        wasmExports['sqlite3_get_auxdata'])(a0, a1));\n    var _sqlite3_set_auxdata = (Module['_sqlite3_set_auxdata'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3_set_auxdata = Module['_sqlite3_set_auxdata'] =\n        wasmExports['sqlite3_set_auxdata'])(a0, a1, a2, a3));\n    var _sqlite3_column_count = (Module['_sqlite3_column_count'] = (a0) =>\n      (_sqlite3_column_count = Module['_sqlite3_column_count'] =\n        wasmExports['sqlite3_column_count'])(a0));\n    var _sqlite3_data_count = (Module['_sqlite3_data_count'] = (a0) =>\n      (_sqlite3_data_count = Module['_sqlite3_data_count'] =\n        wasmExports['sqlite3_data_count'])(a0));\n    var _sqlite3_column_blob = (Module['_sqlite3_column_blob'] = (a0, a1) =>\n      (_sqlite3_column_blob = Module['_sqlite3_column_blob'] =\n        wasmExports['sqlite3_column_blob'])(a0, a1));\n    var _sqlite3_column_bytes = (Module['_sqlite3_column_bytes'] = (a0, a1) =>\n      (_sqlite3_column_bytes = Module['_sqlite3_column_bytes'] =\n        wasmExports['sqlite3_column_bytes'])(a0, a1));\n    var _sqlite3_column_double = (Module['_sqlite3_column_double'] = (a0, a1) =>\n      (_sqlite3_column_double = Module['_sqlite3_column_double'] =\n        wasmExports['sqlite3_column_double'])(a0, a1));\n    var _sqlite3_column_value = (Module['_sqlite3_column_value'] = (a0, a1) =>\n      (_sqlite3_column_value = Module['_sqlite3_column_value'] =\n        wasmExports['sqlite3_column_value'])(a0, a1));\n    var _sqlite3_column_decltype = (Module['_sqlite3_column_decltype'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3_column_decltype = Module['_sqlite3_column_decltype'] =\n        wasmExports['sqlite3_column_decltype'])(a0, a1));\n    var _sqlite3_bind_blob = (Module['_sqlite3_bind_blob'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3_bind_blob = Module['_sqlite3_bind_blob'] =\n        wasmExports['sqlite3_bind_blob'])(a0, a1, a2, a3, a4));\n    var _sqlite3_bind_double = (Module['_sqlite3_bind_double'] = (a0, a1, a2) =>\n      (_sqlite3_bind_double = Module['_sqlite3_bind_double'] =\n        wasmExports['sqlite3_bind_double'])(a0, a1, a2));\n    var _sqlite3_bind_int = (Module['_sqlite3_bind_int'] = (a0, a1, a2) =>\n      (_sqlite3_bind_int = Module['_sqlite3_bind_int'] =\n        wasmExports['sqlite3_bind_int'])(a0, a1, a2));\n    var _sqlite3_bind_int64 = (Module['_sqlite3_bind_int64'] = (a0, a1, a2) =>\n      (_sqlite3_bind_int64 = Module['_sqlite3_bind_int64'] =\n        wasmExports['sqlite3_bind_int64'])(a0, a1, a2));\n    var _sqlite3_bind_null = (Module['_sqlite3_bind_null'] = (a0, a1) =>\n      (_sqlite3_bind_null = Module['_sqlite3_bind_null'] =\n        wasmExports['sqlite3_bind_null'])(a0, a1));\n    var _sqlite3_bind_pointer = (Module['_sqlite3_bind_pointer'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3_bind_pointer = Module['_sqlite3_bind_pointer'] =\n        wasmExports['sqlite3_bind_pointer'])(a0, a1, a2, a3, a4));\n    var _sqlite3_bind_text = (Module['_sqlite3_bind_text'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3_bind_text = Module['_sqlite3_bind_text'] =\n        wasmExports['sqlite3_bind_text'])(a0, a1, a2, a3, a4));\n    var _sqlite3_bind_parameter_count = (Module[\n      '_sqlite3_bind_parameter_count'\n    ] = (a0) =>\n      (_sqlite3_bind_parameter_count = Module['_sqlite3_bind_parameter_count'] =\n        wasmExports['sqlite3_bind_parameter_count'])(a0));\n    var _sqlite3_bind_parameter_name = (Module['_sqlite3_bind_parameter_name'] =\n      (a0, a1) =>\n        (_sqlite3_bind_parameter_name = Module['_sqlite3_bind_parameter_name'] =\n          wasmExports['sqlite3_bind_parameter_name'])(a0, a1));\n    var _sqlite3_bind_parameter_index = (Module[\n      '_sqlite3_bind_parameter_index'\n    ] = (a0, a1) =>\n      (_sqlite3_bind_parameter_index = Module['_sqlite3_bind_parameter_index'] =\n        wasmExports['sqlite3_bind_parameter_index'])(a0, a1));\n    var _sqlite3_db_handle = (Module['_sqlite3_db_handle'] = (a0) =>\n      (_sqlite3_db_handle = Module['_sqlite3_db_handle'] =\n        wasmExports['sqlite3_db_handle'])(a0));\n    var _sqlite3_stmt_readonly = (Module['_sqlite3_stmt_readonly'] = (a0) =>\n      (_sqlite3_stmt_readonly = Module['_sqlite3_stmt_readonly'] =\n        wasmExports['sqlite3_stmt_readonly'])(a0));\n    var _sqlite3_stmt_isexplain = (Module['_sqlite3_stmt_isexplain'] = (a0) =>\n      (_sqlite3_stmt_isexplain = Module['_sqlite3_stmt_isexplain'] =\n        wasmExports['sqlite3_stmt_isexplain'])(a0));\n    var _sqlite3_stmt_explain = (Module['_sqlite3_stmt_explain'] = (a0, a1) =>\n      (_sqlite3_stmt_explain = Module['_sqlite3_stmt_explain'] =\n        wasmExports['sqlite3_stmt_explain'])(a0, a1));\n    var _sqlite3_stmt_busy = (Module['_sqlite3_stmt_busy'] = (a0) =>\n      (_sqlite3_stmt_busy = Module['_sqlite3_stmt_busy'] =\n        wasmExports['sqlite3_stmt_busy'])(a0));\n    var _sqlite3_stmt_status = (Module['_sqlite3_stmt_status'] = (a0, a1, a2) =>\n      (_sqlite3_stmt_status = Module['_sqlite3_stmt_status'] =\n        wasmExports['sqlite3_stmt_status'])(a0, a1, a2));\n    var _sqlite3_sql = (Module['_sqlite3_sql'] = (a0) =>\n      (_sqlite3_sql = Module['_sqlite3_sql'] = wasmExports['sqlite3_sql'])(a0));\n    var _sqlite3_expanded_sql = (Module['_sqlite3_expanded_sql'] = (a0) =>\n      (_sqlite3_expanded_sql = Module['_sqlite3_expanded_sql'] =\n        wasmExports['sqlite3_expanded_sql'])(a0));\n    var _sqlite3_preupdate_old = (Module['_sqlite3_preupdate_old'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_preupdate_old = Module['_sqlite3_preupdate_old'] =\n        wasmExports['sqlite3_preupdate_old'])(a0, a1, a2));\n    var _sqlite3_preupdate_count = (Module['_sqlite3_preupdate_count'] = (a0) =>\n      (_sqlite3_preupdate_count = Module['_sqlite3_preupdate_count'] =\n        wasmExports['sqlite3_preupdate_count'])(a0));\n    var _sqlite3_preupdate_depth = (Module['_sqlite3_preupdate_depth'] = (a0) =>\n      (_sqlite3_preupdate_depth = Module['_sqlite3_preupdate_depth'] =\n        wasmExports['sqlite3_preupdate_depth'])(a0));\n    var _sqlite3_preupdate_blobwrite = (Module['_sqlite3_preupdate_blobwrite'] =\n      (a0) =>\n        (_sqlite3_preupdate_blobwrite = Module['_sqlite3_preupdate_blobwrite'] =\n          wasmExports['sqlite3_preupdate_blobwrite'])(a0));\n    var _sqlite3_preupdate_new = (Module['_sqlite3_preupdate_new'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_preupdate_new = Module['_sqlite3_preupdate_new'] =\n        wasmExports['sqlite3_preupdate_new'])(a0, a1, a2));\n    var _sqlite3_value_numeric_type = (Module['_sqlite3_value_numeric_type'] = (\n      a0,\n    ) =>\n      (_sqlite3_value_numeric_type = Module['_sqlite3_value_numeric_type'] =\n        wasmExports['sqlite3_value_numeric_type'])(a0));\n    var _sqlite3_set_authorizer = (Module['_sqlite3_set_authorizer'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_set_authorizer = Module['_sqlite3_set_authorizer'] =\n        wasmExports['sqlite3_set_authorizer'])(a0, a1, a2));\n    var _sqlite3_strglob = (Module['_sqlite3_strglob'] = (a0, a1) =>\n      (_sqlite3_strglob = Module['_sqlite3_strglob'] =\n        wasmExports['sqlite3_strglob'])(a0, a1));\n    var _sqlite3_strlike = (Module['_sqlite3_strlike'] = (a0, a1, a2) =>\n      (_sqlite3_strlike = Module['_sqlite3_strlike'] =\n        wasmExports['sqlite3_strlike'])(a0, a1, a2));\n    var _sqlite3_auto_extension = (Module['_sqlite3_auto_extension'] = (a0) =>\n      (_sqlite3_auto_extension = Module['_sqlite3_auto_extension'] =\n        wasmExports['sqlite3_auto_extension'])(a0));\n    var _sqlite3_cancel_auto_extension = (Module[\n      '_sqlite3_cancel_auto_extension'\n    ] = (a0) =>\n      (_sqlite3_cancel_auto_extension = Module[\n        '_sqlite3_cancel_auto_extension'\n      ] =\n        wasmExports['sqlite3_cancel_auto_extension'])(a0));\n    var _sqlite3_reset_auto_extension = (Module[\n      '_sqlite3_reset_auto_extension'\n    ] = () =>\n      (_sqlite3_reset_auto_extension = Module['_sqlite3_reset_auto_extension'] =\n        wasmExports['sqlite3_reset_auto_extension'])());\n    var _sqlite3_prepare_v3 = (Module['_sqlite3_prepare_v3'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n      a5,\n    ) =>\n      (_sqlite3_prepare_v3 = Module['_sqlite3_prepare_v3'] =\n        wasmExports['sqlite3_prepare_v3'])(a0, a1, a2, a3, a4, a5));\n    var _sqlite3_create_module = (Module['_sqlite3_create_module'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3_create_module = Module['_sqlite3_create_module'] =\n        wasmExports['sqlite3_create_module'])(a0, a1, a2, a3));\n    var _sqlite3_create_module_v2 = (Module['_sqlite3_create_module_v2'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3_create_module_v2 = Module['_sqlite3_create_module_v2'] =\n        wasmExports['sqlite3_create_module_v2'])(a0, a1, a2, a3, a4));\n    var _sqlite3_drop_modules = (Module['_sqlite3_drop_modules'] = (a0, a1) =>\n      (_sqlite3_drop_modules = Module['_sqlite3_drop_modules'] =\n        wasmExports['sqlite3_drop_modules'])(a0, a1));\n    var _sqlite3_declare_vtab = (Module['_sqlite3_declare_vtab'] = (a0, a1) =>\n      (_sqlite3_declare_vtab = Module['_sqlite3_declare_vtab'] =\n        wasmExports['sqlite3_declare_vtab'])(a0, a1));\n    var _sqlite3_vtab_on_conflict = (Module['_sqlite3_vtab_on_conflict'] = (\n      a0,\n    ) =>\n      (_sqlite3_vtab_on_conflict = Module['_sqlite3_vtab_on_conflict'] =\n        wasmExports['sqlite3_vtab_on_conflict'])(a0));\n    var _sqlite3_vtab_collation = (Module['_sqlite3_vtab_collation'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3_vtab_collation = Module['_sqlite3_vtab_collation'] =\n        wasmExports['sqlite3_vtab_collation'])(a0, a1));\n    var _sqlite3_vtab_in = (Module['_sqlite3_vtab_in'] = (a0, a1, a2) =>\n      (_sqlite3_vtab_in = Module['_sqlite3_vtab_in'] =\n        wasmExports['sqlite3_vtab_in'])(a0, a1, a2));\n    var _sqlite3_vtab_rhs_value = (Module['_sqlite3_vtab_rhs_value'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_vtab_rhs_value = Module['_sqlite3_vtab_rhs_value'] =\n        wasmExports['sqlite3_vtab_rhs_value'])(a0, a1, a2));\n    var _sqlite3_vtab_distinct = (Module['_sqlite3_vtab_distinct'] = (a0) =>\n      (_sqlite3_vtab_distinct = Module['_sqlite3_vtab_distinct'] =\n        wasmExports['sqlite3_vtab_distinct'])(a0));\n    var _sqlite3_keyword_name = (Module['_sqlite3_keyword_name'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_keyword_name = Module['_sqlite3_keyword_name'] =\n        wasmExports['sqlite3_keyword_name'])(a0, a1, a2));\n    var _sqlite3_keyword_count = (Module['_sqlite3_keyword_count'] = () =>\n      (_sqlite3_keyword_count = Module['_sqlite3_keyword_count'] =\n        wasmExports['sqlite3_keyword_count'])());\n    var _sqlite3_keyword_check = (Module['_sqlite3_keyword_check'] = (a0, a1) =>\n      (_sqlite3_keyword_check = Module['_sqlite3_keyword_check'] =\n        wasmExports['sqlite3_keyword_check'])(a0, a1));\n    var _sqlite3_complete = (Module['_sqlite3_complete'] = (a0) =>\n      (_sqlite3_complete = Module['_sqlite3_complete'] =\n        wasmExports['sqlite3_complete'])(a0));\n    var _sqlite3_libversion = (Module['_sqlite3_libversion'] = () =>\n      (_sqlite3_libversion = Module['_sqlite3_libversion'] =\n        wasmExports['sqlite3_libversion'])());\n    var _sqlite3_libversion_number = (Module['_sqlite3_libversion_number'] =\n      () =>\n        (_sqlite3_libversion_number = Module['_sqlite3_libversion_number'] =\n          wasmExports['sqlite3_libversion_number'])());\n    var _sqlite3_shutdown = (Module['_sqlite3_shutdown'] = () =>\n      (_sqlite3_shutdown = Module['_sqlite3_shutdown'] =\n        wasmExports['sqlite3_shutdown'])());\n    var _sqlite3_last_insert_rowid = (Module['_sqlite3_last_insert_rowid'] = (\n      a0,\n    ) =>\n      (_sqlite3_last_insert_rowid = Module['_sqlite3_last_insert_rowid'] =\n        wasmExports['sqlite3_last_insert_rowid'])(a0));\n    var _sqlite3_set_last_insert_rowid = (Module[\n      '_sqlite3_set_last_insert_rowid'\n    ] = (a0, a1) =>\n      (_sqlite3_set_last_insert_rowid = Module[\n        '_sqlite3_set_last_insert_rowid'\n      ] =\n        wasmExports['sqlite3_set_last_insert_rowid'])(a0, a1));\n    var _sqlite3_changes64 = (Module['_sqlite3_changes64'] = (a0) =>\n      (_sqlite3_changes64 = Module['_sqlite3_changes64'] =\n        wasmExports['sqlite3_changes64'])(a0));\n    var _sqlite3_changes = (Module['_sqlite3_changes'] = (a0) =>\n      (_sqlite3_changes = Module['_sqlite3_changes'] =\n        wasmExports['sqlite3_changes'])(a0));\n    var _sqlite3_total_changes64 = (Module['_sqlite3_total_changes64'] = (a0) =>\n      (_sqlite3_total_changes64 = Module['_sqlite3_total_changes64'] =\n        wasmExports['sqlite3_total_changes64'])(a0));\n    var _sqlite3_total_changes = (Module['_sqlite3_total_changes'] = (a0) =>\n      (_sqlite3_total_changes = Module['_sqlite3_total_changes'] =\n        wasmExports['sqlite3_total_changes'])(a0));\n    var _sqlite3_txn_state = (Module['_sqlite3_txn_state'] = (a0, a1) =>\n      (_sqlite3_txn_state = Module['_sqlite3_txn_state'] =\n        wasmExports['sqlite3_txn_state'])(a0, a1));\n    var _sqlite3_close_v2 = (Module['_sqlite3_close_v2'] = (a0) =>\n      (_sqlite3_close_v2 = Module['_sqlite3_close_v2'] =\n        wasmExports['sqlite3_close_v2'])(a0));\n    var _sqlite3_busy_handler = (Module['_sqlite3_busy_handler'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_busy_handler = Module['_sqlite3_busy_handler'] =\n        wasmExports['sqlite3_busy_handler'])(a0, a1, a2));\n    var _sqlite3_progress_handler = (Module['_sqlite3_progress_handler'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3_progress_handler = Module['_sqlite3_progress_handler'] =\n        wasmExports['sqlite3_progress_handler'])(a0, a1, a2, a3));\n    var _sqlite3_busy_timeout = (Module['_sqlite3_busy_timeout'] = (a0, a1) =>\n      (_sqlite3_busy_timeout = Module['_sqlite3_busy_timeout'] =\n        wasmExports['sqlite3_busy_timeout'])(a0, a1));\n    var _sqlite3_interrupt = (Module['_sqlite3_interrupt'] = (a0) =>\n      (_sqlite3_interrupt = Module['_sqlite3_interrupt'] =\n        wasmExports['sqlite3_interrupt'])(a0));\n    var _sqlite3_is_interrupted = (Module['_sqlite3_is_interrupted'] = (a0) =>\n      (_sqlite3_is_interrupted = Module['_sqlite3_is_interrupted'] =\n        wasmExports['sqlite3_is_interrupted'])(a0));\n    var _sqlite3_create_function = (Module['_sqlite3_create_function'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n      a5,\n      a6,\n      a7,\n    ) =>\n      (_sqlite3_create_function = Module['_sqlite3_create_function'] =\n        wasmExports['sqlite3_create_function'])(\n        a0,\n        a1,\n        a2,\n        a3,\n        a4,\n        a5,\n        a6,\n        a7,\n      ));\n    var _sqlite3_create_function_v2 = (Module['_sqlite3_create_function_v2'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n      a5,\n      a6,\n      a7,\n      a8,\n    ) =>\n      (_sqlite3_create_function_v2 = Module['_sqlite3_create_function_v2'] =\n        wasmExports['sqlite3_create_function_v2'])(\n        a0,\n        a1,\n        a2,\n        a3,\n        a4,\n        a5,\n        a6,\n        a7,\n        a8,\n      ));\n    var _sqlite3_create_window_function = (Module[\n      '_sqlite3_create_window_function'\n    ] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) =>\n      (_sqlite3_create_window_function = Module[\n        '_sqlite3_create_window_function'\n      ] =\n        wasmExports['sqlite3_create_window_function'])(\n        a0,\n        a1,\n        a2,\n        a3,\n        a4,\n        a5,\n        a6,\n        a7,\n        a8,\n        a9,\n      ));\n    var _sqlite3_overload_function = (Module['_sqlite3_overload_function'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_overload_function = Module['_sqlite3_overload_function'] =\n        wasmExports['sqlite3_overload_function'])(a0, a1, a2));\n    var _sqlite3_trace_v2 = (Module['_sqlite3_trace_v2'] = (a0, a1, a2, a3) =>\n      (_sqlite3_trace_v2 = Module['_sqlite3_trace_v2'] =\n        wasmExports['sqlite3_trace_v2'])(a0, a1, a2, a3));\n    var _sqlite3_commit_hook = (Module['_sqlite3_commit_hook'] = (a0, a1, a2) =>\n      (_sqlite3_commit_hook = Module['_sqlite3_commit_hook'] =\n        wasmExports['sqlite3_commit_hook'])(a0, a1, a2));\n    var _sqlite3_update_hook = (Module['_sqlite3_update_hook'] = (a0, a1, a2) =>\n      (_sqlite3_update_hook = Module['_sqlite3_update_hook'] =\n        wasmExports['sqlite3_update_hook'])(a0, a1, a2));\n    var _sqlite3_rollback_hook = (Module['_sqlite3_rollback_hook'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_rollback_hook = Module['_sqlite3_rollback_hook'] =\n        wasmExports['sqlite3_rollback_hook'])(a0, a1, a2));\n    var _sqlite3_preupdate_hook = (Module['_sqlite3_preupdate_hook'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_preupdate_hook = Module['_sqlite3_preupdate_hook'] =\n        wasmExports['sqlite3_preupdate_hook'])(a0, a1, a2));\n    var _sqlite3_error_offset = (Module['_sqlite3_error_offset'] = (a0) =>\n      (_sqlite3_error_offset = Module['_sqlite3_error_offset'] =\n        wasmExports['sqlite3_error_offset'])(a0));\n    var _sqlite3_errcode = (Module['_sqlite3_errcode'] = (a0) =>\n      (_sqlite3_errcode = Module['_sqlite3_errcode'] =\n        wasmExports['sqlite3_errcode'])(a0));\n    var _sqlite3_extended_errcode = (Module['_sqlite3_extended_errcode'] = (\n      a0,\n    ) =>\n      (_sqlite3_extended_errcode = Module['_sqlite3_extended_errcode'] =\n        wasmExports['sqlite3_extended_errcode'])(a0));\n    var _sqlite3_errstr = (Module['_sqlite3_errstr'] = (a0) =>\n      (_sqlite3_errstr = Module['_sqlite3_errstr'] =\n        wasmExports['sqlite3_errstr'])(a0));\n    var _sqlite3_limit = (Module['_sqlite3_limit'] = (a0, a1, a2) =>\n      (_sqlite3_limit = Module['_sqlite3_limit'] =\n        wasmExports['sqlite3_limit'])(a0, a1, a2));\n    var _sqlite3_open = (Module['_sqlite3_open'] = (a0, a1) =>\n      (_sqlite3_open = Module['_sqlite3_open'] = wasmExports['sqlite3_open'])(\n        a0,\n        a1,\n      ));\n    var _sqlite3_open_v2 = (Module['_sqlite3_open_v2'] = (a0, a1, a2, a3) =>\n      (_sqlite3_open_v2 = Module['_sqlite3_open_v2'] =\n        wasmExports['sqlite3_open_v2'])(a0, a1, a2, a3));\n    var _sqlite3_create_collation = (Module['_sqlite3_create_collation'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3_create_collation = Module['_sqlite3_create_collation'] =\n        wasmExports['sqlite3_create_collation'])(a0, a1, a2, a3, a4));\n    var _sqlite3_create_collation_v2 = (Module['_sqlite3_create_collation_v2'] =\n      (a0, a1, a2, a3, a4, a5) =>\n        (_sqlite3_create_collation_v2 = Module['_sqlite3_create_collation_v2'] =\n          wasmExports['sqlite3_create_collation_v2'])(a0, a1, a2, a3, a4, a5));\n    var _sqlite3_collation_needed = (Module['_sqlite3_collation_needed'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_collation_needed = Module['_sqlite3_collation_needed'] =\n        wasmExports['sqlite3_collation_needed'])(a0, a1, a2));\n    var _sqlite3_get_autocommit = (Module['_sqlite3_get_autocommit'] = (a0) =>\n      (_sqlite3_get_autocommit = Module['_sqlite3_get_autocommit'] =\n        wasmExports['sqlite3_get_autocommit'])(a0));\n    var _sqlite3_table_column_metadata = (Module[\n      '_sqlite3_table_column_metadata'\n    ] = (a0, a1, a2, a3, a4, a5, a6, a7, a8) =>\n      (_sqlite3_table_column_metadata = Module[\n        '_sqlite3_table_column_metadata'\n      ] =\n        wasmExports['sqlite3_table_column_metadata'])(\n        a0,\n        a1,\n        a2,\n        a3,\n        a4,\n        a5,\n        a6,\n        a7,\n        a8,\n      ));\n    var _sqlite3_extended_result_codes = (Module[\n      '_sqlite3_extended_result_codes'\n    ] = (a0, a1) =>\n      (_sqlite3_extended_result_codes = Module[\n        '_sqlite3_extended_result_codes'\n      ] =\n        wasmExports['sqlite3_extended_result_codes'])(a0, a1));\n    var _sqlite3_uri_key = (Module['_sqlite3_uri_key'] = (a0, a1) =>\n      (_sqlite3_uri_key = Module['_sqlite3_uri_key'] =\n        wasmExports['sqlite3_uri_key'])(a0, a1));\n    var _sqlite3_uri_int64 = (Module['_sqlite3_uri_int64'] = (a0, a1, a2) =>\n      (_sqlite3_uri_int64 = Module['_sqlite3_uri_int64'] =\n        wasmExports['sqlite3_uri_int64'])(a0, a1, a2));\n    var _sqlite3_db_name = (Module['_sqlite3_db_name'] = (a0, a1) =>\n      (_sqlite3_db_name = Module['_sqlite3_db_name'] =\n        wasmExports['sqlite3_db_name'])(a0, a1));\n    var _sqlite3_db_filename = (Module['_sqlite3_db_filename'] = (a0, a1) =>\n      (_sqlite3_db_filename = Module['_sqlite3_db_filename'] =\n        wasmExports['sqlite3_db_filename'])(a0, a1));\n    var _sqlite3_db_readonly = (Module['_sqlite3_db_readonly'] = (a0, a1) =>\n      (_sqlite3_db_readonly = Module['_sqlite3_db_readonly'] =\n        wasmExports['sqlite3_db_readonly'])(a0, a1));\n    var _sqlite3_compileoption_used = (Module['_sqlite3_compileoption_used'] = (\n      a0,\n    ) =>\n      (_sqlite3_compileoption_used = Module['_sqlite3_compileoption_used'] =\n        wasmExports['sqlite3_compileoption_used'])(a0));\n    var _sqlite3_compileoption_get = (Module['_sqlite3_compileoption_get'] = (\n      a0,\n    ) =>\n      (_sqlite3_compileoption_get = Module['_sqlite3_compileoption_get'] =\n        wasmExports['sqlite3_compileoption_get'])(a0));\n    var _sqlite3session_diff = (Module['_sqlite3session_diff'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3session_diff = Module['_sqlite3session_diff'] =\n        wasmExports['sqlite3session_diff'])(a0, a1, a2, a3));\n    var _sqlite3session_attach = (Module['_sqlite3session_attach'] = (a0, a1) =>\n      (_sqlite3session_attach = Module['_sqlite3session_attach'] =\n        wasmExports['sqlite3session_attach'])(a0, a1));\n    var _sqlite3session_create = (Module['_sqlite3session_create'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3session_create = Module['_sqlite3session_create'] =\n        wasmExports['sqlite3session_create'])(a0, a1, a2));\n    var _sqlite3session_delete = (Module['_sqlite3session_delete'] = (a0) =>\n      (_sqlite3session_delete = Module['_sqlite3session_delete'] =\n        wasmExports['sqlite3session_delete'])(a0));\n    var _sqlite3session_table_filter = (Module['_sqlite3session_table_filter'] =\n      (a0, a1, a2) =>\n        (_sqlite3session_table_filter = Module['_sqlite3session_table_filter'] =\n          wasmExports['sqlite3session_table_filter'])(a0, a1, a2));\n    var _sqlite3session_changeset = (Module['_sqlite3session_changeset'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3session_changeset = Module['_sqlite3session_changeset'] =\n        wasmExports['sqlite3session_changeset'])(a0, a1, a2));\n    var _sqlite3session_changeset_strm = (Module[\n      '_sqlite3session_changeset_strm'\n    ] = (a0, a1, a2) =>\n      (_sqlite3session_changeset_strm = Module[\n        '_sqlite3session_changeset_strm'\n      ] =\n        wasmExports['sqlite3session_changeset_strm'])(a0, a1, a2));\n    var _sqlite3session_patchset_strm = (Module[\n      '_sqlite3session_patchset_strm'\n    ] = (a0, a1, a2) =>\n      (_sqlite3session_patchset_strm = Module['_sqlite3session_patchset_strm'] =\n        wasmExports['sqlite3session_patchset_strm'])(a0, a1, a2));\n    var _sqlite3session_patchset = (Module['_sqlite3session_patchset'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3session_patchset = Module['_sqlite3session_patchset'] =\n        wasmExports['sqlite3session_patchset'])(a0, a1, a2));\n    var _sqlite3session_enable = (Module['_sqlite3session_enable'] = (a0, a1) =>\n      (_sqlite3session_enable = Module['_sqlite3session_enable'] =\n        wasmExports['sqlite3session_enable'])(a0, a1));\n    var _sqlite3session_indirect = (Module['_sqlite3session_indirect'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3session_indirect = Module['_sqlite3session_indirect'] =\n        wasmExports['sqlite3session_indirect'])(a0, a1));\n    var _sqlite3session_isempty = (Module['_sqlite3session_isempty'] = (a0) =>\n      (_sqlite3session_isempty = Module['_sqlite3session_isempty'] =\n        wasmExports['sqlite3session_isempty'])(a0));\n    var _sqlite3session_memory_used = (Module['_sqlite3session_memory_used'] = (\n      a0,\n    ) =>\n      (_sqlite3session_memory_used = Module['_sqlite3session_memory_used'] =\n        wasmExports['sqlite3session_memory_used'])(a0));\n    var _sqlite3session_object_config = (Module[\n      '_sqlite3session_object_config'\n    ] = (a0, a1, a2) =>\n      (_sqlite3session_object_config = Module['_sqlite3session_object_config'] =\n        wasmExports['sqlite3session_object_config'])(a0, a1, a2));\n    var _sqlite3session_changeset_size = (Module[\n      '_sqlite3session_changeset_size'\n    ] = (a0) =>\n      (_sqlite3session_changeset_size = Module[\n        '_sqlite3session_changeset_size'\n      ] =\n        wasmExports['sqlite3session_changeset_size'])(a0));\n    var _sqlite3changeset_start = (Module['_sqlite3changeset_start'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3changeset_start = Module['_sqlite3changeset_start'] =\n        wasmExports['sqlite3changeset_start'])(a0, a1, a2));\n    var _sqlite3changeset_start_v2 = (Module['_sqlite3changeset_start_v2'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3changeset_start_v2 = Module['_sqlite3changeset_start_v2'] =\n        wasmExports['sqlite3changeset_start_v2'])(a0, a1, a2, a3));\n    var _sqlite3changeset_start_strm = (Module['_sqlite3changeset_start_strm'] =\n      (a0, a1, a2) =>\n        (_sqlite3changeset_start_strm = Module['_sqlite3changeset_start_strm'] =\n          wasmExports['sqlite3changeset_start_strm'])(a0, a1, a2));\n    var _sqlite3changeset_start_v2_strm = (Module[\n      '_sqlite3changeset_start_v2_strm'\n    ] = (a0, a1, a2, a3) =>\n      (_sqlite3changeset_start_v2_strm = Module[\n        '_sqlite3changeset_start_v2_strm'\n      ] =\n        wasmExports['sqlite3changeset_start_v2_strm'])(a0, a1, a2, a3));\n    var _sqlite3changeset_next = (Module['_sqlite3changeset_next'] = (a0) =>\n      (_sqlite3changeset_next = Module['_sqlite3changeset_next'] =\n        wasmExports['sqlite3changeset_next'])(a0));\n    var _sqlite3changeset_op = (Module['_sqlite3changeset_op'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3changeset_op = Module['_sqlite3changeset_op'] =\n        wasmExports['sqlite3changeset_op'])(a0, a1, a2, a3, a4));\n    var _sqlite3changeset_pk = (Module['_sqlite3changeset_pk'] = (a0, a1, a2) =>\n      (_sqlite3changeset_pk = Module['_sqlite3changeset_pk'] =\n        wasmExports['sqlite3changeset_pk'])(a0, a1, a2));\n    var _sqlite3changeset_old = (Module['_sqlite3changeset_old'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3changeset_old = Module['_sqlite3changeset_old'] =\n        wasmExports['sqlite3changeset_old'])(a0, a1, a2));\n    var _sqlite3changeset_new = (Module['_sqlite3changeset_new'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3changeset_new = Module['_sqlite3changeset_new'] =\n        wasmExports['sqlite3changeset_new'])(a0, a1, a2));\n    var _sqlite3changeset_conflict = (Module['_sqlite3changeset_conflict'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3changeset_conflict = Module['_sqlite3changeset_conflict'] =\n        wasmExports['sqlite3changeset_conflict'])(a0, a1, a2));\n    var _sqlite3changeset_fk_conflicts = (Module[\n      '_sqlite3changeset_fk_conflicts'\n    ] = (a0, a1) =>\n      (_sqlite3changeset_fk_conflicts = Module[\n        '_sqlite3changeset_fk_conflicts'\n      ] =\n        wasmExports['sqlite3changeset_fk_conflicts'])(a0, a1));\n    var _sqlite3changeset_finalize = (Module['_sqlite3changeset_finalize'] = (\n      a0,\n    ) =>\n      (_sqlite3changeset_finalize = Module['_sqlite3changeset_finalize'] =\n        wasmExports['sqlite3changeset_finalize'])(a0));\n    var _sqlite3changeset_invert = (Module['_sqlite3changeset_invert'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3changeset_invert = Module['_sqlite3changeset_invert'] =\n        wasmExports['sqlite3changeset_invert'])(a0, a1, a2, a3));\n    var _sqlite3changeset_invert_strm = (Module[\n      '_sqlite3changeset_invert_strm'\n    ] = (a0, a1, a2, a3) =>\n      (_sqlite3changeset_invert_strm = Module['_sqlite3changeset_invert_strm'] =\n        wasmExports['sqlite3changeset_invert_strm'])(a0, a1, a2, a3));\n    var _sqlite3changeset_apply_v2 = (Module['_sqlite3changeset_apply_v2'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n      a5,\n      a6,\n      a7,\n      a8,\n    ) =>\n      (_sqlite3changeset_apply_v2 = Module['_sqlite3changeset_apply_v2'] =\n        wasmExports['sqlite3changeset_apply_v2'])(\n        a0,\n        a1,\n        a2,\n        a3,\n        a4,\n        a5,\n        a6,\n        a7,\n        a8,\n      ));\n    var _sqlite3changeset_apply = (Module['_sqlite3changeset_apply'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n      a5,\n    ) =>\n      (_sqlite3changeset_apply = Module['_sqlite3changeset_apply'] =\n        wasmExports['sqlite3changeset_apply'])(a0, a1, a2, a3, a4, a5));\n    var _sqlite3changeset_apply_v2_strm = (Module[\n      '_sqlite3changeset_apply_v2_strm'\n    ] = (a0, a1, a2, a3, a4, a5, a6, a7, a8) =>\n      (_sqlite3changeset_apply_v2_strm = Module[\n        '_sqlite3changeset_apply_v2_strm'\n      ] =\n        wasmExports['sqlite3changeset_apply_v2_strm'])(\n        a0,\n        a1,\n        a2,\n        a3,\n        a4,\n        a5,\n        a6,\n        a7,\n        a8,\n      ));\n    var _sqlite3changeset_apply_strm = (Module['_sqlite3changeset_apply_strm'] =\n      (a0, a1, a2, a3, a4, a5) =>\n        (_sqlite3changeset_apply_strm = Module['_sqlite3changeset_apply_strm'] =\n          wasmExports['sqlite3changeset_apply_strm'])(a0, a1, a2, a3, a4, a5));\n    var _sqlite3changegroup_new = (Module['_sqlite3changegroup_new'] = (a0) =>\n      (_sqlite3changegroup_new = Module['_sqlite3changegroup_new'] =\n        wasmExports['sqlite3changegroup_new'])(a0));\n    var _sqlite3changegroup_add = (Module['_sqlite3changegroup_add'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3changegroup_add = Module['_sqlite3changegroup_add'] =\n        wasmExports['sqlite3changegroup_add'])(a0, a1, a2));\n    var _sqlite3changegroup_output = (Module['_sqlite3changegroup_output'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3changegroup_output = Module['_sqlite3changegroup_output'] =\n        wasmExports['sqlite3changegroup_output'])(a0, a1, a2));\n    var _sqlite3changegroup_add_strm = (Module['_sqlite3changegroup_add_strm'] =\n      (a0, a1, a2) =>\n        (_sqlite3changegroup_add_strm = Module['_sqlite3changegroup_add_strm'] =\n          wasmExports['sqlite3changegroup_add_strm'])(a0, a1, a2));\n    var _sqlite3changegroup_output_strm = (Module[\n      '_sqlite3changegroup_output_strm'\n    ] = (a0, a1, a2) =>\n      (_sqlite3changegroup_output_strm = Module[\n        '_sqlite3changegroup_output_strm'\n      ] =\n        wasmExports['sqlite3changegroup_output_strm'])(a0, a1, a2));\n    var _sqlite3changegroup_delete = (Module['_sqlite3changegroup_delete'] = (\n      a0,\n    ) =>\n      (_sqlite3changegroup_delete = Module['_sqlite3changegroup_delete'] =\n        wasmExports['sqlite3changegroup_delete'])(a0));\n    var _sqlite3changeset_concat = (Module['_sqlite3changeset_concat'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n      a5,\n    ) =>\n      (_sqlite3changeset_concat = Module['_sqlite3changeset_concat'] =\n        wasmExports['sqlite3changeset_concat'])(a0, a1, a2, a3, a4, a5));\n    var _sqlite3changeset_concat_strm = (Module[\n      '_sqlite3changeset_concat_strm'\n    ] = (a0, a1, a2, a3, a4, a5) =>\n      (_sqlite3changeset_concat_strm = Module['_sqlite3changeset_concat_strm'] =\n        wasmExports['sqlite3changeset_concat_strm'])(a0, a1, a2, a3, a4, a5));\n    var _sqlite3session_config = (Module['_sqlite3session_config'] = (a0, a1) =>\n      (_sqlite3session_config = Module['_sqlite3session_config'] =\n        wasmExports['sqlite3session_config'])(a0, a1));\n    var _sqlite3_sourceid = (Module['_sqlite3_sourceid'] = () =>\n      (_sqlite3_sourceid = Module['_sqlite3_sourceid'] =\n        wasmExports['sqlite3_sourceid'])());\n    var _sqlite3__wasm_pstack_ptr = (Module['_sqlite3__wasm_pstack_ptr'] = () =>\n      (_sqlite3__wasm_pstack_ptr = Module['_sqlite3__wasm_pstack_ptr'] =\n        wasmExports['sqlite3__wasm_pstack_ptr'])());\n    var _sqlite3__wasm_pstack_restore = (Module[\n      '_sqlite3__wasm_pstack_restore'\n    ] = (a0) =>\n      (_sqlite3__wasm_pstack_restore = Module['_sqlite3__wasm_pstack_restore'] =\n        wasmExports['sqlite3__wasm_pstack_restore'])(a0));\n    var _sqlite3__wasm_pstack_alloc = (Module['_sqlite3__wasm_pstack_alloc'] = (\n      a0,\n    ) =>\n      (_sqlite3__wasm_pstack_alloc = Module['_sqlite3__wasm_pstack_alloc'] =\n        wasmExports['sqlite3__wasm_pstack_alloc'])(a0));\n    var _sqlite3__wasm_pstack_remaining = (Module[\n      '_sqlite3__wasm_pstack_remaining'\n    ] = () =>\n      (_sqlite3__wasm_pstack_remaining = Module[\n        '_sqlite3__wasm_pstack_remaining'\n      ] =\n        wasmExports['sqlite3__wasm_pstack_remaining'])());\n    var _sqlite3__wasm_pstack_quota = (Module['_sqlite3__wasm_pstack_quota'] =\n      () =>\n        (_sqlite3__wasm_pstack_quota = Module['_sqlite3__wasm_pstack_quota'] =\n          wasmExports['sqlite3__wasm_pstack_quota'])());\n    var _sqlite3__wasm_db_error = (Module['_sqlite3__wasm_db_error'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3__wasm_db_error = Module['_sqlite3__wasm_db_error'] =\n        wasmExports['sqlite3__wasm_db_error'])(a0, a1, a2));\n    var _sqlite3__wasm_test_struct = (Module['_sqlite3__wasm_test_struct'] = (\n      a0,\n    ) =>\n      (_sqlite3__wasm_test_struct = Module['_sqlite3__wasm_test_struct'] =\n        wasmExports['sqlite3__wasm_test_struct'])(a0));\n    var _sqlite3__wasm_enum_json = (Module['_sqlite3__wasm_enum_json'] = () =>\n      (_sqlite3__wasm_enum_json = Module['_sqlite3__wasm_enum_json'] =\n        wasmExports['sqlite3__wasm_enum_json'])());\n    var _sqlite3__wasm_vfs_unlink = (Module['_sqlite3__wasm_vfs_unlink'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3__wasm_vfs_unlink = Module['_sqlite3__wasm_vfs_unlink'] =\n        wasmExports['sqlite3__wasm_vfs_unlink'])(a0, a1));\n    var _sqlite3__wasm_db_vfs = (Module['_sqlite3__wasm_db_vfs'] = (a0, a1) =>\n      (_sqlite3__wasm_db_vfs = Module['_sqlite3__wasm_db_vfs'] =\n        wasmExports['sqlite3__wasm_db_vfs'])(a0, a1));\n    var _sqlite3__wasm_db_reset = (Module['_sqlite3__wasm_db_reset'] = (a0) =>\n      (_sqlite3__wasm_db_reset = Module['_sqlite3__wasm_db_reset'] =\n        wasmExports['sqlite3__wasm_db_reset'])(a0));\n    var _sqlite3__wasm_db_export_chunked = (Module[\n      '_sqlite3__wasm_db_export_chunked'\n    ] = (a0, a1) =>\n      (_sqlite3__wasm_db_export_chunked = Module[\n        '_sqlite3__wasm_db_export_chunked'\n      ] =\n        wasmExports['sqlite3__wasm_db_export_chunked'])(a0, a1));\n    var _sqlite3__wasm_db_serialize = (Module['_sqlite3__wasm_db_serialize'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3__wasm_db_serialize = Module['_sqlite3__wasm_db_serialize'] =\n        wasmExports['sqlite3__wasm_db_serialize'])(a0, a1, a2, a3, a4));\n    var _sqlite3__wasm_vfs_create_file = (Module[\n      '_sqlite3__wasm_vfs_create_file'\n    ] = (a0, a1, a2, a3) =>\n      (_sqlite3__wasm_vfs_create_file = Module[\n        '_sqlite3__wasm_vfs_create_file'\n      ] =\n        wasmExports['sqlite3__wasm_vfs_create_file'])(a0, a1, a2, a3));\n    var _sqlite3__wasm_posix_create_file = (Module[\n      '_sqlite3__wasm_posix_create_file'\n    ] = (a0, a1, a2) =>\n      (_sqlite3__wasm_posix_create_file = Module[\n        '_sqlite3__wasm_posix_create_file'\n      ] =\n        wasmExports['sqlite3__wasm_posix_create_file'])(a0, a1, a2));\n    var _sqlite3__wasm_kvvfsMakeKeyOnPstack = (Module[\n      '_sqlite3__wasm_kvvfsMakeKeyOnPstack'\n    ] = (a0, a1) =>\n      (_sqlite3__wasm_kvvfsMakeKeyOnPstack = Module[\n        '_sqlite3__wasm_kvvfsMakeKeyOnPstack'\n      ] =\n        wasmExports['sqlite3__wasm_kvvfsMakeKeyOnPstack'])(a0, a1));\n    var _sqlite3__wasm_kvvfs_methods = (Module['_sqlite3__wasm_kvvfs_methods'] =\n      () =>\n        (_sqlite3__wasm_kvvfs_methods = Module['_sqlite3__wasm_kvvfs_methods'] =\n          wasmExports['sqlite3__wasm_kvvfs_methods'])());\n    var _sqlite3__wasm_vtab_config = (Module['_sqlite3__wasm_vtab_config'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3__wasm_vtab_config = Module['_sqlite3__wasm_vtab_config'] =\n        wasmExports['sqlite3__wasm_vtab_config'])(a0, a1, a2));\n    var _sqlite3__wasm_db_config_ip = (Module['_sqlite3__wasm_db_config_ip'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3__wasm_db_config_ip = Module['_sqlite3__wasm_db_config_ip'] =\n        wasmExports['sqlite3__wasm_db_config_ip'])(a0, a1, a2, a3));\n    var _sqlite3__wasm_db_config_pii = (Module['_sqlite3__wasm_db_config_pii'] =\n      (a0, a1, a2, a3, a4) =>\n        (_sqlite3__wasm_db_config_pii = Module['_sqlite3__wasm_db_config_pii'] =\n          wasmExports['sqlite3__wasm_db_config_pii'])(a0, a1, a2, a3, a4));\n    var _sqlite3__wasm_db_config_s = (Module['_sqlite3__wasm_db_config_s'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3__wasm_db_config_s = Module['_sqlite3__wasm_db_config_s'] =\n        wasmExports['sqlite3__wasm_db_config_s'])(a0, a1, a2));\n    var _sqlite3__wasm_config_i = (Module['_sqlite3__wasm_config_i'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3__wasm_config_i = Module['_sqlite3__wasm_config_i'] =\n        wasmExports['sqlite3__wasm_config_i'])(a0, a1));\n    var _sqlite3__wasm_config_ii = (Module['_sqlite3__wasm_config_ii'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3__wasm_config_ii = Module['_sqlite3__wasm_config_ii'] =\n        wasmExports['sqlite3__wasm_config_ii'])(a0, a1, a2));\n    var _sqlite3__wasm_config_j = (Module['_sqlite3__wasm_config_j'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3__wasm_config_j = Module['_sqlite3__wasm_config_j'] =\n        wasmExports['sqlite3__wasm_config_j'])(a0, a1));\n    var _sqlite3__wasm_qfmt_token = (Module['_sqlite3__wasm_qfmt_token'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3__wasm_qfmt_token = Module['_sqlite3__wasm_qfmt_token'] =\n        wasmExports['sqlite3__wasm_qfmt_token'])(a0, a1));\n    var _sqlite3__wasm_init_wasmfs = (Module['_sqlite3__wasm_init_wasmfs'] = (\n      a0,\n    ) =>\n      (_sqlite3__wasm_init_wasmfs = Module['_sqlite3__wasm_init_wasmfs'] =\n        wasmExports['sqlite3__wasm_init_wasmfs'])(a0));\n    var _sqlite3__wasm_test_intptr = (Module['_sqlite3__wasm_test_intptr'] = (\n      a0,\n    ) =>\n      (_sqlite3__wasm_test_intptr = Module['_sqlite3__wasm_test_intptr'] =\n        wasmExports['sqlite3__wasm_test_intptr'])(a0));\n    var _sqlite3__wasm_test_voidptr = (Module['_sqlite3__wasm_test_voidptr'] = (\n      a0,\n    ) =>\n      (_sqlite3__wasm_test_voidptr = Module['_sqlite3__wasm_test_voidptr'] =\n        wasmExports['sqlite3__wasm_test_voidptr'])(a0));\n    var _sqlite3__wasm_test_int64_max = (Module[\n      '_sqlite3__wasm_test_int64_max'\n    ] = () =>\n      (_sqlite3__wasm_test_int64_max = Module['_sqlite3__wasm_test_int64_max'] =\n        wasmExports['sqlite3__wasm_test_int64_max'])());\n    var _sqlite3__wasm_test_int64_min = (Module[\n      '_sqlite3__wasm_test_int64_min'\n    ] = () =>\n      (_sqlite3__wasm_test_int64_min = Module['_sqlite3__wasm_test_int64_min'] =\n        wasmExports['sqlite3__wasm_test_int64_min'])());\n    var _sqlite3__wasm_test_int64_times2 = (Module[\n      '_sqlite3__wasm_test_int64_times2'\n    ] = (a0) =>\n      (_sqlite3__wasm_test_int64_times2 = Module[\n        '_sqlite3__wasm_test_int64_times2'\n      ] =\n        wasmExports['sqlite3__wasm_test_int64_times2'])(a0));\n    var _sqlite3__wasm_test_int64_minmax = (Module[\n      '_sqlite3__wasm_test_int64_minmax'\n    ] = (a0, a1) =>\n      (_sqlite3__wasm_test_int64_minmax = Module[\n        '_sqlite3__wasm_test_int64_minmax'\n      ] =\n        wasmExports['sqlite3__wasm_test_int64_minmax'])(a0, a1));\n    var _sqlite3__wasm_test_int64ptr = (Module['_sqlite3__wasm_test_int64ptr'] =\n      (a0) =>\n        (_sqlite3__wasm_test_int64ptr = Module['_sqlite3__wasm_test_int64ptr'] =\n          wasmExports['sqlite3__wasm_test_int64ptr'])(a0));\n    var _sqlite3__wasm_test_stack_overflow = (Module[\n      '_sqlite3__wasm_test_stack_overflow'\n    ] = (a0) =>\n      (_sqlite3__wasm_test_stack_overflow = Module[\n        '_sqlite3__wasm_test_stack_overflow'\n      ] =\n        wasmExports['sqlite3__wasm_test_stack_overflow'])(a0));\n    var _sqlite3__wasm_test_str_hello = (Module[\n      '_sqlite3__wasm_test_str_hello'\n    ] = (a0) =>\n      (_sqlite3__wasm_test_str_hello = Module['_sqlite3__wasm_test_str_hello'] =\n        wasmExports['sqlite3__wasm_test_str_hello'])(a0));\n    var _sqlite3__wasm_SQLTester_strglob = (Module[\n      '_sqlite3__wasm_SQLTester_strglob'\n    ] = (a0, a1) =>\n      (_sqlite3__wasm_SQLTester_strglob = Module[\n        '_sqlite3__wasm_SQLTester_strglob'\n      ] =\n        wasmExports['sqlite3__wasm_SQLTester_strglob'])(a0, a1));\n    var _malloc = (Module['_malloc'] = (a0) =>\n      (_malloc = Module['_malloc'] = wasmExports['malloc'])(a0));\n    var _free = (Module['_free'] = (a0) =>\n      (_free = Module['_free'] = wasmExports['free'])(a0));\n    var _realloc = (Module['_realloc'] = (a0, a1) =>\n      (_realloc = Module['_realloc'] = wasmExports['realloc'])(a0, a1));\n    var _emscripten_builtin_memalign = (a0, a1) =>\n      (_emscripten_builtin_memalign =\n        wasmExports['emscripten_builtin_memalign'])(a0, a1);\n    var __emscripten_stack_restore = (a0) =>\n      (__emscripten_stack_restore = wasmExports['_emscripten_stack_restore'])(\n        a0,\n      );\n    var __emscripten_stack_alloc = (a0) =>\n      (__emscripten_stack_alloc = wasmExports['_emscripten_stack_alloc'])(a0);\n    var _emscripten_stack_get_current = () =>\n      (_emscripten_stack_get_current =\n        wasmExports['emscripten_stack_get_current'])();\n\n    Module['wasmMemory'] = wasmMemory;\n\n    var calledRun;\n    var calledPrerun;\n\n    dependenciesFulfilled = function runCaller() {\n      if (!calledRun) run();\n      if (!calledRun) dependenciesFulfilled = runCaller;\n    };\n\n    function run() {\n      if (runDependencies > 0) {\n        return;\n      }\n\n      if (!calledPrerun) {\n        calledPrerun = 1;\n        preRun();\n\n        if (runDependencies > 0) {\n          return;\n        }\n      }\n\n      function doRun() {\n        if (calledRun) return;\n        calledRun = 1;\n        Module['calledRun'] = 1;\n\n        if (ABORT) return;\n\n        initRuntime();\n\n        readyPromiseResolve(Module);\n        Module['onRuntimeInitialized']?.();\n\n        postRun();\n      }\n\n      if (Module['setStatus']) {\n        Module['setStatus']('Running...');\n        setTimeout(() => {\n          setTimeout(() => Module['setStatus'](''), 1);\n          doRun();\n        }, 1);\n      } else {\n        doRun();\n      }\n    }\n\n    if (Module['preInit']) {\n      if (typeof Module['preInit'] == 'function')\n        Module['preInit'] = [Module['preInit']];\n      while (Module['preInit'].length > 0) {\n        Module['preInit'].pop()();\n      }\n    }\n\n    run();\n\n    Module.runSQLite3PostLoadInit = function (EmscriptenModule) {\n      'use strict';\n\n      'use strict';\n      globalThis.sqlite3ApiBootstrap = function sqlite3ApiBootstrap(\n        apiConfig = globalThis.sqlite3ApiConfig ||\n          sqlite3ApiBootstrap.defaultConfig,\n      ) {\n        if (sqlite3ApiBootstrap.sqlite3) {\n          (sqlite3ApiBootstrap.sqlite3.config || console).warn(\n            'sqlite3ApiBootstrap() called multiple times.',\n            'Config and external initializers are ignored on calls after the first.',\n          );\n          return sqlite3ApiBootstrap.sqlite3;\n        }\n        const config = Object.assign(\n          Object.create(null),\n          {\n            exports: undefined,\n            memory: undefined,\n            bigIntEnabled: (() => {\n              if ('undefined' !== typeof Module) {\n                if (!!Module.HEAPU64) return true;\n              }\n              return !!globalThis.BigInt64Array;\n            })(),\n            debug: console.debug.bind(console),\n            warn: console.warn.bind(console),\n            error: console.error.bind(console),\n            log: console.log.bind(console),\n            wasmfsOpfsDir: '/opfs',\n\n            useStdAlloc: false,\n          },\n          apiConfig || {},\n        );\n\n        Object.assign(\n          config,\n          {\n            allocExportName: config.useStdAlloc ? 'malloc' : 'sqlite3_malloc',\n            deallocExportName: config.useStdAlloc ? 'free' : 'sqlite3_free',\n            reallocExportName: config.useStdAlloc\n              ? 'realloc'\n              : 'sqlite3_realloc',\n          },\n          config,\n        );\n\n        ['exports', 'memory', 'wasmfsOpfsDir'].forEach((k) => {\n          if ('function' === typeof config[k]) {\n            config[k] = config[k]();\n          }\n        });\n\n        delete globalThis.sqlite3ApiConfig;\n        delete sqlite3ApiBootstrap.defaultConfig;\n\n        const capi = Object.create(null);\n\n        const wasm = Object.create(null);\n\n        const __rcStr = (rc) => {\n          return (\n            (capi.sqlite3_js_rc_str && capi.sqlite3_js_rc_str(rc)) ||\n            'Unknown result code #' + rc\n          );\n        };\n\n        const __isInt = (n) => 'number' === typeof n && n === (n | 0);\n\n        class SQLite3Error extends Error {\n          constructor(...args) {\n            let rc;\n            if (args.length) {\n              if (__isInt(args[0])) {\n                rc = args[0];\n                if (1 === args.length) {\n                  super(__rcStr(args[0]));\n                } else {\n                  const rcStr = __rcStr(rc);\n                  if ('object' === typeof args[1]) {\n                    super(rcStr, args[1]);\n                  } else {\n                    args[0] = rcStr + ':';\n                    super(args.join(' '));\n                  }\n                }\n              } else {\n                if (2 === args.length && 'object' === typeof args[1]) {\n                  super(...args);\n                } else {\n                  super(args.join(' '));\n                }\n              }\n            }\n            this.resultCode = rc || capi.SQLITE_ERROR;\n            this.name = 'SQLite3Error';\n          }\n        }\n\n        SQLite3Error.toss = (...args) => {\n          throw new SQLite3Error(...args);\n        };\n        const toss3 = SQLite3Error.toss;\n\n        if (config.wasmfsOpfsDir && !/^\\/[^/]+$/.test(config.wasmfsOpfsDir)) {\n          toss3(\n            \"config.wasmfsOpfsDir must be falsy or in the form '/dir-name'.\",\n          );\n        }\n\n        const isInt32 = (n) => {\n          return (\n            'bigint' !== typeof n &&\n            !!(n === (n | 0) && n <= 2147483647 && n >= -2147483648)\n          );\n        };\n\n        const bigIntFits64 = function f(b) {\n          if (!f._max) {\n            f._max = BigInt('0x7fffffffffffffff');\n            f._min = ~f._max;\n          }\n          return b >= f._min && b <= f._max;\n        };\n\n        const bigIntFits32 = (b) => b >= -0x7fffffffn - 1n && b <= 0x7fffffffn;\n\n        const bigIntFitsDouble = function f(b) {\n          if (!f._min) {\n            f._min = Number.MIN_SAFE_INTEGER;\n            f._max = Number.MAX_SAFE_INTEGER;\n          }\n          return b >= f._min && b <= f._max;\n        };\n\n        const isTypedArray = (v) => {\n          return v && v.constructor && isInt32(v.constructor.BYTES_PER_ELEMENT)\n            ? v\n            : false;\n        };\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n\n        const isSharedTypedArray = (aTypedArray) =>\n          aTypedArray.buffer instanceof __SAB;\n\n        const typedArrayPart = (aTypedArray, begin, end) => {\n          return isSharedTypedArray(aTypedArray)\n            ? aTypedArray.slice(begin, end)\n            : aTypedArray.subarray(begin, end);\n        };\n\n        const isBindableTypedArray = (v) => {\n          return (\n            v &&\n            (v instanceof Uint8Array ||\n              v instanceof Int8Array ||\n              v instanceof ArrayBuffer)\n          );\n        };\n\n        const isSQLableTypedArray = (v) => {\n          return (\n            v &&\n            (v instanceof Uint8Array ||\n              v instanceof Int8Array ||\n              v instanceof ArrayBuffer)\n          );\n        };\n\n        const affirmBindableTypedArray = (v) => {\n          return (\n            isBindableTypedArray(v) ||\n            toss3('Value is not of a supported TypedArray type.')\n          );\n        };\n\n        const utf8Decoder = new TextDecoder('utf-8');\n\n        const typedArrayToString = function (typedArray, begin, end) {\n          return utf8Decoder.decode(typedArrayPart(typedArray, begin, end));\n        };\n\n        const flexibleString = function (v) {\n          if (isSQLableTypedArray(v)) {\n            return typedArrayToString(\n              v instanceof ArrayBuffer ? new Uint8Array(v) : v,\n            );\n          } else if (Array.isArray(v)) return v.join('');\n          else if (wasm.isPtr(v)) v = wasm.cstrToJs(v);\n          return v;\n        };\n\n        class WasmAllocError extends Error {\n          constructor(...args) {\n            if (2 === args.length && 'object' === typeof args[1]) {\n              super(...args);\n            } else if (args.length) {\n              super(args.join(' '));\n            } else {\n              super('Allocation failed.');\n            }\n            this.resultCode = capi.SQLITE_NOMEM;\n            this.name = 'WasmAllocError';\n          }\n        }\n\n        WasmAllocError.toss = (...args) => {\n          throw new WasmAllocError(...args);\n        };\n\n        Object.assign(capi, {\n          sqlite3_bind_blob: undefined,\n\n          sqlite3_bind_text: undefined,\n\n          sqlite3_create_function_v2: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n            xDestroy,\n          ) => {},\n\n          sqlite3_create_function: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n          ) => {},\n\n          sqlite3_create_window_function: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xStep,\n            xFinal,\n            xValue,\n            xInverse,\n            xDestroy,\n          ) => {},\n\n          sqlite3_prepare_v3: (\n            dbPtr,\n            sql,\n            sqlByteLen,\n            prepFlags,\n            stmtPtrPtr,\n            strPtrPtr,\n          ) => {},\n\n          sqlite3_prepare_v2: (\n            dbPtr,\n            sql,\n            sqlByteLen,\n            stmtPtrPtr,\n            strPtrPtr,\n          ) => {},\n\n          sqlite3_exec: (pDb, sql, callback, pVoid, pErrMsg) => {},\n\n          sqlite3_randomness: (n, outPtr) => {},\n        });\n\n        const util = {\n          affirmBindableTypedArray,\n          flexibleString,\n          bigIntFits32,\n          bigIntFits64,\n          bigIntFitsDouble,\n          isBindableTypedArray,\n          isInt32,\n          isSQLableTypedArray,\n          isTypedArray,\n          typedArrayToString,\n          isUIThread: () =>\n            globalThis.window === globalThis && !!globalThis.document,\n\n          isSharedTypedArray,\n          toss: function (...args) {\n            throw new Error(args.join(' '));\n          },\n          toss3,\n          typedArrayPart,\n\n          affirmDbHeader: function (bytes) {\n            if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n            const header = 'SQLite format 3';\n            if (header.length > bytes.byteLength) {\n              toss3('Input does not contain an SQLite3 database header.');\n            }\n            for (let i = 0; i < header.length; ++i) {\n              if (header.charCodeAt(i) !== bytes[i]) {\n                toss3('Input does not contain an SQLite3 database header.');\n              }\n            }\n          },\n\n          affirmIsDb: function (bytes) {\n            if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n            const n = bytes.byteLength;\n            if (n < 512 || n % 512 !== 0) {\n              toss3('Byte array size', n, 'is invalid for an SQLite3 db.');\n            }\n            util.affirmDbHeader(bytes);\n          },\n        };\n\n        Object.assign(wasm, {\n          ptrSizeof: config.wasmPtrSizeof || 4,\n\n          ptrIR: config.wasmPtrIR || 'i32',\n\n          bigIntEnabled: !!config.bigIntEnabled,\n\n          exports:\n            config.exports ||\n            toss3('Missing API config.exports (WASM module exports).'),\n\n          memory:\n            config.memory ||\n            config.exports['memory'] ||\n            toss3(\n              'API config object requires a WebAssembly.Memory object',\n              'in either config.exports.memory (exported)',\n              'or config.memory (imported).',\n            ),\n\n          alloc: undefined,\n\n          realloc: undefined,\n\n          dealloc: undefined,\n        });\n\n        wasm.allocFromTypedArray = function (srcTypedArray) {\n          if (srcTypedArray instanceof ArrayBuffer) {\n            srcTypedArray = new Uint8Array(srcTypedArray);\n          }\n          affirmBindableTypedArray(srcTypedArray);\n          const pRet = wasm.alloc(srcTypedArray.byteLength || 1);\n          wasm\n            .heapForSize(srcTypedArray.constructor)\n            .set(srcTypedArray.byteLength ? srcTypedArray : [0], pRet);\n          return pRet;\n        };\n\n        {\n          const keyAlloc = config.allocExportName,\n            keyDealloc = config.deallocExportName,\n            keyRealloc = config.reallocExportName;\n          for (const key of [keyAlloc, keyDealloc, keyRealloc]) {\n            const f = wasm.exports[key];\n            if (!(f instanceof Function))\n              toss3('Missing required exports[', key, '] function.');\n          }\n\n          wasm.alloc = function f(n) {\n            return (\n              f.impl(n) ||\n              WasmAllocError.toss('Failed to allocate', n, ' bytes.')\n            );\n          };\n          wasm.alloc.impl = wasm.exports[keyAlloc];\n          wasm.realloc = function f(m, n) {\n            const m2 = f.impl(m, n);\n            return n\n              ? m2 || WasmAllocError.toss('Failed to reallocate', n, ' bytes.')\n              : 0;\n          };\n          wasm.realloc.impl = wasm.exports[keyRealloc];\n          wasm.dealloc = wasm.exports[keyDealloc];\n        }\n\n        wasm.compileOptionUsed = function f(optName) {\n          if (!arguments.length) {\n            if (f._result) return f._result;\n            else if (!f._opt) {\n              f._rx = /^([^=]+)=(.+)/;\n              f._rxInt = /^-?\\d+$/;\n              f._opt = function (opt, rv) {\n                const m = f._rx.exec(opt);\n                rv[0] = m ? m[1] : opt;\n                rv[1] = m ? (f._rxInt.test(m[2]) ? +m[2] : m[2]) : true;\n              };\n            }\n            const rc = {},\n              ov = [0, 0];\n            let i = 0,\n              k;\n            while ((k = capi.sqlite3_compileoption_get(i++))) {\n              f._opt(k, ov);\n              rc[ov[0]] = ov[1];\n            }\n            return (f._result = rc);\n          } else if (Array.isArray(optName)) {\n            const rc = {};\n            optName.forEach((v) => {\n              rc[v] = capi.sqlite3_compileoption_used(v);\n            });\n            return rc;\n          } else if ('object' === typeof optName) {\n            Object.keys(optName).forEach((k) => {\n              optName[k] = capi.sqlite3_compileoption_used(k);\n            });\n            return optName;\n          }\n          return 'string' === typeof optName\n            ? !!capi.sqlite3_compileoption_used(optName)\n            : false;\n        };\n\n        wasm.pstack = Object.assign(Object.create(null), {\n          restore: wasm.exports.sqlite3__wasm_pstack_restore,\n\n          alloc: function (n) {\n            if ('string' === typeof n && !(n = wasm.sizeofIR(n))) {\n              WasmAllocError.toss(\n                'Invalid value for pstack.alloc(',\n                arguments[0],\n                ')',\n              );\n            }\n            return (\n              wasm.exports.sqlite3__wasm_pstack_alloc(n) ||\n              WasmAllocError.toss(\n                'Could not allocate',\n                n,\n                'bytes from the pstack.',\n              )\n            );\n          },\n\n          allocChunks: function (n, sz) {\n            if ('string' === typeof sz && !(sz = wasm.sizeofIR(sz))) {\n              WasmAllocError.toss(\n                'Invalid size value for allocChunks(',\n                arguments[1],\n                ')',\n              );\n            }\n            const mem = wasm.pstack.alloc(n * sz);\n            const rc = [];\n            let i = 0,\n              offset = 0;\n            for (; i < n; ++i, offset += sz) rc.push(mem + offset);\n            return rc;\n          },\n\n          allocPtr: (n = 1, safePtrSize = true) => {\n            return 1 === n\n              ? wasm.pstack.alloc(safePtrSize ? 8 : wasm.ptrSizeof)\n              : wasm.pstack.allocChunks(n, safePtrSize ? 8 : wasm.ptrSizeof);\n          },\n\n          call: function (f) {\n            const stackPos = wasm.pstack.pointer;\n            try {\n              return f(sqlite3);\n            } finally {\n              wasm.pstack.restore(stackPos);\n            }\n          },\n        });\n        Object.defineProperties(wasm.pstack, {\n          pointer: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3__wasm_pstack_ptr,\n          },\n\n          quota: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3__wasm_pstack_quota,\n          },\n\n          remaining: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3__wasm_pstack_remaining,\n          },\n        });\n\n        capi.sqlite3_randomness = (...args) => {\n          if (\n            1 === args.length &&\n            util.isTypedArray(args[0]) &&\n            1 === args[0].BYTES_PER_ELEMENT\n          ) {\n            const ta = args[0];\n            if (0 === ta.byteLength) {\n              wasm.exports.sqlite3_randomness(0, 0);\n              return ta;\n            }\n            const stack = wasm.pstack.pointer;\n            try {\n              let n = ta.byteLength,\n                offset = 0;\n              const r = wasm.exports.sqlite3_randomness;\n              const heap = wasm.heap8u();\n              const nAlloc = n < 512 ? n : 512;\n              const ptr = wasm.pstack.alloc(nAlloc);\n              do {\n                const j = n > nAlloc ? nAlloc : n;\n                r(j, ptr);\n                ta.set(typedArrayPart(heap, ptr, ptr + j), offset);\n                n -= j;\n                offset += j;\n              } while (n > 0);\n            } catch (e) {\n              console.error(\n                'Highly unexpected (and ignored!) ' +\n                  'exception in sqlite3_randomness():',\n                e,\n              );\n            } finally {\n              wasm.pstack.restore(stack);\n            }\n            return ta;\n          }\n          wasm.exports.sqlite3_randomness(...args);\n        };\n\n        let __wasmfsOpfsDir = undefined;\n\n        capi.sqlite3_wasmfs_opfs_dir = function () {\n          if (undefined !== __wasmfsOpfsDir) return __wasmfsOpfsDir;\n\n          const pdir = config.wasmfsOpfsDir;\n          if (\n            !pdir ||\n            !globalThis.FileSystemHandle ||\n            !globalThis.FileSystemDirectoryHandle ||\n            !globalThis.FileSystemFileHandle\n          ) {\n            return (__wasmfsOpfsDir = '');\n          }\n          try {\n            if (\n              pdir &&\n              0 ===\n                wasm.xCallWrapped(\n                  'sqlite3__wasm_init_wasmfs',\n                  'i32',\n                  ['string'],\n                  pdir,\n                )\n            ) {\n              return (__wasmfsOpfsDir = pdir);\n            } else {\n              return (__wasmfsOpfsDir = '');\n            }\n          } catch (e) {\n            return (__wasmfsOpfsDir = '');\n          }\n        };\n\n        capi.sqlite3_wasmfs_filename_is_persistent = function (name) {\n          const p = capi.sqlite3_wasmfs_opfs_dir();\n          return p && name ? name.startsWith(p + '/') : false;\n        };\n\n        capi.sqlite3_js_db_uses_vfs = function (pDb, vfsName, dbName = 0) {\n          try {\n            const pK = capi.sqlite3_vfs_find(vfsName);\n            if (!pK) return false;\n            else if (!pDb) {\n              return pK === capi.sqlite3_vfs_find(0) ? pK : false;\n            } else {\n              return pK === capi.sqlite3_js_db_vfs(pDb, dbName) ? pK : false;\n            }\n          } catch (e) {\n            return false;\n          }\n        };\n\n        capi.sqlite3_js_vfs_list = function () {\n          const rc = [];\n          let pVfs = capi.sqlite3_vfs_find(0);\n          while (pVfs) {\n            const oVfs = new capi.sqlite3_vfs(pVfs);\n            rc.push(wasm.cstrToJs(oVfs.$zName));\n            pVfs = oVfs.$pNext;\n            oVfs.dispose();\n          }\n          return rc;\n        };\n\n        capi.sqlite3_js_db_export = function (pDb, schema = 0) {\n          pDb = wasm.xWrap.testConvertArg('sqlite3*', pDb);\n          if (!pDb) toss3('Invalid sqlite3* argument.');\n          if (!wasm.bigIntEnabled) toss3('BigInt64 support is not enabled.');\n          const scope = wasm.scopedAllocPush();\n          let pOut;\n          try {\n            const pSize = wasm.scopedAlloc(8 + wasm.ptrSizeof);\n            const ppOut = pSize + 8;\n\n            const zSchema = schema\n              ? wasm.isPtr(schema)\n                ? schema\n                : wasm.scopedAllocCString('' + schema)\n              : 0;\n            let rc = wasm.exports.sqlite3__wasm_db_serialize(\n              pDb,\n              zSchema,\n              ppOut,\n              pSize,\n              0,\n            );\n            if (rc) {\n              toss3(\n                'Database serialization failed with code',\n                sqlite3.capi.sqlite3_js_rc_str(rc),\n              );\n            }\n            pOut = wasm.peekPtr(ppOut);\n            const nOut = wasm.peek(pSize, 'i64');\n            rc = nOut\n              ? wasm.heap8u().slice(pOut, pOut + Number(nOut))\n              : new Uint8Array();\n            return rc;\n          } finally {\n            if (pOut) wasm.exports.sqlite3_free(pOut);\n            wasm.scopedAllocPop(scope);\n          }\n        };\n\n        capi.sqlite3_js_db_vfs = (dbPointer, dbName = 0) =>\n          util.sqlite3__wasm_db_vfs(dbPointer, dbName);\n\n        capi.sqlite3_js_aggregate_context = (pCtx, n) => {\n          return (\n            capi.sqlite3_aggregate_context(pCtx, n) ||\n            (n\n              ? WasmAllocError.toss(\n                  'Cannot allocate',\n                  n,\n                  'bytes for sqlite3_aggregate_context()',\n                )\n              : 0)\n          );\n        };\n\n        capi.sqlite3_js_posix_create_file = function (filename, data, dataLen) {\n          let pData;\n          if (data && wasm.isPtr(data)) {\n            pData = data;\n          } else if (\n            data instanceof ArrayBuffer ||\n            data instanceof Uint8Array\n          ) {\n            pData = wasm.allocFromTypedArray(data);\n            if (arguments.length < 3 || !util.isInt32(dataLen) || dataLen < 0) {\n              dataLen = data.byteLength;\n            }\n          } else {\n            SQLite3Error.toss(\n              'Invalid 2nd argument for sqlite3_js_posix_create_file().',\n            );\n          }\n          try {\n            if (!util.isInt32(dataLen) || dataLen < 0) {\n              SQLite3Error.toss(\n                'Invalid 3rd argument for sqlite3_js_posix_create_file().',\n              );\n            }\n            const rc = util.sqlite3__wasm_posix_create_file(\n              filename,\n              pData,\n              dataLen,\n            );\n            if (rc)\n              SQLite3Error.toss(\n                'Creation of file failed with sqlite3 result code',\n                capi.sqlite3_js_rc_str(rc),\n              );\n          } finally {\n            wasm.dealloc(pData);\n          }\n        };\n\n        capi.sqlite3_js_vfs_create_file = function (\n          vfs,\n          filename,\n          data,\n          dataLen,\n        ) {\n          config.warn(\n            'sqlite3_js_vfs_create_file() is deprecated and',\n            'should be avoided because it can lead to C-level crashes.',\n            'See its documentation for alternative options.',\n          );\n          let pData;\n          if (data) {\n            if (wasm.isPtr(data)) {\n              pData = data;\n            } else if (data instanceof ArrayBuffer) {\n              data = new Uint8Array(data);\n            }\n            if (data instanceof Uint8Array) {\n              pData = wasm.allocFromTypedArray(data);\n              if (\n                arguments.length < 4 ||\n                !util.isInt32(dataLen) ||\n                dataLen < 0\n              ) {\n                dataLen = data.byteLength;\n              }\n            } else {\n              SQLite3Error.toss(\n                'Invalid 3rd argument type for sqlite3_js_vfs_create_file().',\n              );\n            }\n          } else {\n            pData = 0;\n          }\n          if (!util.isInt32(dataLen) || dataLen < 0) {\n            wasm.dealloc(pData);\n            SQLite3Error.toss(\n              'Invalid 4th argument for sqlite3_js_vfs_create_file().',\n            );\n          }\n          try {\n            const rc = util.sqlite3__wasm_vfs_create_file(\n              vfs,\n              filename,\n              pData,\n              dataLen,\n            );\n            if (rc)\n              SQLite3Error.toss(\n                'Creation of file failed with sqlite3 result code',\n                capi.sqlite3_js_rc_str(rc),\n              );\n          } finally {\n            wasm.dealloc(pData);\n          }\n        };\n\n        capi.sqlite3_js_sql_to_string = (sql) => {\n          if ('string' === typeof sql) {\n            return sql;\n          }\n          const x = flexibleString(v);\n          return x === v ? undefined : x;\n        };\n\n        if (util.isUIThread()) {\n          const __kvvfsInfo = function (which) {\n            const rc = Object.create(null);\n            rc.prefix = 'kvvfs-' + which;\n            rc.stores = [];\n            if ('session' === which || '' === which)\n              rc.stores.push(globalThis.sessionStorage);\n            if ('local' === which || '' === which)\n              rc.stores.push(globalThis.localStorage);\n            return rc;\n          };\n\n          capi.sqlite3_js_kvvfs_clear = function (which = '') {\n            let rc = 0;\n            const kvinfo = __kvvfsInfo(which);\n            kvinfo.stores.forEach((s) => {\n              const toRm = [];\n              let i;\n              for (i = 0; i < s.length; ++i) {\n                const k = s.key(i);\n                if (k.startsWith(kvinfo.prefix)) toRm.push(k);\n              }\n              toRm.forEach((kk) => s.removeItem(kk));\n              rc += toRm.length;\n            });\n            return rc;\n          };\n\n          capi.sqlite3_js_kvvfs_size = function (which = '') {\n            let sz = 0;\n            const kvinfo = __kvvfsInfo(which);\n            kvinfo.stores.forEach((s) => {\n              let i;\n              for (i = 0; i < s.length; ++i) {\n                const k = s.key(i);\n                if (k.startsWith(kvinfo.prefix)) {\n                  sz += k.length;\n                  sz += s.getItem(k).length;\n                }\n              }\n            });\n            return sz * 2;\n          };\n        }\n\n        capi.sqlite3_db_config = function (pDb, op, ...args) {\n          switch (op) {\n            case capi.SQLITE_DBCONFIG_ENABLE_FKEY:\n            case capi.SQLITE_DBCONFIG_ENABLE_TRIGGER:\n            case capi.SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER:\n            case capi.SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION:\n            case capi.SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE:\n            case capi.SQLITE_DBCONFIG_ENABLE_QPSG:\n            case capi.SQLITE_DBCONFIG_TRIGGER_EQP:\n            case capi.SQLITE_DBCONFIG_RESET_DATABASE:\n            case capi.SQLITE_DBCONFIG_DEFENSIVE:\n            case capi.SQLITE_DBCONFIG_WRITABLE_SCHEMA:\n            case capi.SQLITE_DBCONFIG_LEGACY_ALTER_TABLE:\n            case capi.SQLITE_DBCONFIG_DQS_DML:\n            case capi.SQLITE_DBCONFIG_DQS_DDL:\n            case capi.SQLITE_DBCONFIG_ENABLE_VIEW:\n            case capi.SQLITE_DBCONFIG_LEGACY_FILE_FORMAT:\n            case capi.SQLITE_DBCONFIG_TRUSTED_SCHEMA:\n            case capi.SQLITE_DBCONFIG_STMT_SCANSTATUS:\n            case capi.SQLITE_DBCONFIG_REVERSE_SCANORDER:\n            case capi.SQLITE_DBCONFIG_ENABLE_ATTACH_CREATE:\n            case capi.SQLITE_DBCONFIG_ENABLE_ATTACH_WRITE:\n            case capi.SQLITE_DBCONFIG_ENABLE_COMMENTS:\n              if (!this.ip) {\n                this.ip = wasm.xWrap('sqlite3__wasm_db_config_ip', 'int', [\n                  'sqlite3*',\n                  'int',\n                  'int',\n                  '*',\n                ]);\n              }\n              return this.ip(pDb, op, args[0], args[1] || 0);\n            case capi.SQLITE_DBCONFIG_LOOKASIDE:\n              if (!this.pii) {\n                this.pii = wasm.xWrap('sqlite3__wasm_db_config_pii', 'int', [\n                  'sqlite3*',\n                  'int',\n                  '*',\n                  'int',\n                  'int',\n                ]);\n              }\n              return this.pii(pDb, op, args[0], args[1], args[2]);\n            case capi.SQLITE_DBCONFIG_MAINDBNAME:\n              if (!this.s) {\n                this.s = wasm.xWrap('sqlite3__wasm_db_config_s', 'int', [\n                  'sqlite3*',\n                  'int',\n                  'string:static',\n                ]);\n              }\n              return this.s(pDb, op, args[0]);\n            default:\n              return capi.SQLITE_MISUSE;\n          }\n        }.bind(Object.create(null));\n\n        capi.sqlite3_value_to_js = function (\n          pVal,\n          throwIfCannotConvert = true,\n        ) {\n          let arg;\n          const valType = capi.sqlite3_value_type(pVal);\n          switch (valType) {\n            case capi.SQLITE_INTEGER:\n              if (wasm.bigIntEnabled) {\n                arg = capi.sqlite3_value_int64(pVal);\n                if (util.bigIntFitsDouble(arg)) arg = Number(arg);\n              } else arg = capi.sqlite3_value_double(pVal);\n              break;\n            case capi.SQLITE_FLOAT:\n              arg = capi.sqlite3_value_double(pVal);\n              break;\n            case capi.SQLITE_TEXT:\n              arg = capi.sqlite3_value_text(pVal);\n              break;\n            case capi.SQLITE_BLOB: {\n              const n = capi.sqlite3_value_bytes(pVal);\n              const pBlob = capi.sqlite3_value_blob(pVal);\n              if (n && !pBlob)\n                sqlite3.WasmAllocError.toss(\n                  'Cannot allocate memory for blob argument of',\n                  n,\n                  'byte(s)',\n                );\n              arg = n ? wasm.heap8u().slice(pBlob, pBlob + Number(n)) : null;\n              break;\n            }\n            case capi.SQLITE_NULL:\n              arg = null;\n              break;\n            default:\n              if (throwIfCannotConvert) {\n                toss3(\n                  capi.SQLITE_MISMATCH,\n                  'Unhandled sqlite3_value_type():',\n                  valType,\n                );\n              }\n              arg = undefined;\n          }\n          return arg;\n        };\n\n        capi.sqlite3_values_to_js = function (\n          argc,\n          pArgv,\n          throwIfCannotConvert = true,\n        ) {\n          let i;\n          const tgt = [];\n          for (i = 0; i < argc; ++i) {\n            tgt.push(\n              capi.sqlite3_value_to_js(\n                wasm.peekPtr(pArgv + wasm.ptrSizeof * i),\n                throwIfCannotConvert,\n              ),\n            );\n          }\n          return tgt;\n        };\n\n        capi.sqlite3_result_error_js = function (pCtx, e) {\n          if (e instanceof WasmAllocError) {\n            capi.sqlite3_result_error_nomem(pCtx);\n          } else {\n            capi.sqlite3_result_error(pCtx, '' + e, -1);\n          }\n        };\n\n        capi.sqlite3_result_js = function (pCtx, val) {\n          if (val instanceof Error) {\n            capi.sqlite3_result_error_js(pCtx, val);\n            return;\n          }\n          try {\n            switch (typeof val) {\n              case 'undefined':\n                break;\n              case 'boolean':\n                capi.sqlite3_result_int(pCtx, val ? 1 : 0);\n                break;\n              case 'bigint':\n                if (util.bigIntFits32(val)) {\n                  capi.sqlite3_result_int(pCtx, Number(val));\n                } else if (util.bigIntFitsDouble(val)) {\n                  capi.sqlite3_result_double(pCtx, Number(val));\n                } else if (wasm.bigIntEnabled) {\n                  if (util.bigIntFits64(val))\n                    capi.sqlite3_result_int64(pCtx, val);\n                  else\n                    toss3(\n                      'BigInt value',\n                      val.toString(),\n                      'is too BigInt for int64.',\n                    );\n                } else {\n                  toss3('BigInt value', val.toString(), 'is too BigInt.');\n                }\n                break;\n              case 'number': {\n                let f;\n                if (util.isInt32(val)) {\n                  f = capi.sqlite3_result_int;\n                } else if (\n                  wasm.bigIntEnabled &&\n                  Number.isInteger(val) &&\n                  util.bigIntFits64(BigInt(val))\n                ) {\n                  f = capi.sqlite3_result_int64;\n                } else {\n                  f = capi.sqlite3_result_double;\n                }\n                f(pCtx, val);\n                break;\n              }\n              case 'string': {\n                const [p, n] = wasm.allocCString(val, true);\n                capi.sqlite3_result_text(pCtx, p, n, capi.SQLITE_WASM_DEALLOC);\n                break;\n              }\n              case 'object':\n                if (null === val) {\n                  capi.sqlite3_result_null(pCtx);\n                  break;\n                } else if (util.isBindableTypedArray(val)) {\n                  const pBlob = wasm.allocFromTypedArray(val);\n                  capi.sqlite3_result_blob(\n                    pCtx,\n                    pBlob,\n                    val.byteLength,\n                    capi.SQLITE_WASM_DEALLOC,\n                  );\n                  break;\n                }\n\n              default:\n                toss3(\n                  \"Don't not how to handle this UDF result value:\",\n                  typeof val,\n                  val,\n                );\n            }\n          } catch (e) {\n            capi.sqlite3_result_error_js(pCtx, e);\n          }\n        };\n\n        capi.sqlite3_column_js = function (\n          pStmt,\n          iCol,\n          throwIfCannotConvert = true,\n        ) {\n          const v = capi.sqlite3_column_value(pStmt, iCol);\n          return 0 === v\n            ? undefined\n            : capi.sqlite3_value_to_js(v, throwIfCannotConvert);\n        };\n\n        const __newOldValue = function (pObj, iCol, impl) {\n          impl = capi[impl];\n          if (!this.ptr) this.ptr = wasm.allocPtr();\n          else wasm.pokePtr(this.ptr, 0);\n          const rc = impl(pObj, iCol, this.ptr);\n          if (rc)\n            return SQLite3Error.toss(\n              rc,\n              arguments[2] + '() failed with code ' + rc,\n            );\n          const pv = wasm.peekPtr(this.ptr);\n          return pv ? capi.sqlite3_value_to_js(pv, true) : undefined;\n        }.bind(Object.create(null));\n\n        capi.sqlite3_preupdate_new_js = (pDb, iCol) =>\n          __newOldValue(pDb, iCol, 'sqlite3_preupdate_new');\n\n        capi.sqlite3_preupdate_old_js = (pDb, iCol) =>\n          __newOldValue(pDb, iCol, 'sqlite3_preupdate_old');\n\n        capi.sqlite3changeset_new_js = (pChangesetIter, iCol) =>\n          __newOldValue(pChangesetIter, iCol, 'sqlite3changeset_new');\n\n        capi.sqlite3changeset_old_js = (pChangesetIter, iCol) =>\n          __newOldValue(pChangesetIter, iCol, 'sqlite3changeset_old');\n\n        const sqlite3 = {\n          WasmAllocError: WasmAllocError,\n          SQLite3Error: SQLite3Error,\n          capi,\n          util,\n          wasm,\n          config,\n\n          version: Object.create(null),\n\n          client: undefined,\n\n          asyncPostInit: async function ff() {\n            if (ff.isReady instanceof Promise) return ff.isReady;\n            let lia = sqlite3ApiBootstrap.initializersAsync;\n            delete sqlite3ApiBootstrap.initializersAsync;\n            const postInit = async () => {\n              if (!sqlite3.__isUnderTest) {\n                delete sqlite3.util;\n\n                delete sqlite3.StructBinder;\n              }\n              return sqlite3;\n            };\n            const catcher = (e) => {\n              config.error('an async sqlite3 initializer failed:', e);\n              throw e;\n            };\n            if (!lia || !lia.length) {\n              return (ff.isReady = postInit().catch(catcher));\n            }\n            lia = lia.map((f) => {\n              return f instanceof Function ? async (x) => f(sqlite3) : f;\n            });\n            lia.push(postInit);\n            let p = Promise.resolve(sqlite3);\n            while (lia.length) p = p.then(lia.shift());\n            return (ff.isReady = p.catch(catcher));\n          },\n\n          scriptInfo: undefined,\n        };\n        try {\n          sqlite3ApiBootstrap.initializers.forEach((f) => {\n            f(sqlite3);\n          });\n        } catch (e) {\n          console.error('sqlite3 bootstrap initializer threw:', e);\n          throw e;\n        }\n        delete sqlite3ApiBootstrap.initializers;\n        sqlite3ApiBootstrap.sqlite3 = sqlite3;\n        return sqlite3;\n      };\n\n      globalThis.sqlite3ApiBootstrap.initializers = [];\n\n      globalThis.sqlite3ApiBootstrap.initializersAsync = [];\n\n      globalThis.sqlite3ApiBootstrap.defaultConfig = Object.create(null);\n\n      globalThis.sqlite3ApiBootstrap.sqlite3 = undefined;\n\n      globalThis.WhWasmUtilInstaller = function (target) {\n        'use strict';\n        if (undefined === target.bigIntEnabled) {\n          target.bigIntEnabled = !!globalThis['BigInt64Array'];\n        }\n\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n\n        if (!target.exports) {\n          Object.defineProperty(target, 'exports', {\n            enumerable: true,\n            configurable: true,\n            get: () => target.instance && target.instance.exports,\n          });\n        }\n\n        const ptrIR = target.pointerIR || 'i32';\n        const ptrSizeof = (target.ptrSizeof =\n          'i32' === ptrIR\n            ? 4\n            : 'i64' === ptrIR\n              ? 8\n              : toss('Unhandled ptrSizeof:', ptrIR));\n\n        const cache = Object.create(null);\n\n        cache.heapSize = 0;\n\n        cache.memory = null;\n\n        cache.freeFuncIndexes = [];\n\n        cache.scopedAlloc = [];\n\n        cache.utf8Decoder = new TextDecoder();\n        cache.utf8Encoder = new TextEncoder('utf-8');\n\n        target.sizeofIR = (n) => {\n          switch (n) {\n            case 'i8':\n              return 1;\n            case 'i16':\n              return 2;\n            case 'i32':\n            case 'f32':\n            case 'float':\n              return 4;\n            case 'i64':\n            case 'f64':\n            case 'double':\n              return 8;\n            case '*':\n              return ptrSizeof;\n            default:\n              return ('' + n).endsWith('*') ? ptrSizeof : undefined;\n          }\n        };\n\n        const heapWrappers = function () {\n          if (!cache.memory) {\n            cache.memory =\n              target.memory instanceof WebAssembly.Memory\n                ? target.memory\n                : target.exports.memory;\n          } else if (cache.heapSize === cache.memory.buffer.byteLength) {\n            return cache;\n          }\n\n          const b = cache.memory.buffer;\n          cache.HEAP8 = new Int8Array(b);\n          cache.HEAP8U = new Uint8Array(b);\n          cache.HEAP16 = new Int16Array(b);\n          cache.HEAP16U = new Uint16Array(b);\n          cache.HEAP32 = new Int32Array(b);\n          cache.HEAP32U = new Uint32Array(b);\n          if (target.bigIntEnabled) {\n            cache.HEAP64 = new BigInt64Array(b);\n            cache.HEAP64U = new BigUint64Array(b);\n          }\n          cache.HEAP32F = new Float32Array(b);\n          cache.HEAP64F = new Float64Array(b);\n          cache.heapSize = b.byteLength;\n          return cache;\n        };\n\n        target.heap8 = () => heapWrappers().HEAP8;\n\n        target.heap8u = () => heapWrappers().HEAP8U;\n\n        target.heap16 = () => heapWrappers().HEAP16;\n\n        target.heap16u = () => heapWrappers().HEAP16U;\n\n        target.heap32 = () => heapWrappers().HEAP32;\n\n        target.heap32u = () => heapWrappers().HEAP32U;\n\n        target.heapForSize = function (n, unsigned = true) {\n          let ctor;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          switch (n) {\n            case Int8Array:\n              return c.HEAP8;\n            case Uint8Array:\n              return c.HEAP8U;\n            case Int16Array:\n              return c.HEAP16;\n            case Uint16Array:\n              return c.HEAP16U;\n            case Int32Array:\n              return c.HEAP32;\n            case Uint32Array:\n              return c.HEAP32U;\n            case 8:\n              return unsigned ? c.HEAP8U : c.HEAP8;\n            case 16:\n              return unsigned ? c.HEAP16U : c.HEAP16;\n            case 32:\n              return unsigned ? c.HEAP32U : c.HEAP32;\n            case 64:\n              if (c.HEAP64) return unsigned ? c.HEAP64U : c.HEAP64;\n              break;\n            default:\n              if (target.bigIntEnabled) {\n                if (n === globalThis['BigUint64Array']) return c.HEAP64U;\n                else if (n === globalThis['BigInt64Array']) return c.HEAP64;\n                break;\n              }\n          }\n          toss(\n            'Invalid heapForSize() size: expecting 8, 16, 32,',\n            'or (if BigInt is enabled) 64.',\n          );\n        };\n\n        target.functionTable = function () {\n          return target.exports.__indirect_function_table;\n        };\n\n        target.functionEntry = function (fptr) {\n          const ft = target.functionTable();\n          return fptr < ft.length ? ft.get(fptr) : undefined;\n        };\n\n        target.jsFuncToWasm = function f(func, sig) {\n          if (!f._) {\n            f._ = {\n              sigTypes: Object.assign(Object.create(null), {\n                i: 'i32',\n                p: 'i32',\n                P: 'i32',\n                s: 'i32',\n                j: 'i64',\n                f: 'f32',\n                d: 'f64',\n              }),\n\n              typeCodes: Object.assign(Object.create(null), {\n                f64: 0x7c,\n                f32: 0x7d,\n                i64: 0x7e,\n                i32: 0x7f,\n              }),\n\n              uleb128Encode: function (tgt, method, n) {\n                if (n < 128) tgt[method](n);\n                else tgt[method](n % 128 | 128, n >> 7);\n              },\n\n              rxJSig: /^(\\w)\\((\\w*)\\)$/,\n\n              sigParams: function (sig) {\n                const m = f._.rxJSig.exec(sig);\n                return m ? m[2] : sig.substr(1);\n              },\n\n              letterType: (x) =>\n                f._.sigTypes[x] || toss('Invalid signature letter:', x),\n\n              pushSigType: (dest, letter) =>\n                dest.push(f._.typeCodes[f._.letterType(letter)]),\n            };\n          }\n          if ('string' === typeof func) {\n            const x = sig;\n            sig = func;\n            func = x;\n          }\n          const sigParams = f._.sigParams(sig);\n          const wasmCode = [0x01, 0x60];\n          f._.uleb128Encode(wasmCode, 'push', sigParams.length);\n          for (const x of sigParams) f._.pushSigType(wasmCode, x);\n          if ('v' === sig[0]) wasmCode.push(0);\n          else {\n            wasmCode.push(1);\n            f._.pushSigType(wasmCode, sig[0]);\n          }\n          f._.uleb128Encode(wasmCode, 'unshift', wasmCode.length);\n          wasmCode.unshift(\n            0x00,\n            0x61,\n            0x73,\n            0x6d,\n            0x01,\n            0x00,\n            0x00,\n            0x00,\n            0x01,\n          );\n          wasmCode.push(\n            0x02,\n            0x07,\n\n            0x01,\n            0x01,\n            0x65,\n            0x01,\n            0x66,\n            0x00,\n            0x00,\n            0x07,\n            0x05,\n\n            0x01,\n            0x01,\n            0x66,\n            0x00,\n            0x00,\n          );\n          return new WebAssembly.Instance(\n            new WebAssembly.Module(new Uint8Array(wasmCode)),\n            {\n              e: { f: func },\n            },\n          ).exports['f'];\n        };\n\n        const __installFunction = function f(func, sig, scoped) {\n          if (scoped && !cache.scopedAlloc.length) {\n            toss('No scopedAllocPush() scope is active.');\n          }\n          if ('string' === typeof func) {\n            const x = sig;\n            sig = func;\n            func = x;\n          }\n          if ('string' !== typeof sig || !(func instanceof Function)) {\n            toss(\n              'Invalid arguments: expecting (function,signature) ' +\n                'or (signature,function).',\n            );\n          }\n          const ft = target.functionTable();\n          const oldLen = ft.length;\n          let ptr;\n          while (cache.freeFuncIndexes.length) {\n            ptr = cache.freeFuncIndexes.pop();\n            if (ft.get(ptr)) {\n              ptr = null;\n              continue;\n            } else {\n              break;\n            }\n          }\n          if (!ptr) {\n            ptr = oldLen;\n            ft.grow(1);\n          }\n          try {\n            ft.set(ptr, func);\n            if (scoped) {\n              cache.scopedAlloc[cache.scopedAlloc.length - 1].push(ptr);\n            }\n            return ptr;\n          } catch (e) {\n            if (!(e instanceof TypeError)) {\n              if (ptr === oldLen) cache.freeFuncIndexes.push(oldLen);\n              throw e;\n            }\n          }\n\n          try {\n            const fptr = target.jsFuncToWasm(func, sig);\n            ft.set(ptr, fptr);\n            if (scoped) {\n              cache.scopedAlloc[cache.scopedAlloc.length - 1].push(ptr);\n            }\n          } catch (e) {\n            if (ptr === oldLen) cache.freeFuncIndexes.push(oldLen);\n            throw e;\n          }\n          return ptr;\n        };\n\n        target.installFunction = (func, sig) =>\n          __installFunction(func, sig, false);\n\n        target.scopedInstallFunction = (func, sig) =>\n          __installFunction(func, sig, true);\n\n        target.uninstallFunction = function (ptr) {\n          if (!ptr && 0 !== ptr) return undefined;\n          const fi = cache.freeFuncIndexes;\n          const ft = target.functionTable();\n          fi.push(ptr);\n          const rc = ft.get(ptr);\n          ft.set(ptr, null);\n          return rc;\n        };\n\n        target.peek = function f(ptr, type = 'i8') {\n          if (type.endsWith('*')) type = ptrIR;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          const list = Array.isArray(ptr) ? [] : undefined;\n          let rc;\n          do {\n            if (list) ptr = arguments[0].shift();\n            switch (type) {\n              case 'i1':\n              case 'i8':\n                rc = c.HEAP8[ptr >> 0];\n                break;\n              case 'i16':\n                rc = c.HEAP16[ptr >> 1];\n                break;\n              case 'i32':\n                rc = c.HEAP32[ptr >> 2];\n                break;\n              case 'float':\n              case 'f32':\n                rc = c.HEAP32F[ptr >> 2];\n                break;\n              case 'double':\n              case 'f64':\n                rc = Number(c.HEAP64F[ptr >> 3]);\n                break;\n              case 'i64':\n                if (target.bigIntEnabled) {\n                  rc = BigInt(c.HEAP64[ptr >> 3]);\n                  break;\n                }\n\n              default:\n                toss('Invalid type for peek():', type);\n            }\n            if (list) list.push(rc);\n          } while (list && arguments[0].length);\n          return list || rc;\n        };\n\n        target.poke = function (ptr, value, type = 'i8') {\n          if (type.endsWith('*')) type = ptrIR;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          for (const p of Array.isArray(ptr) ? ptr : [ptr]) {\n            switch (type) {\n              case 'i1':\n              case 'i8':\n                c.HEAP8[p >> 0] = value;\n                continue;\n              case 'i16':\n                c.HEAP16[p >> 1] = value;\n                continue;\n              case 'i32':\n                c.HEAP32[p >> 2] = value;\n                continue;\n              case 'float':\n              case 'f32':\n                c.HEAP32F[p >> 2] = value;\n                continue;\n              case 'double':\n              case 'f64':\n                c.HEAP64F[p >> 3] = value;\n                continue;\n              case 'i64':\n                if (c.HEAP64) {\n                  c.HEAP64[p >> 3] = BigInt(value);\n                  continue;\n                }\n\n              default:\n                toss('Invalid type for poke(): ' + type);\n            }\n          }\n          return this;\n        };\n\n        target.peekPtr = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, ptrIR);\n\n        target.pokePtr = (ptr, value = 0) => target.poke(ptr, value, ptrIR);\n\n        target.peek8 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i8');\n\n        target.poke8 = (ptr, value) => target.poke(ptr, value, 'i8');\n\n        target.peek16 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i16');\n\n        target.poke16 = (ptr, value) => target.poke(ptr, value, 'i16');\n\n        target.peek32 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i32');\n\n        target.poke32 = (ptr, value) => target.poke(ptr, value, 'i32');\n\n        target.peek64 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i64');\n\n        target.poke64 = (ptr, value) => target.poke(ptr, value, 'i64');\n\n        target.peek32f = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'f32');\n\n        target.poke32f = (ptr, value) => target.poke(ptr, value, 'f32');\n\n        target.peek64f = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'f64');\n\n        target.poke64f = (ptr, value) => target.poke(ptr, value, 'f64');\n\n        target.getMemValue = target.peek;\n\n        target.getPtrValue = target.peekPtr;\n\n        target.setMemValue = target.poke;\n\n        target.setPtrValue = target.pokePtr;\n\n        target.isPtr32 = (ptr) =>\n          'number' === typeof ptr && ptr === (ptr | 0) && ptr >= 0;\n\n        target.isPtr = target.isPtr32;\n\n        target.cstrlen = function (ptr) {\n          if (!ptr || !target.isPtr(ptr)) return null;\n          const h = heapWrappers().HEAP8U;\n          let pos = ptr;\n          for (; h[pos] !== 0; ++pos) {}\n          return pos - ptr;\n        };\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n        const __utf8Decode = function (arrayBuffer, begin, end) {\n          return cache.utf8Decoder.decode(\n            arrayBuffer.buffer instanceof __SAB\n              ? arrayBuffer.slice(begin, end)\n              : arrayBuffer.subarray(begin, end),\n          );\n        };\n\n        target.cstrToJs = function (ptr) {\n          const n = target.cstrlen(ptr);\n          return n\n            ? __utf8Decode(heapWrappers().HEAP8U, ptr, ptr + n)\n            : null === n\n              ? n\n              : '';\n        };\n\n        target.jstrlen = function (str) {\n          if ('string' !== typeof str) return null;\n          const n = str.length;\n          let len = 0;\n          for (let i = 0; i < n; ++i) {\n            let u = str.charCodeAt(i);\n            if (u >= 0xd800 && u <= 0xdfff) {\n              u =\n                (0x10000 + ((u & 0x3ff) << 10)) | (str.charCodeAt(++i) & 0x3ff);\n            }\n            if (u <= 0x7f) ++len;\n            else if (u <= 0x7ff) len += 2;\n            else if (u <= 0xffff) len += 3;\n            else len += 4;\n          }\n          return len;\n        };\n\n        target.jstrcpy = function (\n          jstr,\n          tgt,\n          offset = 0,\n          maxBytes = -1,\n          addNul = true,\n        ) {\n          if (\n            !tgt ||\n            (!(tgt instanceof Int8Array) && !(tgt instanceof Uint8Array))\n          ) {\n            toss('jstrcpy() target must be an Int8Array or Uint8Array.');\n          }\n          if (maxBytes < 0) maxBytes = tgt.length - offset;\n          if (!(maxBytes > 0) || !(offset >= 0)) return 0;\n          let i = 0,\n            max = jstr.length;\n          const begin = offset,\n            end = offset + maxBytes - (addNul ? 1 : 0);\n          for (; i < max && offset < end; ++i) {\n            let u = jstr.charCodeAt(i);\n            if (u >= 0xd800 && u <= 0xdfff) {\n              u =\n                (0x10000 + ((u & 0x3ff) << 10)) |\n                (jstr.charCodeAt(++i) & 0x3ff);\n            }\n            if (u <= 0x7f) {\n              if (offset >= end) break;\n              tgt[offset++] = u;\n            } else if (u <= 0x7ff) {\n              if (offset + 1 >= end) break;\n              tgt[offset++] = 0xc0 | (u >> 6);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            } else if (u <= 0xffff) {\n              if (offset + 2 >= end) break;\n              tgt[offset++] = 0xe0 | (u >> 12);\n              tgt[offset++] = 0x80 | ((u >> 6) & 0x3f);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            } else {\n              if (offset + 3 >= end) break;\n              tgt[offset++] = 0xf0 | (u >> 18);\n              tgt[offset++] = 0x80 | ((u >> 12) & 0x3f);\n              tgt[offset++] = 0x80 | ((u >> 6) & 0x3f);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            }\n          }\n          if (addNul) tgt[offset++] = 0;\n          return offset - begin;\n        };\n\n        target.cstrncpy = function (tgtPtr, srcPtr, n) {\n          if (!tgtPtr || !srcPtr)\n            toss('cstrncpy() does not accept NULL strings.');\n          if (n < 0) n = target.cstrlen(strPtr) + 1;\n          else if (!(n > 0)) return 0;\n          const heap = target.heap8u();\n          let i = 0,\n            ch;\n          for (; i < n && (ch = heap[srcPtr + i]); ++i) {\n            heap[tgtPtr + i] = ch;\n          }\n          if (i < n) heap[tgtPtr + i++] = 0;\n          return i;\n        };\n\n        target.jstrToUintArray = (str, addNul = false) => {\n          return cache.utf8Encoder.encode(addNul ? str + '\\0' : str);\n        };\n\n        const __affirmAlloc = (obj, funcName) => {\n          if (\n            !(obj.alloc instanceof Function) ||\n            !(obj.dealloc instanceof Function)\n          ) {\n            toss(\n              'Object is missing alloc() and/or dealloc() function(s)',\n              'required by',\n              funcName + '().',\n            );\n          }\n        };\n\n        const __allocCStr = function (\n          jstr,\n          returnWithLength,\n          allocator,\n          funcName,\n        ) {\n          __affirmAlloc(target, funcName);\n          if ('string' !== typeof jstr) return null;\n          if (0) {\n            const n = target.jstrlen(jstr),\n              ptr = allocator(n + 1);\n            target.jstrcpy(jstr, target.heap8u(), ptr, n + 1, true);\n            return returnWithLength ? [ptr, n] : ptr;\n          } else {\n            const u = cache.utf8Encoder.encode(jstr),\n              ptr = allocator(u.length + 1),\n              heap = heapWrappers().HEAP8U;\n            heap.set(u, ptr);\n            heap[ptr + u.length] = 0;\n            return returnWithLength ? [ptr, u.length] : ptr;\n          }\n        };\n\n        target.allocCString = (jstr, returnWithLength = false) =>\n          __allocCStr(jstr, returnWithLength, target.alloc, 'allocCString()');\n\n        target.scopedAllocPush = function () {\n          __affirmAlloc(target, 'scopedAllocPush');\n          const a = [];\n          cache.scopedAlloc.push(a);\n          return a;\n        };\n\n        target.scopedAllocPop = function (state) {\n          __affirmAlloc(target, 'scopedAllocPop');\n          const n = arguments.length\n            ? cache.scopedAlloc.indexOf(state)\n            : cache.scopedAlloc.length - 1;\n          if (n < 0) toss('Invalid state object for scopedAllocPop().');\n          if (0 === arguments.length) state = cache.scopedAlloc[n];\n          cache.scopedAlloc.splice(n, 1);\n          for (let p; (p = state.pop()); ) {\n            if (target.functionEntry(p)) {\n              target.uninstallFunction(p);\n            } else target.dealloc(p);\n          }\n        };\n\n        target.scopedAlloc = function (n) {\n          if (!cache.scopedAlloc.length) {\n            toss('No scopedAllocPush() scope is active.');\n          }\n          const p = target.alloc(n);\n          cache.scopedAlloc[cache.scopedAlloc.length - 1].push(p);\n          return p;\n        };\n\n        Object.defineProperty(target.scopedAlloc, 'level', {\n          configurable: false,\n          enumerable: false,\n          get: () => cache.scopedAlloc.length,\n          set: () => toss(\"The 'active' property is read-only.\"),\n        });\n\n        target.scopedAllocCString = (jstr, returnWithLength = false) =>\n          __allocCStr(\n            jstr,\n            returnWithLength,\n            target.scopedAlloc,\n            'scopedAllocCString()',\n          );\n\n        const __allocMainArgv = function (isScoped, list) {\n          const pList = target[isScoped ? 'scopedAlloc' : 'alloc'](\n            (list.length + 1) * target.ptrSizeof,\n          );\n          let i = 0;\n          list.forEach((e) => {\n            target.pokePtr(\n              pList + target.ptrSizeof * i++,\n              target[isScoped ? 'scopedAllocCString' : 'allocCString']('' + e),\n            );\n          });\n          target.pokePtr(pList + target.ptrSizeof * i, 0);\n          return pList;\n        };\n\n        target.scopedAllocMainArgv = (list) => __allocMainArgv(true, list);\n\n        target.allocMainArgv = (list) => __allocMainArgv(false, list);\n\n        target.cArgvToJs = (argc, pArgv) => {\n          const list = [];\n          for (let i = 0; i < argc; ++i) {\n            const arg = target.peekPtr(pArgv + target.ptrSizeof * i);\n            list.push(arg ? target.cstrToJs(arg) : null);\n          }\n          return list;\n        };\n\n        target.scopedAllocCall = function (func) {\n          target.scopedAllocPush();\n          try {\n            return func();\n          } finally {\n            target.scopedAllocPop();\n          }\n        };\n\n        const __allocPtr = function (howMany, safePtrSize, method) {\n          __affirmAlloc(target, method);\n          const pIr = safePtrSize ? 'i64' : ptrIR;\n          let m = target[method](howMany * (safePtrSize ? 8 : ptrSizeof));\n          target.poke(m, 0, pIr);\n          if (1 === howMany) {\n            return m;\n          }\n          const a = [m];\n          for (let i = 1; i < howMany; ++i) {\n            m += safePtrSize ? 8 : ptrSizeof;\n            a[i] = m;\n            target.poke(m, 0, pIr);\n          }\n          return a;\n        };\n\n        target.allocPtr = (howMany = 1, safePtrSize = true) =>\n          __allocPtr(howMany, safePtrSize, 'alloc');\n\n        target.scopedAllocPtr = (howMany = 1, safePtrSize = true) =>\n          __allocPtr(howMany, safePtrSize, 'scopedAlloc');\n\n        target.xGet = function (name) {\n          return (\n            target.exports[name] || toss('Cannot find exported symbol:', name)\n          );\n        };\n\n        const __argcMismatch = (f, n) =>\n          toss(f + '() requires', n, 'argument(s).');\n\n        target.xCall = function (fname, ...args) {\n          const f = fname instanceof Function ? fname : target.xGet(fname);\n          if (!(f instanceof Function))\n            toss('Exported symbol', fname, 'is not a function.');\n          if (f.length !== args.length)\n            __argcMismatch(f === fname ? f.name : fname, f.length);\n          return 2 === arguments.length && Array.isArray(arguments[1])\n            ? f.apply(null, arguments[1])\n            : f.apply(null, args);\n        };\n\n        cache.xWrap = Object.create(null);\n        cache.xWrap.convert = Object.create(null);\n\n        cache.xWrap.convert.arg = new Map();\n\n        cache.xWrap.convert.result = new Map();\n        const xArg = cache.xWrap.convert.arg,\n          xResult = cache.xWrap.convert.result;\n\n        if (target.bigIntEnabled) {\n          xArg.set('i64', (i) => BigInt(i));\n        }\n        const __xArgPtr =\n          'i32' === ptrIR ? (i) => i | 0 : (i) => BigInt(i) | BigInt(0);\n        xArg\n          .set('i32', __xArgPtr)\n          .set('i16', (i) => (i | 0) & 0xffff)\n          .set('i8', (i) => (i | 0) & 0xff)\n          .set('f32', (i) => Number(i).valueOf())\n          .set('float', xArg.get('f32'))\n          .set('f64', xArg.get('f32'))\n          .set('double', xArg.get('f64'))\n          .set('int', xArg.get('i32'))\n          .set('null', (i) => i)\n          .set(null, xArg.get('null'))\n          .set('**', __xArgPtr)\n          .set('*', __xArgPtr);\n        xResult\n          .set('*', __xArgPtr)\n          .set('pointer', __xArgPtr)\n          .set('number', (v) => Number(v))\n          .set('void', (v) => undefined)\n          .set('null', (v) => v)\n          .set(null, xResult.get('null'));\n\n        {\n          const copyToResult = [\n            'i8',\n            'i16',\n            'i32',\n            'int',\n            'f32',\n            'float',\n            'f64',\n            'double',\n          ];\n          if (target.bigIntEnabled) copyToResult.push('i64');\n          const adaptPtr = xArg.get(ptrIR);\n          for (const t of copyToResult) {\n            xArg.set(t + '*', adaptPtr);\n            xResult.set(t + '*', adaptPtr);\n            xResult.set(t, xArg.get(t) || toss('Missing arg converter:', t));\n          }\n        }\n\n        const __xArgString = function (v) {\n          if ('string' === typeof v) return target.scopedAllocCString(v);\n          return v ? __xArgPtr(v) : null;\n        };\n        xArg\n          .set('string', __xArgString)\n          .set('utf8', __xArgString)\n          .set('pointer', __xArgString);\n\n        xResult\n          .set('string', (i) => target.cstrToJs(i))\n          .set('utf8', xResult.get('string'))\n          .set('string:dealloc', (i) => {\n            try {\n              return i ? target.cstrToJs(i) : null;\n            } finally {\n              target.dealloc(i);\n            }\n          })\n          .set('utf8:dealloc', xResult.get('string:dealloc'))\n          .set('json', (i) => JSON.parse(target.cstrToJs(i)))\n          .set('json:dealloc', (i) => {\n            try {\n              return i ? JSON.parse(target.cstrToJs(i)) : null;\n            } finally {\n              target.dealloc(i);\n            }\n          });\n\n        const AbstractArgAdapter = class {\n          constructor(opt) {\n            this.name = opt.name || 'unnamed adapter';\n          }\n\n          convertArg(v, argv, argIndex) {\n            toss('AbstractArgAdapter must be subclassed.');\n          }\n        };\n\n        xArg.FuncPtrAdapter = class FuncPtrAdapter extends AbstractArgAdapter {\n          constructor(opt) {\n            super(opt);\n            if (xArg.FuncPtrAdapter.warnOnUse) {\n              console.warn(\n                'xArg.FuncPtrAdapter is an internal-only API',\n                'and is not intended to be invoked from',\n                'client-level code. Invoked with:',\n                opt,\n              );\n            }\n            this.name = opt.name || 'unnamed';\n            this.signature = opt.signature;\n            if (opt.contextKey instanceof Function) {\n              this.contextKey = opt.contextKey;\n              if (!opt.bindScope) opt.bindScope = 'context';\n            }\n            this.bindScope =\n              opt.bindScope ||\n              toss(\n                'FuncPtrAdapter options requires a bindScope (explicit or implied).',\n              );\n            if (FuncPtrAdapter.bindScopes.indexOf(opt.bindScope) < 0) {\n              toss(\n                'Invalid options.bindScope (' +\n                  opt.bindMod +\n                  ') for FuncPtrAdapter. ' +\n                  'Expecting one of: (' +\n                  FuncPtrAdapter.bindScopes.join(', ') +\n                  ')',\n              );\n            }\n            this.isTransient = 'transient' === this.bindScope;\n            this.isContext = 'context' === this.bindScope;\n            this.isPermanent = 'permanent' === this.bindScope;\n            this.singleton = 'singleton' === this.bindScope ? [] : undefined;\n\n            this.callProxy =\n              opt.callProxy instanceof Function ? opt.callProxy : undefined;\n          }\n\n          contextKey(argv, argIndex) {\n            return this;\n          }\n\n          contextMap(key) {\n            const cm = this.__cmap || (this.__cmap = new Map());\n            let rc = cm.get(key);\n            if (undefined === rc) cm.set(key, (rc = []));\n            return rc;\n          }\n\n          convertArg(v, argv, argIndex) {\n            let pair = this.singleton;\n            if (!pair && this.isContext) {\n              pair = this.contextMap(this.contextKey(argv, argIndex));\n            }\n            if (pair && pair[0] === v) return pair[1];\n            if (v instanceof Function) {\n              if (this.callProxy) v = this.callProxy(v);\n              const fp = __installFunction(v, this.signature, this.isTransient);\n              if (FuncPtrAdapter.debugFuncInstall) {\n                FuncPtrAdapter.debugOut(\n                  'FuncPtrAdapter installed',\n                  this,\n                  this.contextKey(argv, argIndex),\n                  '@' + fp,\n                  v,\n                );\n              }\n              if (pair) {\n                if (pair[1]) {\n                  if (FuncPtrAdapter.debugFuncInstall) {\n                    FuncPtrAdapter.debugOut(\n                      'FuncPtrAdapter uninstalling',\n                      this,\n                      this.contextKey(argv, argIndex),\n                      '@' + pair[1],\n                      v,\n                    );\n                  }\n                  try {\n                    cache.scopedAlloc[cache.scopedAlloc.length - 1].push(\n                      pair[1],\n                    );\n                  } catch (e) {}\n                }\n                pair[0] = v;\n                pair[1] = fp;\n              }\n              return fp;\n            } else if (target.isPtr(v) || null === v || undefined === v) {\n              if (pair && pair[1] && pair[1] !== v) {\n                if (FuncPtrAdapter.debugFuncInstall) {\n                  FuncPtrAdapter.debugOut(\n                    'FuncPtrAdapter uninstalling',\n                    this,\n                    this.contextKey(argv, argIndex),\n                    '@' + pair[1],\n                    v,\n                  );\n                }\n                try {\n                  cache.scopedAlloc[cache.scopedAlloc.length - 1].push(pair[1]);\n                } catch (e) {}\n                pair[0] = pair[1] = v | 0;\n              }\n              return v || 0;\n            } else {\n              throw new TypeError(\n                'Invalid FuncPtrAdapter argument type. ' +\n                  'Expecting a function pointer or a ' +\n                  (this.name ? this.name + ' ' : '') +\n                  'function matching signature ' +\n                  this.signature +\n                  '.',\n              );\n            }\n          }\n        };\n\n        xArg.FuncPtrAdapter.warnOnUse = false;\n\n        xArg.FuncPtrAdapter.debugFuncInstall = false;\n\n        xArg.FuncPtrAdapter.debugOut = console.debug.bind(console);\n\n        xArg.FuncPtrAdapter.bindScopes = [\n          'transient',\n          'context',\n          'singleton',\n          'permanent',\n        ];\n\n        const __xArgAdapterCheck = (t) =>\n          xArg.get(t) || toss('Argument adapter not found:', t);\n\n        const __xResultAdapterCheck = (t) =>\n          xResult.get(t) || toss('Result adapter not found:', t);\n\n        cache.xWrap.convertArg = (t, ...args) => __xArgAdapterCheck(t)(...args);\n\n        cache.xWrap.convertArgNoCheck = (t, ...args) => xArg.get(t)(...args);\n\n        cache.xWrap.convertResult = (t, v) =>\n          null === t ? v : t ? __xResultAdapterCheck(t)(v) : undefined;\n\n        cache.xWrap.convertResultNoCheck = (t, v) =>\n          null === t ? v : t ? xResult.get(t)(v) : undefined;\n\n        target.xWrap = function (fArg, resultType, ...argTypes) {\n          if (3 === arguments.length && Array.isArray(arguments[2])) {\n            argTypes = arguments[2];\n          }\n          if (target.isPtr(fArg)) {\n            fArg =\n              target.functionEntry(fArg) ||\n              toss('Function pointer not found in WASM function table.');\n          }\n          const fIsFunc = fArg instanceof Function;\n          const xf = fIsFunc ? fArg : target.xGet(fArg);\n          if (fIsFunc) fArg = xf.name || 'unnamed function';\n          if (argTypes.length !== xf.length) __argcMismatch(fArg, xf.length);\n          if (null === resultType && 0 === xf.length) {\n            return xf;\n          }\n          if (undefined !== resultType && null !== resultType)\n            __xResultAdapterCheck(resultType);\n          for (const t of argTypes) {\n            if (t instanceof AbstractArgAdapter)\n              xArg.set(t, (...args) => t.convertArg(...args));\n            else __xArgAdapterCheck(t);\n          }\n          const cxw = cache.xWrap;\n          if (0 === xf.length) {\n            return (...args) =>\n              args.length\n                ? __argcMismatch(fArg, xf.length)\n                : cxw.convertResult(resultType, xf.call(null));\n          }\n          return function (...args) {\n            if (args.length !== xf.length) __argcMismatch(fArg, xf.length);\n            const scope = target.scopedAllocPush();\n            try {\n              let i = 0;\n              for (; i < args.length; ++i)\n                args[i] = cxw.convertArgNoCheck(argTypes[i], args[i], args, i);\n              return cxw.convertResultNoCheck(resultType, xf.apply(null, args));\n            } finally {\n              target.scopedAllocPop(scope);\n            }\n          };\n        };\n\n        const __xAdapter = function (\n          func,\n          argc,\n          typeName,\n          adapter,\n          modeName,\n          xcvPart,\n        ) {\n          if ('string' === typeof typeName) {\n            if (1 === argc) return xcvPart.get(typeName);\n            else if (2 === argc) {\n              if (!adapter) {\n                xcvPart.delete(typeName);\n                return func;\n              } else if (!(adapter instanceof Function)) {\n                toss(modeName, 'requires a function argument.');\n              }\n              xcvPart.set(typeName, adapter);\n              return func;\n            }\n          }\n          toss('Invalid arguments to', modeName);\n        };\n\n        target.xWrap.resultAdapter = function f(typeName, adapter) {\n          return __xAdapter(\n            f,\n            arguments.length,\n            typeName,\n            adapter,\n            'resultAdapter()',\n            xResult,\n          );\n        };\n\n        target.xWrap.argAdapter = function f(typeName, adapter) {\n          return __xAdapter(\n            f,\n            arguments.length,\n            typeName,\n            adapter,\n            'argAdapter()',\n            xArg,\n          );\n        };\n\n        target.xWrap.FuncPtrAdapter = xArg.FuncPtrAdapter;\n\n        target.xCallWrapped = function (fArg, resultType, argTypes, ...args) {\n          if (Array.isArray(arguments[3])) args = arguments[3];\n          return target\n            .xWrap(fArg, resultType, argTypes || [])\n            .apply(null, args || []);\n        };\n\n        target.xWrap.testConvertArg = cache.xWrap.convertArg;\n\n        target.xWrap.testConvertResult = cache.xWrap.convertResult;\n\n        return target;\n      };\n\n      globalThis.WhWasmUtilInstaller.yawl = function (config) {\n        const wfetch = () => fetch(config.uri, { credentials: 'same-origin' });\n        const wui = this;\n        const finalThen = function (arg) {\n          if (config.wasmUtilTarget) {\n            const toss = (...args) => {\n              throw new Error(args.join(' '));\n            };\n            const tgt = config.wasmUtilTarget;\n            tgt.module = arg.module;\n            tgt.instance = arg.instance;\n\n            if (!tgt.instance.exports.memory) {\n              tgt.memory =\n                (config.imports &&\n                  config.imports.env &&\n                  config.imports.env.memory) ||\n                toss(\"Missing 'memory' object!\");\n            }\n            if (!tgt.alloc && arg.instance.exports.malloc) {\n              const exports = arg.instance.exports;\n              tgt.alloc = function (n) {\n                return (\n                  exports.malloc(n) || toss('Allocation of', n, 'bytes failed.')\n                );\n              };\n              tgt.dealloc = function (m) {\n                exports.free(m);\n              };\n            }\n            wui(tgt);\n          }\n          if (config.onload) config.onload(arg, config);\n          return arg;\n        };\n        const loadWasm = WebAssembly.instantiateStreaming\n          ? function loadWasmStreaming() {\n              return WebAssembly.instantiateStreaming(\n                wfetch(),\n                config.imports || {},\n              ).then(finalThen);\n            }\n          : function loadWasmOldSchool() {\n              return wfetch()\n                .then((response) => response.arrayBuffer())\n                .then((bytes) =>\n                  WebAssembly.instantiate(bytes, config.imports || {}),\n                )\n                .then(finalThen);\n            };\n        return loadWasm;\n      }.bind(globalThis.WhWasmUtilInstaller);\n\n      ('use strict');\n      globalThis.Jaccwabyt = function StructBinderFactory(config) {\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n\n        if (\n          !(config.heap instanceof WebAssembly.Memory) &&\n          !(config.heap instanceof Function)\n        ) {\n          toss(\n            'config.heap must be WebAssembly.Memory instance or a function.',\n          );\n        }\n        ['alloc', 'dealloc'].forEach(function (k) {\n          config[k] instanceof Function ||\n            toss(\"Config option '\" + k + \"' must be a function.\");\n        });\n        const SBF = StructBinderFactory;\n        const heap =\n            config.heap instanceof Function\n              ? config.heap\n              : () => new Uint8Array(config.heap.buffer),\n          alloc = config.alloc,\n          dealloc = config.dealloc,\n          log = config.log || console.log.bind(console),\n          memberPrefix = config.memberPrefix || '',\n          memberSuffix = config.memberSuffix || '',\n          bigIntEnabled =\n            undefined === config.bigIntEnabled\n              ? !!globalThis['BigInt64Array']\n              : !!config.bigIntEnabled,\n          BigInt = globalThis['BigInt'],\n          BigInt64Array = globalThis['BigInt64Array'],\n          ptrSizeof = config.ptrSizeof || 4,\n          ptrIR = config.ptrIR || 'i32';\n        if (!SBF.debugFlags) {\n          SBF.__makeDebugFlags = function (deriveFrom = null) {\n            if (deriveFrom && deriveFrom.__flags)\n              deriveFrom = deriveFrom.__flags;\n            const f = function f(flags) {\n              if (0 === arguments.length) {\n                return f.__flags;\n              }\n              if (flags < 0) {\n                delete f.__flags.getter;\n                delete f.__flags.setter;\n                delete f.__flags.alloc;\n                delete f.__flags.dealloc;\n              } else {\n                f.__flags.getter = 0 !== (0x01 & flags);\n                f.__flags.setter = 0 !== (0x02 & flags);\n                f.__flags.alloc = 0 !== (0x04 & flags);\n                f.__flags.dealloc = 0 !== (0x08 & flags);\n              }\n              return f._flags;\n            };\n            Object.defineProperty(f, '__flags', {\n              iterable: false,\n              writable: false,\n              value: Object.create(deriveFrom),\n            });\n            if (!deriveFrom) f(0);\n            return f;\n          };\n          SBF.debugFlags = SBF.__makeDebugFlags();\n        }\n\n        const isLittleEndian = (function () {\n          const buffer = new ArrayBuffer(2);\n          new DataView(buffer).setInt16(0, 256, true);\n\n          return new Int16Array(buffer)[0] === 256;\n        })();\n\n        const isFuncSig = (s) => '(' === s[1];\n\n        const isPtrSig = (s) => 'p' === s || 'P' === s;\n        const isAutoPtrSig = (s) => 'P' === s;\n        const sigLetter = (s) => (isFuncSig(s) ? 'p' : s[0]);\n\n        const sigIR = function (s) {\n          switch (sigLetter(s)) {\n            case 'c':\n            case 'C':\n              return 'i8';\n            case 'i':\n              return 'i32';\n            case 'p':\n            case 'P':\n            case 's':\n              return ptrIR;\n            case 'j':\n              return 'i64';\n            case 'f':\n              return 'float';\n            case 'd':\n              return 'double';\n          }\n          toss('Unhandled signature IR:', s);\n        };\n\n        const affirmBigIntArray = BigInt64Array\n          ? () => true\n          : () => toss('BigInt64Array is not available.');\n\n        const sigDVGetter = function (s) {\n          switch (sigLetter(s)) {\n            case 'p':\n            case 'P':\n            case 's': {\n              switch (ptrSizeof) {\n                case 4:\n                  return 'getInt32';\n                case 8:\n                  return affirmBigIntArray() && 'getBigInt64';\n              }\n              break;\n            }\n            case 'i':\n              return 'getInt32';\n            case 'c':\n              return 'getInt8';\n            case 'C':\n              return 'getUint8';\n            case 'j':\n              return affirmBigIntArray() && 'getBigInt64';\n            case 'f':\n              return 'getFloat32';\n            case 'd':\n              return 'getFloat64';\n          }\n          toss('Unhandled DataView getter for signature:', s);\n        };\n\n        const sigDVSetter = function (s) {\n          switch (sigLetter(s)) {\n            case 'p':\n            case 'P':\n            case 's': {\n              switch (ptrSizeof) {\n                case 4:\n                  return 'setInt32';\n                case 8:\n                  return affirmBigIntArray() && 'setBigInt64';\n              }\n              break;\n            }\n            case 'i':\n              return 'setInt32';\n            case 'c':\n              return 'setInt8';\n            case 'C':\n              return 'setUint8';\n            case 'j':\n              return affirmBigIntArray() && 'setBigInt64';\n            case 'f':\n              return 'setFloat32';\n            case 'd':\n              return 'setFloat64';\n          }\n          toss('Unhandled DataView setter for signature:', s);\n        };\n\n        const sigDVSetWrapper = function (s) {\n          switch (sigLetter(s)) {\n            case 'i':\n            case 'f':\n            case 'c':\n            case 'C':\n            case 'd':\n              return Number;\n            case 'j':\n              return affirmBigIntArray() && BigInt;\n            case 'p':\n            case 'P':\n            case 's':\n              switch (ptrSizeof) {\n                case 4:\n                  return Number;\n                case 8:\n                  return affirmBigIntArray() && BigInt;\n              }\n              break;\n          }\n          toss('Unhandled DataView set wrapper for signature:', s);\n        };\n\n        const sPropName = (s, k) => s + '::' + k;\n\n        const __propThrowOnSet = function (structName, propName) {\n          return () => toss(sPropName(structName, propName), 'is read-only.');\n        };\n\n        const __instancePointerMap = new WeakMap();\n\n        const xPtrPropName = '(pointer-is-external)';\n\n        const __freeStruct = function (ctor, obj, m) {\n          if (!m) m = __instancePointerMap.get(obj);\n          if (m) {\n            __instancePointerMap.delete(obj);\n            if (Array.isArray(obj.ondispose)) {\n              let x;\n              while ((x = obj.ondispose.shift())) {\n                try {\n                  if (x instanceof Function) x.call(obj);\n                  else if (x instanceof StructType) x.dispose();\n                  else if ('number' === typeof x) dealloc(x);\n                } catch (e) {\n                  console.warn(\n                    'ondispose() for',\n                    ctor.structName,\n                    '@',\n                    m,\n                    'threw. NOT propagating it.',\n                    e,\n                  );\n                }\n              }\n            } else if (obj.ondispose instanceof Function) {\n              try {\n                obj.ondispose();\n              } catch (e) {\n                console.warn(\n                  'ondispose() for',\n                  ctor.structName,\n                  '@',\n                  m,\n                  'threw. NOT propagating it.',\n                  e,\n                );\n              }\n            }\n            delete obj.ondispose;\n            if (ctor.debugFlags.__flags.dealloc) {\n              log(\n                'debug.dealloc:',\n                obj[xPtrPropName] ? 'EXTERNAL' : '',\n                ctor.structName,\n                'instance:',\n                ctor.structInfo.sizeof,\n                'bytes @' + m,\n              );\n            }\n            if (!obj[xPtrPropName]) dealloc(m);\n          }\n        };\n\n        const rop = (v) => {\n          return {\n            configurable: false,\n            writable: false,\n            iterable: false,\n            value: v,\n          };\n        };\n\n        const __allocStruct = function (ctor, obj, m) {\n          let fill = !m;\n          if (m) Object.defineProperty(obj, xPtrPropName, rop(m));\n          else {\n            m = alloc(ctor.structInfo.sizeof);\n            if (!m) toss('Allocation of', ctor.structName, 'structure failed.');\n          }\n          try {\n            if (ctor.debugFlags.__flags.alloc) {\n              log(\n                'debug.alloc:',\n                fill ? '' : 'EXTERNAL',\n                ctor.structName,\n                'instance:',\n                ctor.structInfo.sizeof,\n                'bytes @' + m,\n              );\n            }\n            if (fill) heap().fill(0, m, m + ctor.structInfo.sizeof);\n            __instancePointerMap.set(obj, m);\n          } catch (e) {\n            __freeStruct(ctor, obj, m);\n            throw e;\n          }\n        };\n\n        const __memoryDump = function () {\n          const p = this.pointer;\n          return p\n            ? new Uint8Array(heap().slice(p, p + this.structInfo.sizeof))\n            : null;\n        };\n\n        const __memberKey = (k) => memberPrefix + k + memberSuffix;\n        const __memberKeyProp = rop(__memberKey);\n\n        const __lookupMember = function (\n          structInfo,\n          memberName,\n          tossIfNotFound = true,\n        ) {\n          let m = structInfo.members[memberName];\n          if (!m && (memberPrefix || memberSuffix)) {\n            for (const v of Object.values(structInfo.members)) {\n              if (v.key === memberName) {\n                m = v;\n                break;\n              }\n            }\n            if (!m && tossIfNotFound) {\n              toss(\n                sPropName(structInfo.name, memberName),\n                'is not a mapped struct member.',\n              );\n            }\n          }\n          return m;\n        };\n\n        const __memberSignature = function f(\n          obj,\n          memberName,\n          emscriptenFormat = false,\n        ) {\n          if (!f._)\n            f._ = (x) =>\n              x.replace(/[^vipPsjrdcC]/g, '').replace(/[pPscC]/g, 'i');\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          return emscriptenFormat ? f._(m.signature) : m.signature;\n        };\n\n        const __ptrPropDescriptor = {\n          configurable: false,\n          enumerable: false,\n          get: function () {\n            return __instancePointerMap.get(this);\n          },\n          set: () => toss(\"Cannot assign the 'pointer' property of a struct.\"),\n        };\n\n        const __structMemberKeys = rop(function () {\n          const a = [];\n          for (const k of Object.keys(this.structInfo.members)) {\n            a.push(this.memberKey(k));\n          }\n          return a;\n        });\n\n        const __utf8Decoder = new TextDecoder('utf-8');\n        const __utf8Encoder = new TextEncoder();\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n        const __utf8Decode = function (arrayBuffer, begin, end) {\n          return __utf8Decoder.decode(\n            arrayBuffer.buffer instanceof __SAB\n              ? arrayBuffer.slice(begin, end)\n              : arrayBuffer.subarray(begin, end),\n          );\n        };\n\n        const __memberIsString = function (\n          obj,\n          memberName,\n          tossIfNotFound = false,\n        ) {\n          const m = __lookupMember(obj.structInfo, memberName, tossIfNotFound);\n          return m && 1 === m.signature.length && 's' === m.signature[0]\n            ? m\n            : false;\n        };\n\n        const __affirmCStringSignature = function (member) {\n          if ('s' === member.signature) return;\n          toss(\n            'Invalid member type signature for C-string value:',\n            JSON.stringify(member),\n          );\n        };\n\n        const __memberToJsString = function f(obj, memberName) {\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          __affirmCStringSignature(m);\n          const addr = obj[m.key];\n\n          if (!addr) return null;\n          let pos = addr;\n          const mem = heap();\n          for (; mem[pos] !== 0; ++pos) {}\n\n          return addr === pos ? '' : __utf8Decode(mem, addr, pos);\n        };\n\n        const __addOnDispose = function (obj, ...v) {\n          if (obj.ondispose) {\n            if (!Array.isArray(obj.ondispose)) {\n              obj.ondispose = [obj.ondispose];\n            }\n          } else {\n            obj.ondispose = [];\n          }\n          obj.ondispose.push(...v);\n        };\n\n        const __allocCString = function (str) {\n          const u = __utf8Encoder.encode(str);\n          const mem = alloc(u.length + 1);\n          if (!mem) toss('Allocation error while duplicating string:', str);\n          const h = heap();\n\n          h.set(u, mem);\n          h[mem + u.length] = 0;\n\n          return mem;\n        };\n\n        const __setMemberCString = function (obj, memberName, str) {\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          __affirmCStringSignature(m);\n\n          const mem = __allocCString(str);\n          obj[m.key] = mem;\n          __addOnDispose(obj, mem);\n          return obj;\n        };\n\n        const StructType = function ctor(structName, structInfo) {\n          if (arguments[2] !== rop) {\n            toss(\n              'Do not call the StructType constructor',\n              'from client-level code.',\n            );\n          }\n          Object.defineProperties(this, {\n            structName: rop(structName),\n            structInfo: rop(structInfo),\n          });\n        };\n\n        StructType.prototype = Object.create(null, {\n          dispose: rop(function () {\n            __freeStruct(this.constructor, this);\n          }),\n          lookupMember: rop(function (memberName, tossIfNotFound = true) {\n            return __lookupMember(this.structInfo, memberName, tossIfNotFound);\n          }),\n          memberToJsString: rop(function (memberName) {\n            return __memberToJsString(this, memberName);\n          }),\n          memberIsString: rop(function (memberName, tossIfNotFound = true) {\n            return __memberIsString(this, memberName, tossIfNotFound);\n          }),\n          memberKey: __memberKeyProp,\n          memberKeys: __structMemberKeys,\n          memberSignature: rop(function (memberName, emscriptenFormat = false) {\n            return __memberSignature(this, memberName, emscriptenFormat);\n          }),\n          memoryDump: rop(__memoryDump),\n          pointer: __ptrPropDescriptor,\n          setMemberCString: rop(function (memberName, str) {\n            return __setMemberCString(this, memberName, str);\n          }),\n        });\n\n        Object.assign(StructType.prototype, {\n          addOnDispose: function (...v) {\n            __addOnDispose(this, ...v);\n            return this;\n          },\n        });\n\n        Object.defineProperties(StructType, {\n          allocCString: rop(__allocCString),\n          isA: rop((v) => v instanceof StructType),\n          hasExternalPointer: rop(\n            (v) => v instanceof StructType && !!v[xPtrPropName],\n          ),\n          memberKey: __memberKeyProp,\n        });\n\n        const isNumericValue = (v) =>\n          Number.isFinite(v) || v instanceof (BigInt || Number);\n\n        const makeMemberWrapper = function f(ctor, name, descr) {\n          if (!f._) {\n            f._ = { getters: {}, setters: {}, sw: {} };\n            const a = ['i', 'c', 'C', 'p', 'P', 's', 'f', 'd', 'v()'];\n            if (bigIntEnabled) a.push('j');\n            a.forEach(function (v) {\n              f._.getters[v] = sigDVGetter(v);\n              f._.setters[v] = sigDVSetter(v);\n              f._.sw[v] = sigDVSetWrapper(v);\n            });\n            const rxSig1 = /^[ipPsjfdcC]$/,\n              rxSig2 = /^[vipPsjfdcC]\\([ipPsjfdcC]*\\)$/;\n            f.sigCheck = function (obj, name, key, sig) {\n              if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                toss(obj.structName, 'already has a property named', key + '.');\n              }\n              rxSig1.test(sig) ||\n                rxSig2.test(sig) ||\n                toss(\n                  'Malformed signature for',\n                  sPropName(obj.structName, name) + ':',\n                  sig,\n                );\n            };\n          }\n          const key = ctor.memberKey(name);\n          f.sigCheck(ctor.prototype, name, key, descr.signature);\n          descr.key = key;\n          descr.name = name;\n          const sigGlyph = sigLetter(descr.signature);\n          const xPropName = sPropName(ctor.prototype.structName, key);\n          const dbg = ctor.prototype.debugFlags.__flags;\n\n          const prop = Object.create(null);\n          prop.configurable = false;\n          prop.enumerable = false;\n          prop.get = function () {\n            if (dbg.getter) {\n              log(\n                'debug.getter:',\n                f._.getters[sigGlyph],\n                'for',\n                sigIR(sigGlyph),\n                xPropName,\n                '@',\n                this.pointer,\n                '+',\n                descr.offset,\n                'sz',\n                descr.sizeof,\n              );\n            }\n            let rc = new DataView(\n              heap().buffer,\n              this.pointer + descr.offset,\n              descr.sizeof,\n            )[f._.getters[sigGlyph]](0, isLittleEndian);\n            if (dbg.getter) log('debug.getter:', xPropName, 'result =', rc);\n            return rc;\n          };\n          if (descr.readOnly) {\n            prop.set = __propThrowOnSet(ctor.prototype.structName, key);\n          } else {\n            prop.set = function (v) {\n              if (dbg.setter) {\n                log(\n                  'debug.setter:',\n                  f._.setters[sigGlyph],\n                  'for',\n                  sigIR(sigGlyph),\n                  xPropName,\n                  '@',\n                  this.pointer,\n                  '+',\n                  descr.offset,\n                  'sz',\n                  descr.sizeof,\n                  v,\n                );\n              }\n              if (!this.pointer) {\n                toss('Cannot set struct property on disposed instance.');\n              }\n              if (null === v) v = 0;\n              else\n                while (!isNumericValue(v)) {\n                  if (\n                    isAutoPtrSig(descr.signature) &&\n                    v instanceof StructType\n                  ) {\n                    v = v.pointer || 0;\n                    if (dbg.setter)\n                      log('debug.setter:', xPropName, 'resolved to', v);\n                    break;\n                  }\n                  toss('Invalid value for pointer-type', xPropName + '.');\n                }\n              new DataView(\n                heap().buffer,\n                this.pointer + descr.offset,\n                descr.sizeof,\n              )[f._.setters[sigGlyph]](0, f._.sw[sigGlyph](v), isLittleEndian);\n            };\n          }\n          Object.defineProperty(ctor.prototype, key, prop);\n        };\n\n        const StructBinder = function StructBinder(structName, structInfo) {\n          if (1 === arguments.length) {\n            structInfo = structName;\n            structName = structInfo.name;\n          } else if (!structInfo.name) {\n            structInfo.name = structName;\n          }\n          if (!structName) toss('Struct name is required.');\n          let lastMember = false;\n          Object.keys(structInfo.members).forEach((k) => {\n            const m = structInfo.members[k];\n            if (!m.sizeof) toss(structName, 'member', k, 'is missing sizeof.');\n            else if (m.sizeof === 1) {\n              m.signature === 'c' ||\n                m.signature === 'C' ||\n                toss(\n                  'Unexpected sizeof==1 member',\n                  sPropName(structInfo.name, k),\n                  'with signature',\n                  m.signature,\n                );\n            } else {\n              if (0 !== m.sizeof % 4) {\n                console.warn(\n                  'Invalid struct member description =',\n                  m,\n                  'from',\n                  structInfo,\n                );\n                toss(\n                  structName,\n                  'member',\n                  k,\n                  'sizeof is not aligned. sizeof=' + m.sizeof,\n                );\n              }\n              if (0 !== m.offset % 4) {\n                console.warn(\n                  'Invalid struct member description =',\n                  m,\n                  'from',\n                  structInfo,\n                );\n                toss(\n                  structName,\n                  'member',\n                  k,\n                  'offset is not aligned. offset=' + m.offset,\n                );\n              }\n            }\n            if (!lastMember || lastMember.offset < m.offset) lastMember = m;\n          });\n          if (!lastMember) toss('No member property descriptions found.');\n          else if (structInfo.sizeof < lastMember.offset + lastMember.sizeof) {\n            toss(\n              'Invalid struct config:',\n              structName,\n              'max member offset (' + lastMember.offset + ') ',\n              'extends past end of struct (sizeof=' + structInfo.sizeof + ').',\n            );\n          }\n          const debugFlags = rop(SBF.__makeDebugFlags(StructBinder.debugFlags));\n\n          const StructCtor = function StructCtor(externalMemory) {\n            if (!(this instanceof StructCtor)) {\n              toss(\n                'The',\n                structName,\n                \"constructor may only be called via 'new'.\",\n              );\n            } else if (arguments.length) {\n              if (\n                externalMemory !== (externalMemory | 0) ||\n                externalMemory <= 0\n              ) {\n                toss('Invalid pointer value for', structName, 'constructor.');\n              }\n              __allocStruct(StructCtor, this, externalMemory);\n            } else {\n              __allocStruct(StructCtor, this);\n            }\n          };\n          Object.defineProperties(StructCtor, {\n            debugFlags: debugFlags,\n            isA: rop((v) => v instanceof StructCtor),\n            memberKey: __memberKeyProp,\n            memberKeys: __structMemberKeys,\n            methodInfoForKey: rop(function (mKey) {}),\n            structInfo: rop(structInfo),\n            structName: rop(structName),\n          });\n          StructCtor.prototype = new StructType(structName, structInfo, rop);\n          Object.defineProperties(StructCtor.prototype, {\n            debugFlags: debugFlags,\n            constructor: rop(StructCtor),\n          });\n          Object.keys(structInfo.members).forEach((name) =>\n            makeMemberWrapper(StructCtor, name, structInfo.members[name]),\n          );\n          return StructCtor;\n        };\n        StructBinder.StructType = StructType;\n        StructBinder.config = config;\n        StructBinder.allocCString = __allocCString;\n        if (!StructBinder.debugFlags) {\n          StructBinder.debugFlags = SBF.__makeDebugFlags(SBF.debugFlags);\n        }\n        return StructBinder;\n      };\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        'use strict';\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n        const toss3 = sqlite3.SQLite3Error.toss;\n        const capi = sqlite3.capi,\n          wasm = sqlite3.wasm,\n          util = sqlite3.util;\n        globalThis.WhWasmUtilInstaller(wasm);\n        delete globalThis.WhWasmUtilInstaller;\n\n        if (0) {\n          const dealloc = wasm.exports[sqlite3.config.deallocExportName];\n          const nFunc = wasm.functionTable().length;\n          let i;\n          for (i = 0; i < nFunc; ++i) {\n            const e = wasm.functionEntry(i);\n            if (dealloc === e) {\n              capi.SQLITE_WASM_DEALLOC = i;\n              break;\n            }\n          }\n          if (dealloc !== wasm.functionEntry(capi.SQLITE_WASM_DEALLOC)) {\n            toss(\n              'Internal error: cannot find function pointer for SQLITE_WASM_DEALLOC.',\n            );\n          }\n        }\n\n        wasm.bindingSignatures = [\n          ['sqlite3_aggregate_context', 'void*', 'sqlite3_context*', 'int'],\n\n          ['sqlite3_bind_double', 'int', 'sqlite3_stmt*', 'int', 'f64'],\n          ['sqlite3_bind_int', 'int', 'sqlite3_stmt*', 'int', 'int'],\n          ['sqlite3_bind_null', undefined, 'sqlite3_stmt*', 'int'],\n          ['sqlite3_bind_parameter_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_bind_parameter_index', 'int', 'sqlite3_stmt*', 'string'],\n          ['sqlite3_bind_parameter_name', 'string', 'sqlite3_stmt*', 'int'],\n          [\n            'sqlite3_bind_pointer',\n            'int',\n            'sqlite3_stmt*',\n            'int',\n            '*',\n            'string:static',\n            '*',\n          ],\n          [\n            'sqlite3_busy_handler',\n            'int',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                signature: 'i(pi)',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_busy_timeout', 'int', 'sqlite3*', 'int'],\n\n          ['sqlite3_changes', 'int', 'sqlite3*'],\n          ['sqlite3_clear_bindings', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_collation_needed', 'int', 'sqlite3*', '*', '*'],\n          ['sqlite3_column_blob', '*', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_bytes', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_column_decltype', 'string', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_double', 'f64', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_int', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_name', 'string', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_text', 'string', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_type', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_value', 'sqlite3_value*', 'sqlite3_stmt*', 'int'],\n          [\n            'sqlite3_commit_hook',\n            'void*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_commit_hook',\n                signature: 'i(p)',\n                contextKey: (argv) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_compileoption_get', 'string', 'int'],\n          ['sqlite3_compileoption_used', 'int', 'string'],\n          ['sqlite3_complete', 'int', 'string:flexible'],\n          ['sqlite3_context_db_handle', 'sqlite3*', 'sqlite3_context*'],\n\n          ['sqlite3_data_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_db_filename', 'string', 'sqlite3*', 'string'],\n          ['sqlite3_db_handle', 'sqlite3*', 'sqlite3_stmt*'],\n          ['sqlite3_db_name', 'string', 'sqlite3*', 'int'],\n          ['sqlite3_db_readonly', 'int', 'sqlite3*', 'string'],\n          ['sqlite3_db_status', 'int', 'sqlite3*', 'int', '*', '*', 'int'],\n          ['sqlite3_errcode', 'int', 'sqlite3*'],\n          ['sqlite3_errmsg', 'string', 'sqlite3*'],\n          ['sqlite3_error_offset', 'int', 'sqlite3*'],\n          ['sqlite3_errstr', 'string', 'int'],\n          [\n            'sqlite3_exec',\n            'int',\n            [\n              'sqlite3*',\n              'string:flexible',\n              new wasm.xWrap.FuncPtrAdapter({\n                signature: 'i(pipp)',\n                bindScope: 'transient',\n                callProxy: (callback) => {\n                  let aNames;\n                  return (pVoid, nCols, pColVals, pColNames) => {\n                    try {\n                      const aVals = wasm.cArgvToJs(nCols, pColVals);\n                      if (!aNames) aNames = wasm.cArgvToJs(nCols, pColNames);\n                      return callback(aVals, aNames) | 0;\n                    } catch (e) {\n                      return e.resultCode || capi.SQLITE_ERROR;\n                    }\n                  };\n                },\n              }),\n              '*',\n              '**',\n            ],\n          ],\n          ['sqlite3_expanded_sql', 'string', 'sqlite3_stmt*'],\n          ['sqlite3_extended_errcode', 'int', 'sqlite3*'],\n          ['sqlite3_extended_result_codes', 'int', 'sqlite3*', 'int'],\n          ['sqlite3_file_control', 'int', 'sqlite3*', 'string', 'int', '*'],\n          ['sqlite3_finalize', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_free', undefined, '*'],\n          ['sqlite3_get_autocommit', 'int', 'sqlite3*'],\n          ['sqlite3_get_auxdata', '*', 'sqlite3_context*', 'int'],\n          ['sqlite3_initialize', undefined],\n          ['sqlite3_interrupt', undefined, 'sqlite3*'],\n          ['sqlite3_is_interrupted', 'int', 'sqlite3*'],\n          ['sqlite3_keyword_count', 'int'],\n          ['sqlite3_keyword_name', 'int', ['int', '**', '*']],\n          ['sqlite3_keyword_check', 'int', ['string', 'int']],\n          ['sqlite3_libversion', 'string'],\n          ['sqlite3_libversion_number', 'int'],\n          ['sqlite3_limit', 'int', ['sqlite3*', 'int', 'int']],\n          ['sqlite3_malloc', '*', 'int'],\n          ['sqlite3_open', 'int', 'string', '*'],\n          ['sqlite3_open_v2', 'int', 'string', '*', 'int', 'string'],\n\n          ['sqlite3_realloc', '*', '*', 'int'],\n          ['sqlite3_reset', 'int', 'sqlite3_stmt*'],\n\n          [\n            'sqlite3_result_blob',\n            undefined,\n            'sqlite3_context*',\n            '*',\n            'int',\n            '*',\n          ],\n          ['sqlite3_result_double', undefined, 'sqlite3_context*', 'f64'],\n          [\n            'sqlite3_result_error',\n            undefined,\n            'sqlite3_context*',\n            'string',\n            'int',\n          ],\n          ['sqlite3_result_error_code', undefined, 'sqlite3_context*', 'int'],\n          ['sqlite3_result_error_nomem', undefined, 'sqlite3_context*'],\n          ['sqlite3_result_error_toobig', undefined, 'sqlite3_context*'],\n          ['sqlite3_result_int', undefined, 'sqlite3_context*', 'int'],\n          ['sqlite3_result_null', undefined, 'sqlite3_context*'],\n          [\n            'sqlite3_result_pointer',\n            undefined,\n            'sqlite3_context*',\n            '*',\n            'string:static',\n            '*',\n          ],\n          ['sqlite3_result_subtype', undefined, 'sqlite3_value*', 'int'],\n          [\n            'sqlite3_result_text',\n            undefined,\n            'sqlite3_context*',\n            'string',\n            'int',\n            '*',\n          ],\n          ['sqlite3_result_zeroblob', undefined, 'sqlite3_context*', 'int'],\n          [\n            'sqlite3_rollback_hook',\n            'void*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_rollback_hook',\n                signature: 'v(p)',\n                contextKey: (argv) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n\n          [\n            'sqlite3_set_auxdata',\n            undefined,\n            [\n              'sqlite3_context*',\n              'int',\n              '*',\n              true\n                ? '*'\n                : new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xDestroyAuxData',\n                    signature: 'v(p)',\n                    contextKey: (argv, argIndex) => argv[0],\n                  }),\n            ],\n          ],\n          ['sqlite3_shutdown', undefined],\n          ['sqlite3_sourceid', 'string'],\n          ['sqlite3_sql', 'string', 'sqlite3_stmt*'],\n          ['sqlite3_status', 'int', 'int', '*', '*', 'int'],\n          ['sqlite3_step', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_stmt_busy', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_stmt_readonly', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_stmt_status', 'int', 'sqlite3_stmt*', 'int', 'int'],\n          ['sqlite3_strglob', 'int', 'string', 'string'],\n          ['sqlite3_stricmp', 'int', 'string', 'string'],\n          ['sqlite3_strlike', 'int', 'string', 'string', 'int'],\n          ['sqlite3_strnicmp', 'int', 'string', 'string', 'int'],\n          [\n            'sqlite3_table_column_metadata',\n            'int',\n            'sqlite3*',\n            'string',\n            'string',\n            'string',\n            '**',\n            '**',\n            '*',\n            '*',\n            '*',\n          ],\n          ['sqlite3_total_changes', 'int', 'sqlite3*'],\n          [\n            'sqlite3_trace_v2',\n            'int',\n            [\n              'sqlite3*',\n              'int',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_trace_v2::callback',\n                signature: 'i(ippp)',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_txn_state', 'int', ['sqlite3*', 'string']],\n\n          ['sqlite3_uri_boolean', 'int', 'sqlite3_filename', 'string', 'int'],\n          ['sqlite3_uri_key', 'string', 'sqlite3_filename', 'int'],\n          ['sqlite3_uri_parameter', 'string', 'sqlite3_filename', 'string'],\n          ['sqlite3_user_data', 'void*', 'sqlite3_context*'],\n          ['sqlite3_value_blob', '*', 'sqlite3_value*'],\n          ['sqlite3_value_bytes', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_double', 'f64', 'sqlite3_value*'],\n          ['sqlite3_value_dup', 'sqlite3_value*', 'sqlite3_value*'],\n          ['sqlite3_value_free', undefined, 'sqlite3_value*'],\n          ['sqlite3_value_frombind', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_int', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_nochange', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_numeric_type', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_pointer', '*', 'sqlite3_value*', 'string:static'],\n          ['sqlite3_value_subtype', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_text', 'string', 'sqlite3_value*'],\n          ['sqlite3_value_type', 'int', 'sqlite3_value*'],\n          ['sqlite3_vfs_find', '*', 'string'],\n          ['sqlite3_vfs_register', 'int', 'sqlite3_vfs*', 'int'],\n          ['sqlite3_vfs_unregister', 'int', 'sqlite3_vfs*'],\n        ];\n\n        if (!!wasm.exports.sqlite3_progress_handler) {\n          wasm.bindingSignatures.push([\n            'sqlite3_progress_handler',\n            undefined,\n            [\n              'sqlite3*',\n              'int',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xProgressHandler',\n                signature: 'i(p)',\n                bindScope: 'context',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ]);\n        }\n\n        if (!!wasm.exports.sqlite3_stmt_explain) {\n          wasm.bindingSignatures.push(\n            ['sqlite3_stmt_explain', 'int', 'sqlite3_stmt*', 'int'],\n            ['sqlite3_stmt_isexplain', 'int', 'sqlite3_stmt*'],\n          );\n        }\n\n        if (!!wasm.exports.sqlite3_set_authorizer) {\n          wasm.bindingSignatures.push([\n            'sqlite3_set_authorizer',\n            'int',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_set_authorizer::xAuth',\n                signature: 'i(pi' + 'ssss)',\n                contextKey: (argv, argIndex) => argv[0],\n                callProxy: (callback) => {\n                  return (pV, iCode, s0, s1, s2, s3) => {\n                    try {\n                      s0 = s0 && wasm.cstrToJs(s0);\n                      s1 = s1 && wasm.cstrToJs(s1);\n                      s2 = s2 && wasm.cstrToJs(s2);\n                      s3 = s3 && wasm.cstrToJs(s3);\n                      return callback(pV, iCode, s0, s1, s2, s3) || 0;\n                    } catch (e) {\n                      return e.resultCode || capi.SQLITE_ERROR;\n                    }\n                  };\n                },\n              }),\n              '*',\n            ],\n          ]);\n        }\n\n        if (false && wasm.compileOptionUsed('SQLITE_ENABLE_NORMALIZE')) {\n          wasm.bindingSignatures.push([\n            'sqlite3_normalized_sql',\n            'string',\n            'sqlite3_stmt*',\n          ]);\n        }\n\n        wasm.bindingSignatures.int64 = [\n          ['sqlite3_bind_int64', 'int', ['sqlite3_stmt*', 'int', 'i64']],\n          ['sqlite3_changes64', 'i64', ['sqlite3*']],\n          ['sqlite3_column_int64', 'i64', ['sqlite3_stmt*', 'int']],\n          [\n            'sqlite3_deserialize',\n            'int',\n            'sqlite3*',\n            'string',\n            '*',\n            'i64',\n            'i64',\n            'int',\n          ],\n          ['sqlite3_last_insert_rowid', 'i64', ['sqlite3*']],\n          ['sqlite3_malloc64', '*', 'i64'],\n          ['sqlite3_msize', 'i64', '*'],\n          ['sqlite3_overload_function', 'int', ['sqlite3*', 'string', 'int']],\n          ['sqlite3_realloc64', '*', '*', 'i64'],\n          ['sqlite3_result_int64', undefined, '*', 'i64'],\n          ['sqlite3_result_zeroblob64', 'int', '*', 'i64'],\n          ['sqlite3_serialize', '*', 'sqlite3*', 'string', '*', 'int'],\n          ['sqlite3_set_last_insert_rowid', undefined, ['sqlite3*', 'i64']],\n          ['sqlite3_status64', 'int', 'int', '*', '*', 'int'],\n          ['sqlite3_total_changes64', 'i64', ['sqlite3*']],\n          [\n            'sqlite3_update_hook',\n            '*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_update_hook',\n                signature: 'v(iippj)',\n                contextKey: (argv) => argv[0],\n                callProxy: (callback) => {\n                  return (p, op, z0, z1, rowid) => {\n                    callback(\n                      p,\n                      op,\n                      wasm.cstrToJs(z0),\n                      wasm.cstrToJs(z1),\n                      rowid,\n                    );\n                  };\n                },\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_uri_int64', 'i64', ['sqlite3_filename', 'string', 'i64']],\n          ['sqlite3_value_int64', 'i64', 'sqlite3_value*'],\n        ];\n\n        if (wasm.bigIntEnabled && !!wasm.exports.sqlite3_declare_vtab) {\n          wasm.bindingSignatures.int64.push(\n            [\n              'sqlite3_create_module',\n              'int',\n              ['sqlite3*', 'string', 'sqlite3_module*', '*'],\n            ],\n            [\n              'sqlite3_create_module_v2',\n              'int',\n              ['sqlite3*', 'string', 'sqlite3_module*', '*', '*'],\n            ],\n            ['sqlite3_declare_vtab', 'int', ['sqlite3*', 'string:flexible']],\n            ['sqlite3_drop_modules', 'int', ['sqlite3*', '**']],\n            ['sqlite3_vtab_collation', 'string', 'sqlite3_index_info*', 'int'],\n            ['sqlite3_vtab_distinct', 'int', 'sqlite3_index_info*'],\n            ['sqlite3_vtab_in', 'int', 'sqlite3_index_info*', 'int', 'int'],\n            ['sqlite3_vtab_in_first', 'int', 'sqlite3_value*', '**'],\n            ['sqlite3_vtab_in_next', 'int', 'sqlite3_value*', '**'],\n\n            ['sqlite3_vtab_nochange', 'int', 'sqlite3_context*'],\n            ['sqlite3_vtab_on_conflict', 'int', 'sqlite3*'],\n            [\n              'sqlite3_vtab_rhs_value',\n              'int',\n              'sqlite3_index_info*',\n              'int',\n              '**',\n            ],\n          );\n        }\n\n        if (wasm.bigIntEnabled && !!wasm.exports.sqlite3_preupdate_hook) {\n          wasm.bindingSignatures.int64.push(\n            ['sqlite3_preupdate_blobwrite', 'int', 'sqlite3*'],\n            ['sqlite3_preupdate_count', 'int', 'sqlite3*'],\n            ['sqlite3_preupdate_depth', 'int', 'sqlite3*'],\n            [\n              'sqlite3_preupdate_hook',\n              '*',\n              [\n                'sqlite3*',\n                new wasm.xWrap.FuncPtrAdapter({\n                  name: 'sqlite3_preupdate_hook',\n                  signature: 'v(ppippjj)',\n                  contextKey: (argv) => argv[0],\n                  callProxy: (callback) => {\n                    return (p, db, op, zDb, zTbl, iKey1, iKey2) => {\n                      callback(\n                        p,\n                        db,\n                        op,\n                        wasm.cstrToJs(zDb),\n                        wasm.cstrToJs(zTbl),\n                        iKey1,\n                        iKey2,\n                      );\n                    };\n                  },\n                }),\n                '*',\n              ],\n            ],\n            ['sqlite3_preupdate_new', 'int', ['sqlite3*', 'int', '**']],\n            ['sqlite3_preupdate_old', 'int', ['sqlite3*', 'int', '**']],\n          );\n        }\n\n        if (\n          wasm.bigIntEnabled &&\n          !!wasm.exports.sqlite3changegroup_add &&\n          !!wasm.exports.sqlite3session_create &&\n          !!wasm.exports.sqlite3_preupdate_hook\n        ) {\n          const __ipsProxy = {\n            signature: 'i(ps)',\n            callProxy: (callback) => {\n              return (p, s) => {\n                try {\n                  return callback(p, wasm.cstrToJs(s)) | 0;\n                } catch (e) {\n                  return e.resultCode || capi.SQLITE_ERROR;\n                }\n              };\n            },\n          };\n\n          wasm.bindingSignatures.int64.push(\n            ...[\n              [\n                'sqlite3changegroup_add',\n                'int',\n                ['sqlite3_changegroup*', 'int', 'void*'],\n              ],\n              [\n                'sqlite3changegroup_add_strm',\n                'int',\n                [\n                  'sqlite3_changegroup*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changegroup_delete',\n                undefined,\n                ['sqlite3_changegroup*'],\n              ],\n              ['sqlite3changegroup_new', 'int', ['**']],\n              [\n                'sqlite3changegroup_output',\n                'int',\n                ['sqlite3_changegroup*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changegroup_output_strm',\n                'int',\n                [\n                  'sqlite3_changegroup*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply',\n                'int',\n                [\n                  'sqlite3*',\n                  'int',\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_strm',\n                'int',\n                [\n                  'sqlite3*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_v2',\n                'int',\n                [\n                  'sqlite3*',\n                  'int',\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  '**',\n                  'int*',\n                  'int',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_v2_strm',\n                'int',\n                [\n                  'sqlite3*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  '**',\n                  'int*',\n                  'int',\n                ],\n              ],\n              [\n                'sqlite3changeset_concat',\n                'int',\n                ['int', 'void*', 'int', 'void*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changeset_concat_strm',\n                'int',\n                [\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInputA',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInputB',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_conflict',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              ['sqlite3changeset_finalize', 'int', ['sqlite3_changeset_iter*']],\n              [\n                'sqlite3changeset_fk_conflicts',\n                'int',\n                ['sqlite3_changeset_iter*', 'int*'],\n              ],\n              [\n                'sqlite3changeset_invert',\n                'int',\n                ['int', 'void*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changeset_invert_strm',\n                'int',\n                [\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_new',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              ['sqlite3changeset_next', 'int', ['sqlite3_changeset_iter*']],\n              [\n                'sqlite3changeset_old',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              [\n                'sqlite3changeset_op',\n                'int',\n                ['sqlite3_changeset_iter*', '**', 'int*', 'int*', 'int*'],\n              ],\n              [\n                'sqlite3changeset_pk',\n                'int',\n                ['sqlite3_changeset_iter*', '**', 'int*'],\n              ],\n              ['sqlite3changeset_start', 'int', ['**', 'int', '*']],\n              [\n                'sqlite3changeset_start_strm',\n                'int',\n                [\n                  '**',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              ['sqlite3changeset_start_v2', 'int', ['**', 'int', '*', 'int']],\n              [\n                'sqlite3changeset_start_v2_strm',\n                'int',\n                [\n                  '**',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  'int',\n                ],\n              ],\n              ['sqlite3session_attach', 'int', ['sqlite3_session*', 'string']],\n              [\n                'sqlite3session_changeset',\n                'int',\n                ['sqlite3_session*', 'int*', '**'],\n              ],\n              ['sqlite3session_changeset_size', 'i64', ['sqlite3_session*']],\n              [\n                'sqlite3session_changeset_strm',\n                'int',\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              ['sqlite3session_config', 'int', ['int', 'void*']],\n              ['sqlite3session_create', 'int', ['sqlite3*', 'string', '**']],\n\n              [\n                'sqlite3session_diff',\n                'int',\n                ['sqlite3_session*', 'string', 'string', '**'],\n              ],\n              ['sqlite3session_enable', 'int', ['sqlite3_session*', 'int']],\n              ['sqlite3session_indirect', 'int', ['sqlite3_session*', 'int']],\n              ['sqlite3session_isempty', 'int', ['sqlite3_session*']],\n              ['sqlite3session_memory_used', 'i64', ['sqlite3_session*']],\n              [\n                'sqlite3session_object_config',\n                'int',\n                ['sqlite3_session*', 'int', 'void*'],\n              ],\n              [\n                'sqlite3session_patchset',\n                'int',\n                ['sqlite3_session*', '*', '**'],\n              ],\n              [\n                'sqlite3session_patchset_strm',\n                'int',\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3session_table_filter',\n                undefined,\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    ...__ipsProxy,\n                    contextKey: (argv, argIndex) => argv[0],\n                  }),\n                  '*',\n                ],\n              ],\n            ],\n          );\n        }\n\n        wasm.bindingSignatures.wasmInternal = [\n          ['sqlite3__wasm_db_reset', 'int', 'sqlite3*'],\n          ['sqlite3__wasm_db_vfs', 'sqlite3_vfs*', 'sqlite3*', 'string'],\n          [\n            'sqlite3__wasm_vfs_create_file',\n            'int',\n            'sqlite3_vfs*',\n            'string',\n            '*',\n            'int',\n          ],\n          ['sqlite3__wasm_posix_create_file', 'int', 'string', '*', 'int'],\n          ['sqlite3__wasm_vfs_unlink', 'int', 'sqlite3_vfs*', 'string'],\n          ['sqlite3__wasm_qfmt_token', 'string:dealloc', 'string', 'int'],\n        ];\n\n        sqlite3.StructBinder = globalThis.Jaccwabyt({\n          heap: 0 ? wasm.memory : wasm.heap8u,\n          alloc: wasm.alloc,\n          dealloc: wasm.dealloc,\n          bigIntEnabled: wasm.bigIntEnabled,\n          memberPrefix: '$',\n        });\n        delete globalThis.Jaccwabyt;\n\n        {\n          const __xString = wasm.xWrap.argAdapter('string');\n          wasm.xWrap.argAdapter('string:flexible', (v) =>\n            __xString(util.flexibleString(v)),\n          );\n\n          wasm.xWrap.argAdapter(\n            'string:static',\n            function (v) {\n              if (wasm.isPtr(v)) return v;\n              v = '' + v;\n              let rc = this[v];\n              return rc || (this[v] = wasm.allocCString(v));\n            }.bind(Object.create(null)),\n          );\n\n          const __xArgPtr = wasm.xWrap.argAdapter('*');\n          const nilType = function () {};\n          wasm.xWrap.argAdapter('sqlite3_filename', __xArgPtr)(\n            'sqlite3_context*',\n            __xArgPtr,\n          )('sqlite3_value*', __xArgPtr)('void*', __xArgPtr)(\n            'sqlite3_changegroup*',\n            __xArgPtr,\n          )('sqlite3_changeset_iter*', __xArgPtr)(\n            'sqlite3_session*',\n            __xArgPtr,\n          )('sqlite3_stmt*', (v) =>\n            __xArgPtr(\n              v instanceof (sqlite3?.oo1?.Stmt || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3*', (v) =>\n            __xArgPtr(\n              v instanceof (sqlite3?.oo1?.DB || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3_vfs*', (v) => {\n            if ('string' === typeof v) {\n              return (\n                capi.sqlite3_vfs_find(v) ||\n                sqlite3.SQLite3Error.toss(\n                  capi.SQLITE_NOTFOUND,\n                  'Unknown sqlite3_vfs name:',\n                  v,\n                )\n              );\n            }\n            return __xArgPtr(\n              v instanceof (capi.sqlite3_vfs || nilType) ? v.pointer : v,\n            );\n          });\n          if (wasm.exports.sqlite3_declare_vtab) {\n            wasm.xWrap.argAdapter('sqlite3_index_info*', (v) =>\n              __xArgPtr(\n                v instanceof (capi.sqlite3_index_info || nilType)\n                  ? v.pointer\n                  : v,\n              ),\n            )('sqlite3_module*', (v) =>\n              __xArgPtr(\n                v instanceof (capi.sqlite3_module || nilType) ? v.pointer : v,\n              ),\n            );\n          }\n\n          const __xRcPtr = wasm.xWrap.resultAdapter('*');\n          wasm.xWrap.resultAdapter('sqlite3*', __xRcPtr)(\n            'sqlite3_context*',\n            __xRcPtr,\n          )('sqlite3_stmt*', __xRcPtr)('sqlite3_value*', __xRcPtr)(\n            'sqlite3_vfs*',\n            __xRcPtr,\n          )('void*', __xRcPtr);\n\n          if (0 === wasm.exports.sqlite3_step.length) {\n            wasm.xWrap.doArgcCheck = false;\n            sqlite3.config.warn(\n              'Disabling sqlite3.wasm.xWrap.doArgcCheck due to environmental quirks.',\n            );\n          }\n          for (const e of wasm.bindingSignatures) {\n            capi[e[0]] = wasm.xWrap.apply(null, e);\n          }\n          for (const e of wasm.bindingSignatures.wasmInternal) {\n            util[e[0]] = wasm.xWrap.apply(null, e);\n          }\n\n          const fI64Disabled = function (fname) {\n            return () =>\n              toss(\n                fname + '() is unavailable due to lack',\n                'of BigInt support in this build.',\n              );\n          };\n          for (const e of wasm.bindingSignatures.int64) {\n            capi[e[0]] = wasm.bigIntEnabled\n              ? wasm.xWrap.apply(null, e)\n              : fI64Disabled(e[0]);\n          }\n\n          delete wasm.bindingSignatures;\n\n          if (wasm.exports.sqlite3__wasm_db_error) {\n            const __db_err = wasm.xWrap(\n              'sqlite3__wasm_db_error',\n              'int',\n              'sqlite3*',\n              'int',\n              'string',\n            );\n\n            util.sqlite3__wasm_db_error = function (pDb, resultCode, message) {\n              if (resultCode instanceof sqlite3.WasmAllocError) {\n                resultCode = capi.SQLITE_NOMEM;\n                message = 0;\n              } else if (resultCode instanceof Error) {\n                message = message || '' + resultCode;\n                resultCode = resultCode.resultCode || capi.SQLITE_ERROR;\n              }\n              return pDb ? __db_err(pDb, resultCode, message) : resultCode;\n            };\n          } else {\n            util.sqlite3__wasm_db_error = function (pDb, errCode, msg) {\n              console.warn(\n                'sqlite3__wasm_db_error() is not exported.',\n                arguments,\n              );\n              return errCode;\n            };\n          }\n        }\n\n        {\n          const cJson = wasm.xCall('sqlite3__wasm_enum_json');\n          if (!cJson) {\n            toss(\n              \"Maintenance required: increase sqlite3__wasm_enum_json()'s\",\n              'static buffer size!',\n            );\n          }\n\n          wasm.ctype = JSON.parse(wasm.cstrToJs(cJson));\n\n          const defineGroups = [\n            'access',\n            'authorizer',\n            'blobFinalizers',\n            'changeset',\n            'config',\n            'dataTypes',\n            'dbConfig',\n            'dbStatus',\n            'encodings',\n            'fcntl',\n            'flock',\n            'ioCap',\n            'limits',\n            'openFlags',\n            'prepareFlags',\n            'resultCodes',\n            'sqlite3Status',\n            'stmtStatus',\n            'syncFlags',\n            'trace',\n            'txnState',\n            'udfFlags',\n            'version',\n          ];\n          if (wasm.bigIntEnabled) {\n            defineGroups.push('serialize', 'session', 'vtab');\n          }\n          for (const t of defineGroups) {\n            for (const e of Object.entries(wasm.ctype[t])) {\n              capi[e[0]] = e[1];\n            }\n          }\n          if (!wasm.functionEntry(capi.SQLITE_WASM_DEALLOC)) {\n            toss(\n              'Internal error: cannot resolve exported function',\n              'entry SQLITE_WASM_DEALLOC (==' + capi.SQLITE_WASM_DEALLOC + ').',\n            );\n          }\n          const __rcMap = Object.create(null);\n          for (const t of ['resultCodes']) {\n            for (const e of Object.entries(wasm.ctype[t])) {\n              __rcMap[e[1]] = e[0];\n            }\n          }\n\n          capi.sqlite3_js_rc_str = (rc) => __rcMap[rc];\n\n          const notThese = Object.assign(Object.create(null), {\n            WasmTestStruct: true,\n\n            sqlite3_kvvfs_methods: !util.isUIThread(),\n\n            sqlite3_index_info: !wasm.bigIntEnabled,\n            sqlite3_index_constraint: !wasm.bigIntEnabled,\n            sqlite3_index_orderby: !wasm.bigIntEnabled,\n            sqlite3_index_constraint_usage: !wasm.bigIntEnabled,\n          });\n          for (const s of wasm.ctype.structs) {\n            if (!notThese[s.name]) {\n              capi[s.name] = sqlite3.StructBinder(s);\n            }\n          }\n          if (capi.sqlite3_index_info) {\n            for (const k of [\n              'sqlite3_index_constraint',\n              'sqlite3_index_orderby',\n              'sqlite3_index_constraint_usage',\n            ]) {\n              capi.sqlite3_index_info[k] = capi[k];\n              delete capi[k];\n            }\n            capi.sqlite3_vtab_config = wasm.xWrap(\n              'sqlite3__wasm_vtab_config',\n              'int',\n              ['sqlite3*', 'int', 'int'],\n            );\n          }\n        }\n\n        const __dbArgcMismatch = (pDb, f, n) => {\n          return util.sqlite3__wasm_db_error(\n            pDb,\n            capi.SQLITE_MISUSE,\n            f + '() requires ' + n + ' argument' + (1 === n ? '' : 's') + '.',\n          );\n        };\n\n        const __errEncoding = (pDb) => {\n          return util.sqlite3__wasm_db_error(\n            pDb,\n            capi.SQLITE_FORMAT,\n            'SQLITE_UTF8 is the only supported encoding.',\n          );\n        };\n\n        const __argPDb = (pDb) => wasm.xWrap.argAdapter('sqlite3*')(pDb);\n        const __argStr = (str) => (wasm.isPtr(str) ? wasm.cstrToJs(str) : str);\n        const __dbCleanupMap = function (pDb, mode) {\n          pDb = __argPDb(pDb);\n          let m = this.dbMap.get(pDb);\n          if (!mode) {\n            this.dbMap.delete(pDb);\n            return m;\n          } else if (!m && mode > 0) {\n            this.dbMap.set(pDb, (m = Object.create(null)));\n          }\n          return m;\n        }.bind(\n          Object.assign(Object.create(null), {\n            dbMap: new Map(),\n          }),\n        );\n\n        __dbCleanupMap.addCollation = function (pDb, name) {\n          const m = __dbCleanupMap(pDb, 1);\n          if (!m.collation) m.collation = new Set();\n          m.collation.add(__argStr(name).toLowerCase());\n        };\n\n        __dbCleanupMap._addUDF = function (pDb, name, arity, map) {\n          name = __argStr(name).toLowerCase();\n          let u = map.get(name);\n          if (!u) map.set(name, (u = new Set()));\n          u.add(arity < 0 ? -1 : arity);\n        };\n\n        __dbCleanupMap.addFunction = function (pDb, name, arity) {\n          const m = __dbCleanupMap(pDb, 1);\n          if (!m.udf) m.udf = new Map();\n          this._addUDF(pDb, name, arity, m.udf);\n        };\n\n        if (wasm.exports.sqlite3_create_window_function) {\n          __dbCleanupMap.addWindowFunc = function (pDb, name, arity) {\n            const m = __dbCleanupMap(pDb, 1);\n            if (!m.wudf) m.wudf = new Map();\n            this._addUDF(pDb, name, arity, m.wudf);\n          };\n        }\n\n        __dbCleanupMap.cleanup = function (pDb) {\n          pDb = __argPDb(pDb);\n\n          const closeArgs = [pDb];\n          for (const name of [\n            'sqlite3_busy_handler',\n            'sqlite3_commit_hook',\n            'sqlite3_preupdate_hook',\n            'sqlite3_progress_handler',\n            'sqlite3_rollback_hook',\n            'sqlite3_set_authorizer',\n            'sqlite3_trace_v2',\n            'sqlite3_update_hook',\n          ]) {\n            const x = wasm.exports[name];\n            if (!x) {\n              continue;\n            }\n            closeArgs.length = x.length;\n            try {\n              capi[name](...closeArgs);\n            } catch (e) {\n              sqlite3.config.warn(\n                'close-time call of',\n                name + '(',\n                closeArgs,\n                ') threw:',\n                e,\n              );\n            }\n          }\n          const m = __dbCleanupMap(pDb, 0);\n          if (!m) return;\n          if (m.collation) {\n            for (const name of m.collation) {\n              try {\n                capi.sqlite3_create_collation_v2(\n                  pDb,\n                  name,\n                  capi.SQLITE_UTF8,\n                  0,\n                  0,\n                  0,\n                );\n              } catch (e) {}\n            }\n            delete m.collation;\n          }\n          let i;\n          for (i = 0; i < 2; ++i) {\n            const fmap = i ? m.wudf : m.udf;\n            if (!fmap) continue;\n            const func = i\n              ? capi.sqlite3_create_window_function\n              : capi.sqlite3_create_function_v2;\n            for (const e of fmap) {\n              const name = e[0],\n                arities = e[1];\n              const fargs = [pDb, name, 0, capi.SQLITE_UTF8, 0, 0, 0, 0, 0];\n              if (i) fargs.push(0);\n              for (const arity of arities) {\n                try {\n                  fargs[2] = arity;\n                  func.apply(null, fargs);\n                } catch (e) {}\n              }\n              arities.clear();\n            }\n            fmap.clear();\n          }\n          delete m.udf;\n          delete m.wudf;\n        };\n\n        {\n          const __sqlite3CloseV2 = wasm.xWrap(\n            'sqlite3_close_v2',\n            'int',\n            'sqlite3*',\n          );\n          capi.sqlite3_close_v2 = function (pDb) {\n            if (1 !== arguments.length)\n              return __dbArgcMismatch(pDb, 'sqlite3_close_v2', 1);\n            if (pDb) {\n              try {\n                __dbCleanupMap.cleanup(pDb);\n              } catch (e) {}\n            }\n            return __sqlite3CloseV2(pDb);\n          };\n        }\n\n        if (capi.sqlite3session_create) {\n          const __sqlite3SessionDelete = wasm.xWrap(\n            'sqlite3session_delete',\n            undefined,\n            ['sqlite3_session*'],\n          );\n          capi.sqlite3session_delete = function (pSession) {\n            if (1 !== arguments.length) {\n              return __dbArgcMismatch(pDb, 'sqlite3session_delete', 1);\n            } else if (pSession) {\n              capi.sqlite3session_table_filter(pSession, 0, 0);\n            }\n            __sqlite3SessionDelete(pSession);\n          };\n        }\n\n        {\n          const contextKey = (argv, argIndex) => {\n            return (\n              'argv[' +\n              argIndex +\n              ']:' +\n              argv[0] +\n              ':' +\n              wasm.cstrToJs(argv[1]).toLowerCase()\n            );\n          };\n          const __sqlite3CreateCollationV2 = wasm.xWrap(\n            'sqlite3_create_collation_v2',\n            'int',\n            [\n              'sqlite3*',\n              'string',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xCompare',\n                signature: 'i(pipip)',\n                contextKey,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroy',\n                signature: 'v(p)',\n                contextKey,\n              }),\n            ],\n          );\n\n          capi.sqlite3_create_collation_v2 = function (\n            pDb,\n            zName,\n            eTextRep,\n            pArg,\n            xCompare,\n            xDestroy,\n          ) {\n            if (6 !== arguments.length)\n              return __dbArgcMismatch(pDb, 'sqlite3_create_collation_v2', 6);\n            else if (0 === (eTextRep & 0xf)) {\n              eTextRep |= capi.SQLITE_UTF8;\n            } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n              return __errEncoding(pDb);\n            }\n            try {\n              const rc = __sqlite3CreateCollationV2(\n                pDb,\n                zName,\n                eTextRep,\n                pArg,\n                xCompare,\n                xDestroy,\n              );\n              if (0 === rc && xCompare instanceof Function) {\n                __dbCleanupMap.addCollation(pDb, zName);\n              }\n              return rc;\n            } catch (e) {\n              return util.sqlite3__wasm_db_error(pDb, e);\n            }\n          };\n\n          capi.sqlite3_create_collation = (\n            pDb,\n            zName,\n            eTextRep,\n            pArg,\n            xCompare,\n          ) => {\n            return 5 === arguments.length\n              ? capi.sqlite3_create_collation_v2(\n                  pDb,\n                  zName,\n                  eTextRep,\n                  pArg,\n                  xCompare,\n                  0,\n                )\n              : __dbArgcMismatch(pDb, 'sqlite3_create_collation', 5);\n          };\n        }\n\n        {\n          const contextKey = function (argv, argIndex) {\n            return (\n              argv[0] +\n              ':' +\n              (argv[2] < 0 ? -1 : argv[2]) +\n              ':' +\n              argIndex +\n              ':' +\n              wasm.cstrToJs(argv[1]).toLowerCase()\n            );\n          };\n\n          const __cfProxy = Object.assign(Object.create(null), {\n            xInverseAndStep: {\n              signature: 'v(pip)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx, argc, pArgv) => {\n                  try {\n                    callback(pCtx, ...capi.sqlite3_values_to_js(argc, pArgv));\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xFinalAndValue: {\n              signature: 'v(p)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx) => {\n                  try {\n                    capi.sqlite3_result_js(pCtx, callback(pCtx));\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xFunc: {\n              signature: 'v(pip)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx, argc, pArgv) => {\n                  try {\n                    capi.sqlite3_result_js(\n                      pCtx,\n                      callback(pCtx, ...capi.sqlite3_values_to_js(argc, pArgv)),\n                    );\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xDestroy: {\n              signature: 'v(p)',\n              contextKey,\n\n              callProxy: (callback) => {\n                return (pVoid) => {\n                  try {\n                    callback(pVoid);\n                  } catch (e) {\n                    console.error('UDF xDestroy method threw:', e);\n                  }\n                };\n              },\n            },\n          });\n\n          const __sqlite3CreateFunction = wasm.xWrap(\n            'sqlite3_create_function_v2',\n            'int',\n            [\n              'sqlite3*',\n              'string',\n              'int',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xFunc',\n                ...__cfProxy.xFunc,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xStep',\n                ...__cfProxy.xInverseAndStep,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xFinal',\n                ...__cfProxy.xFinalAndValue,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroy',\n                ...__cfProxy.xDestroy,\n              }),\n            ],\n          );\n\n          const __sqlite3CreateWindowFunction = wasm.exports\n            .sqlite3_create_window_function\n            ? wasm.xWrap('sqlite3_create_window_function', 'int', [\n                'sqlite3*',\n                'string',\n                'int',\n                'int',\n                '*',\n                new wasm.xWrap.FuncPtrAdapter({\n                  name: 'xStep',\n                  ...__cfProxy.xInverseAndStep,\n                }),\n                new wasm.xWrap.FuncPtrAdapter({\n                  name: 'xFinal',\n                  ...__cfProxy.xFinalAndValue,\n                }),\n                new wasm.xWrap.FuncPtrAdapter({\n                  name: 'xValue',\n                  ...__cfProxy.xFinalAndValue,\n                }),\n                new wasm.xWrap.FuncPtrAdapter({\n                  name: 'xInverse',\n                  ...__cfProxy.xInverseAndStep,\n                }),\n                new wasm.xWrap.FuncPtrAdapter({\n                  name: 'xDestroy',\n                  ...__cfProxy.xDestroy,\n                }),\n              ])\n            : undefined;\n\n          capi.sqlite3_create_function_v2 = function f(\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                pDb,\n                'sqlite3_create_function_v2',\n                f.length,\n              );\n            } else if (0 === (eTextRep & 0xf)) {\n              eTextRep |= capi.SQLITE_UTF8;\n            } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n              return __errEncoding(pDb);\n            }\n            try {\n              const rc = __sqlite3CreateFunction(\n                pDb,\n                funcName,\n                nArg,\n                eTextRep,\n                pApp,\n                xFunc,\n                xStep,\n                xFinal,\n                xDestroy,\n              );\n              if (\n                0 === rc &&\n                (xFunc instanceof Function ||\n                  xStep instanceof Function ||\n                  xFinal instanceof Function ||\n                  xDestroy instanceof Function)\n              ) {\n                __dbCleanupMap.addFunction(pDb, funcName, nArg);\n              }\n              return rc;\n            } catch (e) {\n              console.error('sqlite3_create_function_v2() setup threw:', e);\n              return util.sqlite3__wasm_db_error(\n                pDb,\n                e,\n                'Creation of UDF threw: ' + e,\n              );\n            }\n          };\n\n          capi.sqlite3_create_function = function f(\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n          ) {\n            return f.length === arguments.length\n              ? capi.sqlite3_create_function_v2(\n                  pDb,\n                  funcName,\n                  nArg,\n                  eTextRep,\n                  pApp,\n                  xFunc,\n                  xStep,\n                  xFinal,\n                  0,\n                )\n              : __dbArgcMismatch(pDb, 'sqlite3_create_function', f.length);\n          };\n\n          if (__sqlite3CreateWindowFunction) {\n            capi.sqlite3_create_window_function = function f(\n              pDb,\n              funcName,\n              nArg,\n              eTextRep,\n              pApp,\n              xStep,\n              xFinal,\n              xValue,\n              xInverse,\n              xDestroy,\n            ) {\n              if (f.length !== arguments.length) {\n                return __dbArgcMismatch(\n                  pDb,\n                  'sqlite3_create_window_function',\n                  f.length,\n                );\n              } else if (0 === (eTextRep & 0xf)) {\n                eTextRep |= capi.SQLITE_UTF8;\n              } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n                return __errEncoding(pDb);\n              }\n              try {\n                const rc = __sqlite3CreateWindowFunction(\n                  pDb,\n                  funcName,\n                  nArg,\n                  eTextRep,\n                  pApp,\n                  xStep,\n                  xFinal,\n                  xValue,\n                  xInverse,\n                  xDestroy,\n                );\n                if (\n                  0 === rc &&\n                  (xStep instanceof Function ||\n                    xFinal instanceof Function ||\n                    xValue instanceof Function ||\n                    xInverse instanceof Function ||\n                    xDestroy instanceof Function)\n                ) {\n                  __dbCleanupMap.addWindowFunc(pDb, funcName, nArg);\n                }\n                return rc;\n              } catch (e) {\n                console.error(\n                  'sqlite3_create_window_function() setup threw:',\n                  e,\n                );\n                return util.sqlite3__wasm_db_error(\n                  pDb,\n                  e,\n                  'Creation of UDF threw: ' + e,\n                );\n              }\n            };\n          } else {\n            delete capi.sqlite3_create_window_function;\n          }\n\n          capi.sqlite3_create_function_v2.udfSetResult =\n            capi.sqlite3_create_function.udfSetResult = capi.sqlite3_result_js;\n          if (capi.sqlite3_create_window_function) {\n            capi.sqlite3_create_window_function.udfSetResult =\n              capi.sqlite3_result_js;\n          }\n\n          capi.sqlite3_create_function_v2.udfConvertArgs =\n            capi.sqlite3_create_function.udfConvertArgs =\n              capi.sqlite3_values_to_js;\n          if (capi.sqlite3_create_window_function) {\n            capi.sqlite3_create_window_function.udfConvertArgs =\n              capi.sqlite3_values_to_js;\n          }\n\n          capi.sqlite3_create_function_v2.udfSetError =\n            capi.sqlite3_create_function.udfSetError =\n              capi.sqlite3_result_error_js;\n          if (capi.sqlite3_create_window_function) {\n            capi.sqlite3_create_window_function.udfSetError =\n              capi.sqlite3_result_error_js;\n          }\n        }\n\n        {\n          const __flexiString = (v, n) => {\n            if ('string' === typeof v) {\n              n = -1;\n            } else if (util.isSQLableTypedArray(v)) {\n              n = v.byteLength;\n              v = util.typedArrayToString(\n                v instanceof ArrayBuffer ? new Uint8Array(v) : v,\n              );\n            } else if (Array.isArray(v)) {\n              v = v.join('');\n              n = -1;\n            }\n            return [v, n];\n          };\n\n          const __prepare = {\n            basic: wasm.xWrap('sqlite3_prepare_v3', 'int', [\n              'sqlite3*',\n              'string',\n              'int',\n              'int',\n              '**',\n              '**',\n            ]),\n\n            full: wasm.xWrap('sqlite3_prepare_v3', 'int', [\n              'sqlite3*',\n              '*',\n              'int',\n              'int',\n              '**',\n              '**',\n            ]),\n          };\n\n          capi.sqlite3_prepare_v3 = function f(\n            pDb,\n            sql,\n            sqlLen,\n            prepFlags,\n            ppStmt,\n            pzTail,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(pDb, 'sqlite3_prepare_v3', f.length);\n            }\n            const [xSql, xSqlLen] = __flexiString(sql, sqlLen);\n            switch (typeof xSql) {\n              case 'string':\n                return __prepare.basic(\n                  pDb,\n                  xSql,\n                  xSqlLen,\n                  prepFlags,\n                  ppStmt,\n                  null,\n                );\n              case 'number':\n                return __prepare.full(\n                  pDb,\n                  xSql,\n                  xSqlLen,\n                  prepFlags,\n                  ppStmt,\n                  pzTail,\n                );\n              default:\n                return util.sqlite3__wasm_db_error(\n                  pDb,\n                  capi.SQLITE_MISUSE,\n                  'Invalid SQL argument type for sqlite3_prepare_v2/v3().',\n                );\n            }\n          };\n\n          capi.sqlite3_prepare_v2 = function f(\n            pDb,\n            sql,\n            sqlLen,\n            ppStmt,\n            pzTail,\n          ) {\n            return f.length === arguments.length\n              ? capi.sqlite3_prepare_v3(pDb, sql, sqlLen, 0, ppStmt, pzTail)\n              : __dbArgcMismatch(pDb, 'sqlite3_prepare_v2', f.length);\n          };\n        }\n\n        {\n          const __bindText = wasm.xWrap('sqlite3_bind_text', 'int', [\n            'sqlite3_stmt*',\n            'int',\n            'string',\n            'int',\n            '*',\n          ]);\n          const __bindBlob = wasm.xWrap('sqlite3_bind_blob', 'int', [\n            'sqlite3_stmt*',\n            'int',\n            '*',\n            'int',\n            '*',\n          ]);\n\n          capi.sqlite3_bind_text = function f(\n            pStmt,\n            iCol,\n            text,\n            nText,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                capi.sqlite3_db_handle(pStmt),\n                'sqlite3_bind_text',\n                f.length,\n              );\n            } else if (wasm.isPtr(text) || null === text) {\n              return __bindText(pStmt, iCol, text, nText, xDestroy);\n            } else if (text instanceof ArrayBuffer) {\n              text = new Uint8Array(text);\n            } else if (Array.isArray(pMem)) {\n              text = pMem.join('');\n            }\n            let p, n;\n            try {\n              if (util.isSQLableTypedArray(text)) {\n                p = wasm.allocFromTypedArray(text);\n                n = text.byteLength;\n              } else if ('string' === typeof text) {\n                [p, n] = wasm.allocCString(text);\n              } else {\n                return util.sqlite3__wasm_db_error(\n                  capi.sqlite3_db_handle(pStmt),\n                  capi.SQLITE_MISUSE,\n                  'Invalid 3rd argument type for sqlite3_bind_text().',\n                );\n              }\n              return __bindText(pStmt, iCol, p, n, capi.SQLITE_WASM_DEALLOC);\n            } catch (e) {\n              wasm.dealloc(p);\n              return util.sqlite3__wasm_db_error(\n                capi.sqlite3_db_handle(pStmt),\n                e,\n              );\n            }\n          };\n\n          capi.sqlite3_bind_blob = function f(\n            pStmt,\n            iCol,\n            pMem,\n            nMem,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                capi.sqlite3_db_handle(pStmt),\n                'sqlite3_bind_blob',\n                f.length,\n              );\n            } else if (wasm.isPtr(pMem) || null === pMem) {\n              return __bindBlob(pStmt, iCol, pMem, nMem, xDestroy);\n            } else if (pMem instanceof ArrayBuffer) {\n              pMem = new Uint8Array(pMem);\n            } else if (Array.isArray(pMem)) {\n              pMem = pMem.join('');\n            }\n            let p, n;\n            try {\n              if (util.isBindableTypedArray(pMem)) {\n                p = wasm.allocFromTypedArray(pMem);\n                n = nMem >= 0 ? nMem : pMem.byteLength;\n              } else if ('string' === typeof pMem) {\n                [p, n] = wasm.allocCString(pMem);\n              } else {\n                return util.sqlite3__wasm_db_error(\n                  capi.sqlite3_db_handle(pStmt),\n                  capi.SQLITE_MISUSE,\n                  'Invalid 3rd argument type for sqlite3_bind_blob().',\n                );\n              }\n              return __bindBlob(pStmt, iCol, p, n, capi.SQLITE_WASM_DEALLOC);\n            } catch (e) {\n              wasm.dealloc(p);\n              return util.sqlite3__wasm_db_error(\n                capi.sqlite3_db_handle(pStmt),\n                e,\n              );\n            }\n          };\n        }\n\n        {\n          capi.sqlite3_config = function (op, ...args) {\n            if (arguments.length < 2) return capi.SQLITE_MISUSE;\n            switch (op) {\n              case capi.SQLITE_CONFIG_COVERING_INDEX_SCAN:\n              case capi.SQLITE_CONFIG_MEMSTATUS:\n              case capi.SQLITE_CONFIG_SMALL_MALLOC:\n              case capi.SQLITE_CONFIG_SORTERREF_SIZE:\n              case capi.SQLITE_CONFIG_STMTJRNL_SPILL:\n              case capi.SQLITE_CONFIG_URI:\n                return wasm.exports.sqlite3__wasm_config_i(op, args[0]);\n              case capi.SQLITE_CONFIG_LOOKASIDE:\n                return wasm.exports.sqlite3__wasm_config_ii(\n                  op,\n                  args[0],\n                  args[1],\n                );\n              case capi.SQLITE_CONFIG_MEMDB_MAXSIZE:\n                return wasm.exports.sqlite3__wasm_config_j(op, args[0]);\n              case capi.SQLITE_CONFIG_GETMALLOC:\n              case capi.SQLITE_CONFIG_GETMUTEX:\n              case capi.SQLITE_CONFIG_GETPCACHE2:\n              case capi.SQLITE_CONFIG_GETPCACHE:\n              case capi.SQLITE_CONFIG_HEAP:\n              case capi.SQLITE_CONFIG_LOG:\n              case capi.SQLITE_CONFIG_MALLOC:\n              case capi.SQLITE_CONFIG_MMAP_SIZE:\n              case capi.SQLITE_CONFIG_MULTITHREAD:\n              case capi.SQLITE_CONFIG_MUTEX:\n              case capi.SQLITE_CONFIG_PAGECACHE:\n              case capi.SQLITE_CONFIG_PCACHE2:\n              case capi.SQLITE_CONFIG_PCACHE:\n              case capi.SQLITE_CONFIG_PCACHE_HDRSZ:\n              case capi.SQLITE_CONFIG_PMASZ:\n              case capi.SQLITE_CONFIG_SERIALIZED:\n              case capi.SQLITE_CONFIG_SINGLETHREAD:\n              case capi.SQLITE_CONFIG_SQLLOG:\n              case capi.SQLITE_CONFIG_WIN32_HEAPSIZE:\n              default:\n                return capi.SQLITE_NOTFOUND;\n            }\n          };\n        }\n\n        {\n          const __autoExtFptr = new Set();\n\n          capi.sqlite3_auto_extension = function (fPtr) {\n            if (fPtr instanceof Function) {\n              fPtr = wasm.installFunction('i(ppp)', fPtr);\n            } else if (1 !== arguments.length || !wasm.isPtr(fPtr)) {\n              return capi.SQLITE_MISUSE;\n            }\n            const rc = wasm.exports.sqlite3_auto_extension(fPtr);\n            if (fPtr !== arguments[0]) {\n              if (0 === rc) __autoExtFptr.add(fPtr);\n              else wasm.uninstallFunction(fPtr);\n            }\n            return rc;\n          };\n\n          capi.sqlite3_cancel_auto_extension = function (fPtr) {\n            if (!fPtr || 1 !== arguments.length || !wasm.isPtr(fPtr)) return 0;\n            return wasm.exports.sqlite3_cancel_auto_extension(fPtr);\n          };\n\n          capi.sqlite3_reset_auto_extension = function () {\n            wasm.exports.sqlite3_reset_auto_extension();\n            for (const fp of __autoExtFptr) wasm.uninstallFunction(fp);\n            __autoExtFptr.clear();\n          };\n        }\n\n        const pKvvfs = capi.sqlite3_vfs_find('kvvfs');\n        if (pKvvfs) {\n          if (util.isUIThread()) {\n            const kvvfsMethods = new capi.sqlite3_kvvfs_methods(\n              wasm.exports.sqlite3__wasm_kvvfs_methods(),\n            );\n            delete capi.sqlite3_kvvfs_methods;\n\n            const kvvfsMakeKey =\n                wasm.exports.sqlite3__wasm_kvvfsMakeKeyOnPstack,\n              pstack = wasm.pstack;\n\n            const kvvfsStorage = (zClass) =>\n              115 === wasm.peek(zClass) ? sessionStorage : localStorage;\n\n            const kvvfsImpls = {\n              xRead: (zClass, zKey, zBuf, nBuf) => {\n                const stack = pstack.pointer,\n                  astack = wasm.scopedAllocPush();\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return -3;\n                  const jKey = wasm.cstrToJs(zXKey);\n                  const jV = kvvfsStorage(zClass).getItem(jKey);\n                  if (!jV) return -1;\n                  const nV = jV.length;\n                  if (nBuf <= 0) return nV;\n                  else if (1 === nBuf) {\n                    wasm.poke(zBuf, 0);\n                    return nV;\n                  }\n                  const zV = wasm.scopedAllocCString(jV);\n                  if (nBuf > nV + 1) nBuf = nV + 1;\n                  wasm.heap8u().copyWithin(zBuf, zV, zV + nBuf - 1);\n                  wasm.poke(zBuf + nBuf - 1, 0);\n                  return nBuf - 1;\n                } catch (e) {\n                  console.error('kvstorageRead()', e);\n                  return -2;\n                } finally {\n                  pstack.restore(stack);\n                  wasm.scopedAllocPop(astack);\n                }\n              },\n              xWrite: (zClass, zKey, zData) => {\n                const stack = pstack.pointer;\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return 1;\n                  const jKey = wasm.cstrToJs(zXKey);\n                  kvvfsStorage(zClass).setItem(jKey, wasm.cstrToJs(zData));\n                  return 0;\n                } catch (e) {\n                  console.error('kvstorageWrite()', e);\n                  return capi.SQLITE_IOERR;\n                } finally {\n                  pstack.restore(stack);\n                }\n              },\n              xDelete: (zClass, zKey) => {\n                const stack = pstack.pointer;\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return 1;\n                  kvvfsStorage(zClass).removeItem(wasm.cstrToJs(zXKey));\n                  return 0;\n                } catch (e) {\n                  console.error('kvstorageDelete()', e);\n                  return capi.SQLITE_IOERR;\n                } finally {\n                  pstack.restore(stack);\n                }\n              },\n            };\n            for (const k of Object.keys(kvvfsImpls)) {\n              kvvfsMethods[kvvfsMethods.memberKey(k)] = wasm.installFunction(\n                kvvfsMethods.memberSignature(k),\n                kvvfsImpls[k],\n              );\n            }\n          } else {\n            capi.sqlite3_vfs_unregister(pKvvfs);\n          }\n        }\n\n        wasm.xWrap.FuncPtrAdapter.warnOnUse = true;\n\n        const StructBinder = sqlite3.StructBinder;\n        const installMethod = function callee(\n          tgt,\n          name,\n          func,\n          applyArgcCheck = callee.installMethodArgcCheck,\n        ) {\n          if (!(tgt instanceof StructBinder.StructType)) {\n            toss('Usage error: target object is-not-a StructType.');\n          } else if (!(func instanceof Function) && !wasm.isPtr(func)) {\n            toss('Usage error: expecting a Function or WASM pointer to one.');\n          }\n          if (1 === arguments.length) {\n            return (n, f) => callee(tgt, n, f, applyArgcCheck);\n          }\n          if (!callee.argcProxy) {\n            callee.argcProxy = function (tgt, funcName, func, sig) {\n              return function (...args) {\n                if (func.length !== arguments.length) {\n                  toss(\n                    'Argument mismatch for',\n                    tgt.structInfo.name +\n                      '::' +\n                      funcName +\n                      ': Native signature is:',\n                    sig,\n                  );\n                }\n                return func.apply(this, args);\n              };\n            };\n\n            callee.removeFuncList = function () {\n              if (this.ondispose.__removeFuncList) {\n                this.ondispose.__removeFuncList.forEach((v, ndx) => {\n                  if ('number' === typeof v) {\n                    try {\n                      wasm.uninstallFunction(v);\n                    } catch (e) {}\n                  }\n                });\n                delete this.ondispose.__removeFuncList;\n              }\n            };\n          }\n          const sigN = tgt.memberSignature(name);\n          if (sigN.length < 2) {\n            toss(\n              'Member',\n              name,\n              'does not have a function pointer signature:',\n              sigN,\n            );\n          }\n          const memKey = tgt.memberKey(name);\n          const fProxy =\n            applyArgcCheck && !wasm.isPtr(func)\n              ? callee.argcProxy(tgt, memKey, func, sigN)\n              : func;\n          if (wasm.isPtr(fProxy)) {\n            if (fProxy && !wasm.functionEntry(fProxy)) {\n              toss('Pointer', fProxy, 'is not a WASM function table entry.');\n            }\n            tgt[memKey] = fProxy;\n          } else {\n            const pFunc = wasm.installFunction(\n              fProxy,\n              tgt.memberSignature(name, true),\n            );\n            tgt[memKey] = pFunc;\n            if (!tgt.ondispose || !tgt.ondispose.__removeFuncList) {\n              tgt.addOnDispose(\n                'ondispose.__removeFuncList handler',\n                callee.removeFuncList,\n              );\n              tgt.ondispose.__removeFuncList = [];\n            }\n            tgt.ondispose.__removeFuncList.push(memKey, pFunc);\n          }\n          return (n, f) => callee(tgt, n, f, applyArgcCheck);\n        };\n        installMethod.installMethodArgcCheck = false;\n\n        const installMethods = function (\n          structInstance,\n          methods,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          const seen = new Map();\n          for (const k of Object.keys(methods)) {\n            const m = methods[k];\n            const prior = seen.get(m);\n            if (prior) {\n              const mkey = structInstance.memberKey(k);\n              structInstance[mkey] =\n                structInstance[structInstance.memberKey(prior)];\n            } else {\n              installMethod(structInstance, k, m, applyArgcCheck);\n              seen.set(m, k);\n            }\n          }\n          return structInstance;\n        };\n\n        StructBinder.StructType.prototype.installMethod = function callee(\n          name,\n          func,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          return arguments.length < 3 && name && 'object' === typeof name\n            ? installMethods(this, ...arguments)\n            : installMethod(this, ...arguments);\n        };\n\n        StructBinder.StructType.prototype.installMethods = function (\n          methods,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          return installMethods(this, methods, applyArgcCheck);\n        };\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        sqlite3.version = {\n          libVersion: '3.50.1',\n          libVersionNumber: 3050001,\n          sourceId:\n            '2025-06-06 14:52:32 b77dc5e0f596d2140d9ac682b2893ff65d3a4140aa86067a3efebe29dc914c95',\n          downloadVersion: 3500100,\n        };\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n        const toss3 = (...args) => {\n          throw new sqlite3.SQLite3Error(...args);\n        };\n\n        const capi = sqlite3.capi,\n          wasm = sqlite3.wasm,\n          util = sqlite3.util;\n\n        const __ptrMap = new WeakMap();\n\n        const __stmtMap = new WeakMap();\n\n        const getOwnOption = (opts, p, dflt) => {\n          const d = Object.getOwnPropertyDescriptor(opts, p);\n          return d ? d.value : dflt;\n        };\n\n        const checkSqlite3Rc = function (dbPtr, sqliteResultCode) {\n          if (sqliteResultCode) {\n            if (dbPtr instanceof DB) dbPtr = dbPtr.pointer;\n            toss3(\n              sqliteResultCode,\n              'sqlite3 result code',\n              sqliteResultCode + ':',\n              dbPtr\n                ? capi.sqlite3_errmsg(dbPtr)\n                : capi.sqlite3_errstr(sqliteResultCode),\n            );\n          }\n          return arguments[0];\n        };\n\n        const __dbTraceToConsole = wasm.installFunction(\n          'i(ippp)',\n          function (t, c, p, x) {\n            if (capi.SQLITE_TRACE_STMT === t) {\n              console.log(\n                'SQL TRACE #' + ++this.counter + ' via sqlite3@' + c + ':',\n                wasm.cstrToJs(x),\n              );\n            }\n          }.bind({ counter: 0 }),\n        );\n\n        const __vfsPostOpenCallback = Object.create(null);\n\n        const dbCtorHelper = function ctor(...args) {\n          if (!ctor._name2vfs) {\n            ctor._name2vfs = Object.create(null);\n            const isWorkerThread =\n              'function' === typeof importScripts\n                ? (n) =>\n                    toss3(\n                      'The VFS for',\n                      n,\n                      'is only available in the main window thread.',\n                    )\n                : false;\n            ctor._name2vfs[':localStorage:'] = {\n              vfs: 'kvvfs',\n              filename: isWorkerThread || (() => 'local'),\n            };\n            ctor._name2vfs[':sessionStorage:'] = {\n              vfs: 'kvvfs',\n              filename: isWorkerThread || (() => 'session'),\n            };\n          }\n          const opt = ctor.normalizeArgs(...args);\n          let fn = opt.filename,\n            vfsName = opt.vfs,\n            flagsStr = opt.flags;\n          if (\n            ('string' !== typeof fn && 'number' !== typeof fn) ||\n            'string' !== typeof flagsStr ||\n            (vfsName &&\n              'string' !== typeof vfsName &&\n              'number' !== typeof vfsName)\n          ) {\n            sqlite3.config.error('Invalid DB ctor args', opt, arguments);\n            toss3('Invalid arguments for DB constructor.');\n          }\n          let fnJs = 'number' === typeof fn ? wasm.cstrToJs(fn) : fn;\n          const vfsCheck = ctor._name2vfs[fnJs];\n          if (vfsCheck) {\n            vfsName = vfsCheck.vfs;\n            fn = fnJs = vfsCheck.filename(fnJs);\n          }\n          let pDb,\n            oflags = 0;\n          if (flagsStr.indexOf('c') >= 0) {\n            oflags |= capi.SQLITE_OPEN_CREATE | capi.SQLITE_OPEN_READWRITE;\n          }\n          if (flagsStr.indexOf('w') >= 0) oflags |= capi.SQLITE_OPEN_READWRITE;\n          if (0 === oflags) oflags |= capi.SQLITE_OPEN_READONLY;\n          oflags |= capi.SQLITE_OPEN_EXRESCODE;\n          const stack = wasm.pstack.pointer;\n          try {\n            const pPtr = wasm.pstack.allocPtr();\n            let rc = capi.sqlite3_open_v2(fn, pPtr, oflags, vfsName || 0);\n            pDb = wasm.peekPtr(pPtr);\n            checkSqlite3Rc(pDb, rc);\n            capi.sqlite3_extended_result_codes(pDb, 1);\n            if (flagsStr.indexOf('t') >= 0) {\n              capi.sqlite3_trace_v2(\n                pDb,\n                capi.SQLITE_TRACE_STMT,\n                __dbTraceToConsole,\n                pDb,\n              );\n            }\n          } catch (e) {\n            if (pDb) capi.sqlite3_close_v2(pDb);\n            throw e;\n          } finally {\n            wasm.pstack.restore(stack);\n          }\n          this.filename = fnJs;\n          __ptrMap.set(this, pDb);\n          __stmtMap.set(this, Object.create(null));\n          try {\n            const pVfs =\n              capi.sqlite3_js_db_vfs(pDb) ||\n              toss3('Internal error: cannot get VFS for new db handle.');\n            const postInitSql = __vfsPostOpenCallback[pVfs];\n            if (postInitSql) {\n              if (postInitSql instanceof Function) {\n                postInitSql(this, sqlite3);\n              } else {\n                checkSqlite3Rc(\n                  pDb,\n                  capi.sqlite3_exec(pDb, postInitSql, 0, 0, 0),\n                );\n              }\n            }\n          } catch (e) {\n            this.close();\n            throw e;\n          }\n        };\n\n        dbCtorHelper.setVfsPostOpenCallback = function (pVfs, callback) {\n          if (!(callback instanceof Function)) {\n            toss3(\n              'dbCtorHelper.setVfsPostOpenCallback() should not be used with ' +\n                'a non-function argument.',\n              arguments,\n            );\n          }\n          __vfsPostOpenCallback[pVfs] = callback;\n        };\n\n        dbCtorHelper.normalizeArgs = function (\n          filename = ':memory:',\n          flags = 'c',\n          vfs = null,\n        ) {\n          const arg = {};\n          if (\n            1 === arguments.length &&\n            arguments[0] &&\n            'object' === typeof arguments[0]\n          ) {\n            Object.assign(arg, arguments[0]);\n            if (undefined === arg.flags) arg.flags = 'c';\n            if (undefined === arg.vfs) arg.vfs = null;\n            if (undefined === arg.filename) arg.filename = ':memory:';\n          } else {\n            arg.filename = filename;\n            arg.flags = flags;\n            arg.vfs = vfs;\n          }\n          return arg;\n        };\n\n        const DB = function (...args) {\n          dbCtorHelper.apply(this, args);\n        };\n        DB.dbCtorHelper = dbCtorHelper;\n\n        const BindTypes = {\n          null: 1,\n          number: 2,\n          string: 3,\n          boolean: 4,\n          blob: 5,\n        };\n        BindTypes['undefined'] == BindTypes.null;\n        if (wasm.bigIntEnabled) {\n          BindTypes.bigint = BindTypes.number;\n        }\n\n        const Stmt = function () {\n          if (BindTypes !== arguments[2]) {\n            toss3(\n              capi.SQLITE_MISUSE,\n              'Do not call the Stmt constructor directly. Use DB.prepare().',\n            );\n          }\n          this.db = arguments[0];\n          __ptrMap.set(this, arguments[1]);\n          this.parameterCount = capi.sqlite3_bind_parameter_count(this.pointer);\n        };\n\n        const affirmDbOpen = function (db) {\n          if (!db.pointer) toss3('DB has been closed.');\n          return db;\n        };\n\n        const affirmColIndex = function (stmt, ndx) {\n          if (ndx !== (ndx | 0) || ndx < 0 || ndx >= stmt.columnCount) {\n            toss3('Column index', ndx, 'is out of range.');\n          }\n          return stmt;\n        };\n\n        const parseExecArgs = function (db, args) {\n          const out = Object.create(null);\n          out.opt = Object.create(null);\n          switch (args.length) {\n            case 1:\n              if (\n                'string' === typeof args[0] ||\n                util.isSQLableTypedArray(args[0])\n              ) {\n                out.sql = args[0];\n              } else if (Array.isArray(args[0])) {\n                out.sql = args[0];\n              } else if (args[0] && 'object' === typeof args[0]) {\n                out.opt = args[0];\n                out.sql = out.opt.sql;\n              }\n              break;\n            case 2:\n              out.sql = args[0];\n              out.opt = args[1];\n              break;\n            default:\n              toss3('Invalid argument count for exec().');\n          }\n          out.sql = util.flexibleString(out.sql);\n          if ('string' !== typeof out.sql) {\n            toss3('Missing SQL argument or unsupported SQL value type.');\n          }\n          const opt = out.opt;\n          switch (opt.returnValue) {\n            case 'resultRows':\n              if (!opt.resultRows) opt.resultRows = [];\n              out.returnVal = () => opt.resultRows;\n              break;\n            case 'saveSql':\n              if (!opt.saveSql) opt.saveSql = [];\n              out.returnVal = () => opt.saveSql;\n              break;\n            case undefined:\n            case 'this':\n              out.returnVal = () => db;\n              break;\n            default:\n              toss3('Invalid returnValue value:', opt.returnValue);\n          }\n          if (!opt.callback && !opt.returnValue && undefined !== opt.rowMode) {\n            if (!opt.resultRows) opt.resultRows = [];\n            out.returnVal = () => opt.resultRows;\n          }\n          if (opt.callback || opt.resultRows) {\n            switch (undefined === opt.rowMode ? 'array' : opt.rowMode) {\n              case 'object':\n                out.cbArg = (stmt, cache) => {\n                  if (!cache.columnNames)\n                    cache.columnNames = stmt.getColumnNames([]);\n\n                  const row = stmt.get([]);\n                  const rv = Object.create(null);\n                  for (const i in cache.columnNames)\n                    rv[cache.columnNames[i]] = row[i];\n                  return rv;\n                };\n                break;\n              case 'array':\n                out.cbArg = (stmt) => stmt.get([]);\n                break;\n              case 'stmt':\n                if (Array.isArray(opt.resultRows)) {\n                  toss3(\n                    'exec(): invalid rowMode for a resultRows array: must',\n                    \"be one of 'array', 'object',\",\n                    'a result column number, or column name reference.',\n                  );\n                }\n                out.cbArg = (stmt) => stmt;\n                break;\n              default:\n                if (util.isInt32(opt.rowMode)) {\n                  out.cbArg = (stmt) => stmt.get(opt.rowMode);\n                  break;\n                } else if (\n                  'string' === typeof opt.rowMode &&\n                  opt.rowMode.length > 1 &&\n                  '$' === opt.rowMode[0]\n                ) {\n                  const $colName = opt.rowMode.substr(1);\n                  out.cbArg = (stmt) => {\n                    const rc = stmt.get(Object.create(null))[$colName];\n                    return undefined === rc\n                      ? toss3(\n                          capi.SQLITE_NOTFOUND,\n                          'exec(): unknown result column:',\n                          $colName,\n                        )\n                      : rc;\n                  };\n                  break;\n                }\n                toss3('Invalid rowMode:', opt.rowMode);\n            }\n          }\n          return out;\n        };\n\n        const __selectFirstRow = (db, sql, bind, ...getArgs) => {\n          const stmt = db.prepare(sql);\n          try {\n            const rc = stmt.bind(bind).step()\n              ? stmt.get(...getArgs)\n              : undefined;\n            stmt.reset();\n            return rc;\n          } finally {\n            stmt.finalize();\n          }\n        };\n\n        const __selectAll = (db, sql, bind, rowMode) =>\n          db.exec({\n            sql,\n            bind,\n            rowMode,\n            returnValue: 'resultRows',\n          });\n\n        DB.checkRc = (db, resultCode) => checkSqlite3Rc(db, resultCode);\n\n        DB.prototype = {\n          isOpen: function () {\n            return !!this.pointer;\n          },\n\n          affirmOpen: function () {\n            return affirmDbOpen(this);\n          },\n\n          close: function () {\n            if (this.pointer) {\n              if (this.onclose && this.onclose.before instanceof Function) {\n                try {\n                  this.onclose.before(this);\n                } catch (e) {}\n              }\n              const pDb = this.pointer;\n              Object.keys(__stmtMap.get(this)).forEach((k, s) => {\n                if (s && s.pointer) {\n                  try {\n                    s.finalize();\n                  } catch (e) {}\n                }\n              });\n              __ptrMap.delete(this);\n              __stmtMap.delete(this);\n              capi.sqlite3_close_v2(pDb);\n              if (this.onclose && this.onclose.after instanceof Function) {\n                try {\n                  this.onclose.after(this);\n                } catch (e) {}\n              }\n              delete this.filename;\n            }\n          },\n\n          changes: function (total = false, sixtyFour = false) {\n            const p = affirmDbOpen(this).pointer;\n            if (total) {\n              return sixtyFour\n                ? capi.sqlite3_total_changes64(p)\n                : capi.sqlite3_total_changes(p);\n            } else {\n              return sixtyFour\n                ? capi.sqlite3_changes64(p)\n                : capi.sqlite3_changes(p);\n            }\n          },\n\n          dbFilename: function (dbName = 'main') {\n            return capi.sqlite3_db_filename(affirmDbOpen(this).pointer, dbName);\n          },\n\n          dbName: function (dbNumber = 0) {\n            return capi.sqlite3_db_name(affirmDbOpen(this).pointer, dbNumber);\n          },\n\n          dbVfsName: function (dbName = 0) {\n            let rc;\n            const pVfs = capi.sqlite3_js_db_vfs(\n              affirmDbOpen(this).pointer,\n              dbName,\n            );\n            if (pVfs) {\n              const v = new capi.sqlite3_vfs(pVfs);\n              try {\n                rc = wasm.cstrToJs(v.$zName);\n              } finally {\n                v.dispose();\n              }\n            }\n            return rc;\n          },\n\n          prepare: function (sql) {\n            affirmDbOpen(this);\n            const stack = wasm.pstack.pointer;\n            let ppStmt, pStmt;\n            try {\n              ppStmt = wasm.pstack.alloc(8);\n              DB.checkRc(\n                this,\n                capi.sqlite3_prepare_v2(this.pointer, sql, -1, ppStmt, null),\n              );\n              pStmt = wasm.peekPtr(ppStmt);\n            } finally {\n              wasm.pstack.restore(stack);\n            }\n            if (!pStmt) toss3('Cannot prepare empty SQL.');\n            const stmt = new Stmt(this, pStmt, BindTypes);\n            __stmtMap.get(this)[pStmt] = stmt;\n            return stmt;\n          },\n\n          exec: function () {\n            affirmDbOpen(this);\n            const arg = parseExecArgs(this, arguments);\n            if (!arg.sql) {\n              return toss3('exec() requires an SQL string.');\n            }\n            const opt = arg.opt;\n            const callback = opt.callback;\n            const resultRows = Array.isArray(opt.resultRows)\n              ? opt.resultRows\n              : undefined;\n            let stmt;\n            let bind = opt.bind;\n            let evalFirstResult = !!(\n              arg.cbArg ||\n              opt.columnNames ||\n              resultRows\n            );\n            const stack = wasm.scopedAllocPush();\n            const saveSql = Array.isArray(opt.saveSql)\n              ? opt.saveSql\n              : undefined;\n            try {\n              const isTA = util.isSQLableTypedArray(arg.sql);\n              let sqlByteLen = isTA\n                ? arg.sql.byteLength\n                : wasm.jstrlen(arg.sql);\n              const ppStmt = wasm.scopedAlloc(\n                2 * wasm.ptrSizeof + (sqlByteLen + 1),\n              );\n              const pzTail = ppStmt + wasm.ptrSizeof;\n              let pSql = pzTail + wasm.ptrSizeof;\n              const pSqlEnd = pSql + sqlByteLen;\n              if (isTA) wasm.heap8().set(arg.sql, pSql);\n              else wasm.jstrcpy(arg.sql, wasm.heap8(), pSql, sqlByteLen, false);\n              wasm.poke(pSql + sqlByteLen, 0);\n              while (pSql && wasm.peek(pSql, 'i8')) {\n                wasm.pokePtr([ppStmt, pzTail], 0);\n                DB.checkRc(\n                  this,\n                  capi.sqlite3_prepare_v3(\n                    this.pointer,\n                    pSql,\n                    sqlByteLen,\n                    0,\n                    ppStmt,\n                    pzTail,\n                  ),\n                );\n                const pStmt = wasm.peekPtr(ppStmt);\n                pSql = wasm.peekPtr(pzTail);\n                sqlByteLen = pSqlEnd - pSql;\n                if (!pStmt) continue;\n                if (saveSql) saveSql.push(capi.sqlite3_sql(pStmt).trim());\n                stmt = new Stmt(this, pStmt, BindTypes);\n                if (bind && stmt.parameterCount) {\n                  stmt.bind(bind);\n                  bind = null;\n                }\n                if (evalFirstResult && stmt.columnCount) {\n                  let gotColNames = Array.isArray(opt.columnNames) ? 0 : 1;\n                  evalFirstResult = false;\n                  if (arg.cbArg || resultRows) {\n                    const cbArgCache = Object.create(null);\n                    for (; stmt.step(); stmt._lockedByExec = false) {\n                      if (0 === gotColNames++) {\n                        stmt.getColumnNames(\n                          (cbArgCache.columnNames = opt.columnNames || []),\n                        );\n                      }\n                      stmt._lockedByExec = true;\n                      const row = arg.cbArg(stmt, cbArgCache);\n                      if (resultRows) resultRows.push(row);\n                      if (callback && false === callback.call(opt, row, stmt)) {\n                        break;\n                      }\n                    }\n                    stmt._lockedByExec = false;\n                  }\n                  if (0 === gotColNames) {\n                    stmt.getColumnNames(opt.columnNames);\n                  }\n                } else {\n                  stmt.step();\n                }\n                stmt.reset().finalize();\n                stmt = null;\n              }\n            } finally {\n              wasm.scopedAllocPop(stack);\n              if (stmt) {\n                delete stmt._lockedByExec;\n                stmt.finalize();\n              }\n            }\n            return arg.returnVal();\n          },\n\n          createFunction: function f(name, xFunc, opt) {\n            const isFunc = (f) => f instanceof Function;\n            switch (arguments.length) {\n              case 1:\n                opt = name;\n                name = opt.name;\n                xFunc = opt.xFunc || 0;\n                break;\n              case 2:\n                if (!isFunc(xFunc)) {\n                  opt = xFunc;\n                  xFunc = opt.xFunc || 0;\n                }\n                break;\n              case 3:\n                break;\n              default:\n                break;\n            }\n            if (!opt) opt = {};\n            if ('string' !== typeof name) {\n              toss3('Invalid arguments: missing function name.');\n            }\n            let xStep = opt.xStep || 0;\n            let xFinal = opt.xFinal || 0;\n            const xValue = opt.xValue || 0;\n            const xInverse = opt.xInverse || 0;\n            let isWindow = undefined;\n            if (isFunc(xFunc)) {\n              isWindow = false;\n              if (isFunc(xStep) || isFunc(xFinal)) {\n                toss3('Ambiguous arguments: scalar or aggregate?');\n              }\n              xStep = xFinal = null;\n            } else if (isFunc(xStep)) {\n              if (!isFunc(xFinal)) {\n                toss3('Missing xFinal() callback for aggregate or window UDF.');\n              }\n              xFunc = null;\n            } else if (isFunc(xFinal)) {\n              toss3('Missing xStep() callback for aggregate or window UDF.');\n            } else {\n              toss3('Missing function-type properties.');\n            }\n            if (false === isWindow) {\n              if (isFunc(xValue) || isFunc(xInverse)) {\n                toss3(\n                  'xValue and xInverse are not permitted for non-window UDFs.',\n                );\n              }\n            } else if (isFunc(xValue)) {\n              if (!isFunc(xInverse)) {\n                toss3('xInverse must be provided if xValue is.');\n              }\n              isWindow = true;\n            } else if (isFunc(xInverse)) {\n              toss3('xValue must be provided if xInverse is.');\n            }\n            const pApp = opt.pApp;\n            if (\n              undefined !== pApp &&\n              null !== pApp &&\n              ('number' !== typeof pApp || !util.isInt32(pApp))\n            ) {\n              toss3(\n                'Invalid value for pApp property. Must be a legal WASM pointer value.',\n              );\n            }\n            const xDestroy = opt.xDestroy || 0;\n            if (xDestroy && !isFunc(xDestroy)) {\n              toss3('xDestroy property must be a function.');\n            }\n            let fFlags = 0;\n            if (getOwnOption(opt, 'deterministic'))\n              fFlags |= capi.SQLITE_DETERMINISTIC;\n            if (getOwnOption(opt, 'directOnly'))\n              fFlags |= capi.SQLITE_DIRECTONLY;\n            if (getOwnOption(opt, 'innocuous')) fFlags |= capi.SQLITE_INNOCUOUS;\n            name = name.toLowerCase();\n            const xArity = xFunc || xStep;\n            const arity = getOwnOption(opt, 'arity');\n            const arityArg =\n              'number' === typeof arity\n                ? arity\n                : xArity.length\n                  ? xArity.length - 1\n                  : 0;\n            let rc;\n            if (isWindow) {\n              rc = capi.sqlite3_create_window_function(\n                this.pointer,\n                name,\n                arityArg,\n                capi.SQLITE_UTF8 | fFlags,\n                pApp || 0,\n                xStep,\n                xFinal,\n                xValue,\n                xInverse,\n                xDestroy,\n              );\n            } else {\n              rc = capi.sqlite3_create_function_v2(\n                this.pointer,\n                name,\n                arityArg,\n                capi.SQLITE_UTF8 | fFlags,\n                pApp || 0,\n                xFunc,\n                xStep,\n                xFinal,\n                xDestroy,\n              );\n            }\n            DB.checkRc(this, rc);\n            return this;\n          },\n\n          selectValue: function (sql, bind, asType) {\n            return __selectFirstRow(this, sql, bind, 0, asType);\n          },\n\n          selectValues: function (sql, bind, asType) {\n            const stmt = this.prepare(sql),\n              rc = [];\n            try {\n              stmt.bind(bind);\n              while (stmt.step()) rc.push(stmt.get(0, asType));\n              stmt.reset();\n            } finally {\n              stmt.finalize();\n            }\n            return rc;\n          },\n\n          selectArray: function (sql, bind) {\n            return __selectFirstRow(this, sql, bind, []);\n          },\n\n          selectObject: function (sql, bind) {\n            return __selectFirstRow(this, sql, bind, {});\n          },\n\n          selectArrays: function (sql, bind) {\n            return __selectAll(this, sql, bind, 'array');\n          },\n\n          selectObjects: function (sql, bind) {\n            return __selectAll(this, sql, bind, 'object');\n          },\n\n          openStatementCount: function () {\n            return this.pointer ? Object.keys(__stmtMap.get(this)).length : 0;\n          },\n\n          transaction: function (callback) {\n            let opener = 'BEGIN';\n            if (arguments.length > 1) {\n              if (/[^a-zA-Z]/.test(arguments[0])) {\n                toss3(\n                  capi.SQLITE_MISUSE,\n                  'Invalid argument for BEGIN qualifier.',\n                );\n              }\n              opener += ' ' + arguments[0];\n              callback = arguments[1];\n            }\n            affirmDbOpen(this).exec(opener);\n            try {\n              const rc = callback(this);\n              this.exec('COMMIT');\n              return rc;\n            } catch (e) {\n              this.exec('ROLLBACK');\n              throw e;\n            }\n          },\n\n          savepoint: function (callback) {\n            affirmDbOpen(this).exec('SAVEPOINT oo1');\n            try {\n              const rc = callback(this);\n              this.exec('RELEASE oo1');\n              return rc;\n            } catch (e) {\n              this.exec('ROLLBACK to SAVEPOINT oo1; RELEASE SAVEPOINT oo1');\n              throw e;\n            }\n          },\n\n          checkRc: function (resultCode) {\n            return checkSqlite3Rc(this, resultCode);\n          },\n        };\n\n        const affirmStmtOpen = function (stmt) {\n          if (!stmt.pointer) toss3('Stmt has been closed.');\n          return stmt;\n        };\n\n        const isSupportedBindType = function (v) {\n          let t = BindTypes[null === v || undefined === v ? 'null' : typeof v];\n          switch (t) {\n            case BindTypes.boolean:\n            case BindTypes.null:\n            case BindTypes.number:\n            case BindTypes.string:\n              return t;\n            case BindTypes.bigint:\n              if (wasm.bigIntEnabled) return t;\n\n            default:\n              return util.isBindableTypedArray(v) ? BindTypes.blob : undefined;\n          }\n        };\n\n        const affirmSupportedBindType = function (v) {\n          return (\n            isSupportedBindType(v) ||\n            toss3('Unsupported bind() argument type:', typeof v)\n          );\n        };\n\n        const affirmParamIndex = function (stmt, key) {\n          const n =\n            'number' === typeof key\n              ? key\n              : capi.sqlite3_bind_parameter_index(stmt.pointer, key);\n          if (0 === n || !util.isInt32(n)) {\n            toss3('Invalid bind() parameter name: ' + key);\n          } else if (n < 1 || n > stmt.parameterCount)\n            toss3('Bind index', key, 'is out of range.');\n          return n;\n        };\n\n        const affirmNotLockedByExec = function (stmt, currentOpName) {\n          if (stmt._lockedByExec) {\n            toss3(\n              'Operation is illegal when statement is locked:',\n              currentOpName,\n            );\n          }\n          return stmt;\n        };\n\n        const bindOne = function f(stmt, ndx, bindType, val) {\n          affirmNotLockedByExec(affirmStmtOpen(stmt), 'bind()');\n          if (!f._) {\n            f._tooBigInt = (v) =>\n              toss3(\n                'BigInt value is too big to store without precision loss:',\n                v,\n              );\n            f._ = {\n              string: function (stmt, ndx, val, asBlob) {\n                const [pStr, n] = wasm.allocCString(val, true);\n                const f = asBlob\n                  ? capi.sqlite3_bind_blob\n                  : capi.sqlite3_bind_text;\n                return f(stmt.pointer, ndx, pStr, n, capi.SQLITE_WASM_DEALLOC);\n              },\n            };\n          }\n          affirmSupportedBindType(val);\n          ndx = affirmParamIndex(stmt, ndx);\n          let rc = 0;\n          switch (\n            null === val || undefined === val ? BindTypes.null : bindType\n          ) {\n            case BindTypes.null:\n              rc = capi.sqlite3_bind_null(stmt.pointer, ndx);\n              break;\n            case BindTypes.string:\n              rc = f._.string(stmt, ndx, val, false);\n              break;\n            case BindTypes.number: {\n              let m;\n              if (util.isInt32(val)) m = capi.sqlite3_bind_int;\n              else if ('bigint' === typeof val) {\n                if (!util.bigIntFits64(val)) {\n                  f._tooBigInt(val);\n                } else if (wasm.bigIntEnabled) {\n                  m = capi.sqlite3_bind_int64;\n                } else if (util.bigIntFitsDouble(val)) {\n                  val = Number(val);\n                  m = capi.sqlite3_bind_double;\n                } else {\n                  f._tooBigInt(val);\n                }\n              } else {\n                val = Number(val);\n                if (wasm.bigIntEnabled && Number.isInteger(val)) {\n                  m = capi.sqlite3_bind_int64;\n                } else {\n                  m = capi.sqlite3_bind_double;\n                }\n              }\n              rc = m(stmt.pointer, ndx, val);\n              break;\n            }\n            case BindTypes.boolean:\n              rc = capi.sqlite3_bind_int(stmt.pointer, ndx, val ? 1 : 0);\n              break;\n            case BindTypes.blob: {\n              if ('string' === typeof val) {\n                rc = f._.string(stmt, ndx, val, true);\n                break;\n              } else if (val instanceof ArrayBuffer) {\n                val = new Uint8Array(val);\n              } else if (!util.isBindableTypedArray(val)) {\n                toss3(\n                  'Binding a value as a blob requires',\n                  'that it be a string, Uint8Array, Int8Array, or ArrayBuffer.',\n                );\n              }\n              const pBlob = wasm.alloc(val.byteLength || 1);\n              wasm.heap8().set(val.byteLength ? val : [0], pBlob);\n              rc = capi.sqlite3_bind_blob(\n                stmt.pointer,\n                ndx,\n                pBlob,\n                val.byteLength,\n                capi.SQLITE_WASM_DEALLOC,\n              );\n              break;\n            }\n            default:\n              sqlite3.config.warn('Unsupported bind() argument type:', val);\n              toss3('Unsupported bind() argument type: ' + typeof val);\n          }\n          if (rc) DB.checkRc(stmt.db.pointer, rc);\n          stmt._mayGet = false;\n          return stmt;\n        };\n\n        Stmt.prototype = {\n          finalize: function () {\n            if (this.pointer) {\n              affirmNotLockedByExec(this, 'finalize()');\n              const rc = capi.sqlite3_finalize(this.pointer);\n              delete __stmtMap.get(this.db)[this.pointer];\n              __ptrMap.delete(this);\n              delete this._mayGet;\n              delete this.parameterCount;\n              delete this._lockedByExec;\n              delete this.db;\n              return rc;\n            }\n          },\n\n          clearBindings: function () {\n            affirmNotLockedByExec(affirmStmtOpen(this), 'clearBindings()');\n            capi.sqlite3_clear_bindings(this.pointer);\n            this._mayGet = false;\n            return this;\n          },\n\n          reset: function (alsoClearBinds) {\n            affirmNotLockedByExec(this, 'reset()');\n            if (alsoClearBinds) this.clearBindings();\n            const rc = capi.sqlite3_reset(affirmStmtOpen(this).pointer);\n            this._mayGet = false;\n            checkSqlite3Rc(this.db, rc);\n            return this;\n          },\n\n          bind: function () {\n            affirmStmtOpen(this);\n            let ndx, arg;\n            switch (arguments.length) {\n              case 1:\n                ndx = 1;\n                arg = arguments[0];\n                break;\n              case 2:\n                ndx = arguments[0];\n                arg = arguments[1];\n                break;\n              default:\n                toss3('Invalid bind() arguments.');\n            }\n            if (undefined === arg) {\n              return this;\n            } else if (!this.parameterCount) {\n              toss3('This statement has no bindable parameters.');\n            }\n            this._mayGet = false;\n            if (null === arg) {\n              return bindOne(this, ndx, BindTypes.null, arg);\n            } else if (Array.isArray(arg)) {\n              if (1 !== arguments.length) {\n                toss3(\n                  'When binding an array, an index argument is not permitted.',\n                );\n              }\n              arg.forEach((v, i) =>\n                bindOne(this, i + 1, affirmSupportedBindType(v), v),\n              );\n              return this;\n            } else if (arg instanceof ArrayBuffer) {\n              arg = new Uint8Array(arg);\n            }\n            if ('object' === typeof arg && !util.isBindableTypedArray(arg)) {\n              if (1 !== arguments.length) {\n                toss3(\n                  'When binding an object, an index argument is not permitted.',\n                );\n              }\n              Object.keys(arg).forEach((k) =>\n                bindOne(this, k, affirmSupportedBindType(arg[k]), arg[k]),\n              );\n              return this;\n            } else {\n              return bindOne(this, ndx, affirmSupportedBindType(arg), arg);\n            }\n            toss3('Should not reach this point.');\n          },\n\n          bindAsBlob: function (ndx, arg) {\n            affirmStmtOpen(this);\n            if (1 === arguments.length) {\n              arg = ndx;\n              ndx = 1;\n            }\n            const t = affirmSupportedBindType(arg);\n            if (\n              BindTypes.string !== t &&\n              BindTypes.blob !== t &&\n              BindTypes.null !== t\n            ) {\n              toss3('Invalid value type for bindAsBlob()');\n            }\n            return bindOne(this, ndx, BindTypes.blob, arg);\n          },\n\n          step: function () {\n            affirmNotLockedByExec(this, 'step()');\n            const rc = capi.sqlite3_step(affirmStmtOpen(this).pointer);\n            switch (rc) {\n              case capi.SQLITE_DONE:\n                return (this._mayGet = false);\n              case capi.SQLITE_ROW:\n                return (this._mayGet = true);\n              default:\n                this._mayGet = false;\n                sqlite3.config.warn(\n                  'sqlite3_step() rc=',\n                  rc,\n                  capi.sqlite3_js_rc_str(rc),\n                  'SQL =',\n                  capi.sqlite3_sql(this.pointer),\n                );\n                DB.checkRc(this.db.pointer, rc);\n            }\n          },\n\n          stepReset: function () {\n            this.step();\n            return this.reset();\n          },\n\n          stepFinalize: function () {\n            try {\n              const rc = this.step();\n              this.reset();\n              return rc;\n            } finally {\n              try {\n                this.finalize();\n              } catch (e) {}\n            }\n          },\n\n          get: function (ndx, asType) {\n            if (!affirmStmtOpen(this)._mayGet) {\n              toss3('Stmt.step() has not (recently) returned true.');\n            }\n            if (Array.isArray(ndx)) {\n              let i = 0;\n              const n = this.columnCount;\n              while (i < n) {\n                ndx[i] = this.get(i++);\n              }\n              return ndx;\n            } else if (ndx && 'object' === typeof ndx) {\n              let i = 0;\n              const n = this.columnCount;\n              while (i < n) {\n                ndx[capi.sqlite3_column_name(this.pointer, i)] = this.get(i++);\n              }\n              return ndx;\n            }\n            affirmColIndex(this, ndx);\n            switch (\n              undefined === asType\n                ? capi.sqlite3_column_type(this.pointer, ndx)\n                : asType\n            ) {\n              case capi.SQLITE_NULL:\n                return null;\n              case capi.SQLITE_INTEGER: {\n                if (wasm.bigIntEnabled) {\n                  const rc = capi.sqlite3_column_int64(this.pointer, ndx);\n                  if (\n                    rc >= Number.MIN_SAFE_INTEGER &&\n                    rc <= Number.MAX_SAFE_INTEGER\n                  ) {\n                    return Number(rc).valueOf();\n                  }\n                  return rc;\n                } else {\n                  const rc = capi.sqlite3_column_double(this.pointer, ndx);\n                  if (\n                    rc > Number.MAX_SAFE_INTEGER ||\n                    rc < Number.MIN_SAFE_INTEGER\n                  ) {\n                    toss3(\n                      'Integer is out of range for JS integer range: ' + rc,\n                    );\n                  }\n\n                  return util.isInt32(rc) ? rc | 0 : rc;\n                }\n              }\n              case capi.SQLITE_FLOAT:\n                return capi.sqlite3_column_double(this.pointer, ndx);\n              case capi.SQLITE_TEXT:\n                return capi.sqlite3_column_text(this.pointer, ndx);\n              case capi.SQLITE_BLOB: {\n                const n = capi.sqlite3_column_bytes(this.pointer, ndx),\n                  ptr = capi.sqlite3_column_blob(this.pointer, ndx),\n                  rc = new Uint8Array(n);\n\n                if (n) rc.set(wasm.heap8u().slice(ptr, ptr + n), 0);\n\n                if (n && this.db._blobXfer instanceof Array) {\n                  this.db._blobXfer.push(rc.buffer);\n                }\n                return rc;\n              }\n              default:\n                toss3(\n                  \"Don't know how to translate\",\n                  'type of result column #' + ndx + '.',\n                );\n            }\n            toss3('Not reached.');\n          },\n\n          getInt: function (ndx) {\n            return this.get(ndx, capi.SQLITE_INTEGER);\n          },\n\n          getFloat: function (ndx) {\n            return this.get(ndx, capi.SQLITE_FLOAT);\n          },\n\n          getString: function (ndx) {\n            return this.get(ndx, capi.SQLITE_TEXT);\n          },\n\n          getBlob: function (ndx) {\n            return this.get(ndx, capi.SQLITE_BLOB);\n          },\n\n          getJSON: function (ndx) {\n            const s = this.get(ndx, capi.SQLITE_STRING);\n            return null === s ? s : JSON.parse(s);\n          },\n\n          getColumnName: function (ndx) {\n            return capi.sqlite3_column_name(\n              affirmColIndex(affirmStmtOpen(this), ndx).pointer,\n              ndx,\n            );\n          },\n\n          getColumnNames: function (tgt = []) {\n            affirmColIndex(affirmStmtOpen(this), 0);\n            const n = this.columnCount;\n            for (let i = 0; i < n; ++i) {\n              tgt.push(capi.sqlite3_column_name(this.pointer, i));\n            }\n            return tgt;\n          },\n\n          getParamIndex: function (name) {\n            return affirmStmtOpen(this).parameterCount\n              ? capi.sqlite3_bind_parameter_index(this.pointer, name)\n              : undefined;\n          },\n\n          getParamName: function (ndx) {\n            return affirmStmtOpen(this).parameterCount\n              ? capi.sqlite3_bind_parameter_name(this.pointer, ndx)\n              : undefined;\n          },\n\n          isBusy: function () {\n            return 0 !== capi.sqlite3_stmt_busy(affirmStmtOpen(this));\n          },\n\n          isReadOnly: function () {\n            return 0 !== capi.sqlite3_stmt_readonly(affirmStmtOpen(this));\n          },\n        };\n\n        {\n          const prop = {\n            enumerable: true,\n            get: function () {\n              return __ptrMap.get(this);\n            },\n            set: () => toss3('The pointer property is read-only.'),\n          };\n          Object.defineProperty(Stmt.prototype, 'pointer', prop);\n          Object.defineProperty(DB.prototype, 'pointer', prop);\n        }\n\n        Object.defineProperty(Stmt.prototype, 'columnCount', {\n          enumerable: false,\n          get: function () {\n            return capi.sqlite3_column_count(this.pointer);\n          },\n          set: () => toss3('The columnCount property is read-only.'),\n        });\n\n        sqlite3.oo1 = {\n          DB,\n          Stmt,\n        };\n\n        if (util.isUIThread()) {\n          sqlite3.oo1.JsStorageDb = function (storageName = 'session') {\n            const opt = dbCtorHelper.normalizeArgs(...arguments);\n            storageName = opt.filename;\n            if ('session' !== storageName && 'local' !== storageName) {\n              toss3(\"JsStorageDb db name must be one of 'session' or 'local'.\");\n            }\n            opt.vfs = 'kvvfs';\n            dbCtorHelper.call(this, opt);\n          };\n          const jdb = sqlite3.oo1.JsStorageDb;\n          jdb.prototype = Object.create(DB.prototype);\n\n          jdb.clearStorage = capi.sqlite3_js_kvvfs_clear;\n\n          jdb.prototype.clearStorage = function () {\n            return jdb.clearStorage(affirmDbOpen(this).filename);\n          };\n\n          jdb.storageSize = capi.sqlite3_js_kvvfs_size;\n\n          jdb.prototype.storageSize = function () {\n            return jdb.storageSize(affirmDbOpen(this).filename);\n          };\n        }\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const util = sqlite3.util;\n        sqlite3.initWorker1API = function () {\n          'use strict';\n          const toss = (...args) => {\n            throw new Error(args.join(' '));\n          };\n          if (!(globalThis.WorkerGlobalScope instanceof Function)) {\n            toss('initWorker1API() must be run from a Worker thread.');\n          }\n          const sqlite3 = this.sqlite3 || toss('Missing this.sqlite3 object.');\n          const DB = sqlite3.oo1.DB;\n\n          const getDbId = function (db) {\n            let id = wState.idMap.get(db);\n            if (id) return id;\n            id = 'db#' + ++wState.idSeq + '@' + db.pointer;\n\n            wState.idMap.set(db, id);\n            return id;\n          };\n\n          const wState = {\n            dbList: [],\n\n            idSeq: 0,\n\n            idMap: new WeakMap(),\n\n            xfer: [],\n            open: function (opt) {\n              const db = new DB(opt);\n              this.dbs[getDbId(db)] = db;\n              if (this.dbList.indexOf(db) < 0) this.dbList.push(db);\n              return db;\n            },\n            close: function (db, alsoUnlink) {\n              if (db) {\n                delete this.dbs[getDbId(db)];\n                const filename = db.filename;\n                const pVfs = util.sqlite3__wasm_db_vfs(db.pointer, 0);\n                db.close();\n                const ddNdx = this.dbList.indexOf(db);\n                if (ddNdx >= 0) this.dbList.splice(ddNdx, 1);\n                if (alsoUnlink && filename && pVfs) {\n                  util.sqlite3__wasm_vfs_unlink(pVfs, filename);\n                }\n              }\n            },\n\n            post: function (msg, xferList) {\n              if (xferList && xferList.length) {\n                globalThis.postMessage(msg, Array.from(xferList));\n                xferList.length = 0;\n              } else {\n                globalThis.postMessage(msg);\n              }\n            },\n\n            dbs: Object.create(null),\n\n            getDb: function (id, require = true) {\n              return (\n                this.dbs[id] ||\n                (require ? toss('Unknown (or closed) DB ID:', id) : undefined)\n              );\n            },\n          };\n\n          const affirmDbOpen = function (db = wState.dbList[0]) {\n            return db && db.pointer ? db : toss('DB is not opened.');\n          };\n\n          const getMsgDb = function (msgData, affirmExists = true) {\n            const db = wState.getDb(msgData.dbId, false) || wState.dbList[0];\n            return affirmExists ? affirmDbOpen(db) : db;\n          };\n\n          const getDefaultDbId = function () {\n            return wState.dbList[0] && getDbId(wState.dbList[0]);\n          };\n\n          const isSpecialDbFilename = (n) => {\n            return '' === n || ':' === n[0];\n          };\n\n          const wMsgHandler = {\n            open: function (ev) {\n              const oargs = Object.create(null),\n                args = ev.args || Object.create(null);\n              if (args.simulateError) {\n                toss('Throwing because of simulateError flag.');\n              }\n              const rc = Object.create(null);\n              oargs.vfs = args.vfs;\n              oargs.filename = args.filename || '';\n              const db = wState.open(oargs);\n              rc.filename = db.filename;\n              rc.persistent = !!sqlite3.capi.sqlite3_js_db_uses_vfs(\n                db.pointer,\n                'opfs',\n              );\n              rc.dbId = getDbId(db);\n              rc.vfs = db.dbVfsName();\n              return rc;\n            },\n\n            close: function (ev) {\n              const db = getMsgDb(ev, false);\n              const response = {\n                filename: db && db.filename,\n              };\n              if (db) {\n                const doUnlink =\n                  ev.args && 'object' === typeof ev.args\n                    ? !!ev.args.unlink\n                    : false;\n                wState.close(db, doUnlink);\n              }\n              return response;\n            },\n\n            exec: function (ev) {\n              const rc =\n                'string' === typeof ev.args\n                  ? { sql: ev.args }\n                  : ev.args || Object.create(null);\n              if ('stmt' === rc.rowMode) {\n                toss(\n                  \"Invalid rowMode for 'exec': stmt mode\",\n                  'does not work in the Worker API.',\n                );\n              } else if (!rc.sql) {\n                toss(\"'exec' requires input SQL.\");\n              }\n              const db = getMsgDb(ev);\n              if (rc.callback || Array.isArray(rc.resultRows)) {\n                db._blobXfer = wState.xfer;\n              }\n              const theCallback = rc.callback;\n              let rowNumber = 0;\n              const hadColNames = !!rc.columnNames;\n              if ('string' === typeof theCallback) {\n                if (!hadColNames) rc.columnNames = [];\n\n                rc.callback = function (row, stmt) {\n                  wState.post(\n                    {\n                      type: theCallback,\n                      columnNames: rc.columnNames,\n                      rowNumber: ++rowNumber,\n                      row: row,\n                    },\n                    wState.xfer,\n                  );\n                };\n              }\n              try {\n                const changeCount = !!rc.countChanges\n                  ? db.changes(true, 64 === rc.countChanges)\n                  : undefined;\n                db.exec(rc);\n                if (undefined !== changeCount) {\n                  rc.changeCount =\n                    db.changes(true, 64 === rc.countChanges) - changeCount;\n                }\n                const lastInsertRowId = !!rc.lastInsertRowId\n                  ? sqlite3.capi.sqlite3_last_insert_rowid(db)\n                  : undefined;\n                if (undefined !== lastInsertRowId) {\n                  rc.lastInsertRowId = lastInsertRowId;\n                }\n                if (rc.callback instanceof Function) {\n                  rc.callback = theCallback;\n\n                  wState.post({\n                    type: theCallback,\n                    columnNames: rc.columnNames,\n                    rowNumber: null,\n                    row: undefined,\n                  });\n                }\n              } finally {\n                delete db._blobXfer;\n                if (rc.callback) rc.callback = theCallback;\n              }\n              return rc;\n            },\n\n            'config-get': function () {\n              const rc = Object.create(null),\n                src = sqlite3.config;\n              ['bigIntEnabled'].forEach(function (k) {\n                if (Object.getOwnPropertyDescriptor(src, k)) rc[k] = src[k];\n              });\n              rc.version = sqlite3.version;\n              rc.vfsList = sqlite3.capi.sqlite3_js_vfs_list();\n              return rc;\n            },\n\n            export: function (ev) {\n              const db = getMsgDb(ev);\n              const response = {\n                byteArray: sqlite3.capi.sqlite3_js_db_export(db.pointer),\n                filename: db.filename,\n                mimetype: 'application/x-sqlite3',\n              };\n              wState.xfer.push(response.byteArray.buffer);\n              return response;\n            },\n\n            toss: function (ev) {\n              toss('Testing worker exception');\n            },\n          };\n\n          globalThis.onmessage = async function (ev) {\n            ev = ev.data;\n            let result,\n              dbId = ev.dbId,\n              evType = ev.type;\n            const arrivalTime = performance.now();\n            try {\n              if (\n                wMsgHandler.hasOwnProperty(evType) &&\n                wMsgHandler[evType] instanceof Function\n              ) {\n                result = await wMsgHandler[evType](ev);\n              } else {\n                toss('Unknown db worker message type:', ev.type);\n              }\n            } catch (err) {\n              evType = 'error';\n              result = {\n                operation: ev.type,\n                message: err.message,\n                errorClass: err.name,\n                input: ev,\n              };\n              if (err.stack) {\n                result.stack =\n                  'string' === typeof err.stack\n                    ? err.stack.split(/\\n\\s*/)\n                    : err.stack;\n              }\n              if (0)\n                sqlite3.config.warn(\n                  'Worker is propagating an exception to main thread.',\n                  'Reporting it _here_ for the stack trace:',\n                  err,\n                  result,\n                );\n            }\n            if (!dbId) {\n              dbId = result.dbId || getDefaultDbId();\n            }\n\n            wState.post(\n              {\n                type: evType,\n                dbId: dbId,\n                messageId: ev.messageId,\n                workerReceivedTime: arrivalTime,\n                workerRespondTime: performance.now(),\n                departureTime: ev.departureTime,\n\n                result: result,\n              },\n              wState.xfer,\n            );\n          };\n          globalThis.postMessage({\n            type: 'sqlite3-api',\n            result: 'worker1-ready',\n          });\n        }.bind({ sqlite3 });\n      });\n\n      ('use strict');\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const wasm = sqlite3.wasm,\n          capi = sqlite3.capi,\n          toss = sqlite3.util.toss3;\n        const vfs = Object.create(null);\n        sqlite3.vfs = vfs;\n\n        capi.sqlite3_vfs.prototype.registerVfs = function (asDefault = false) {\n          if (!(this instanceof sqlite3.capi.sqlite3_vfs)) {\n            toss('Expecting a sqlite3_vfs-type argument.');\n          }\n          const rc = capi.sqlite3_vfs_register(this, asDefault ? 1 : 0);\n          if (rc) {\n            toss('sqlite3_vfs_register(', this, ') failed with rc', rc);\n          }\n          if (this.pointer !== capi.sqlite3_vfs_find(this.$zName)) {\n            toss(\n              'BUG: sqlite3_vfs_find(vfs.$zName) failed for just-installed VFS',\n              this,\n            );\n          }\n          return this;\n        };\n\n        vfs.installVfs = function (opt) {\n          let count = 0;\n          const propList = ['io', 'vfs'];\n          for (const key of propList) {\n            const o = opt[key];\n            if (o) {\n              ++count;\n              o.struct.installMethods(o.methods, !!o.applyArgcCheck);\n              if ('vfs' === key) {\n                if (!o.struct.$zName && 'string' === typeof o.name) {\n                  o.struct.addOnDispose(\n                    (o.struct.$zName = wasm.allocCString(o.name)),\n                  );\n                }\n                o.struct.registerVfs(!!o.asDefault);\n              }\n            }\n          }\n          if (!count)\n            toss(\n              'Misuse: installVfs() options object requires at least',\n              'one of:',\n              propList,\n            );\n          return this;\n        };\n      });\n\n      ('use strict');\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        if (!sqlite3.wasm.exports.sqlite3_declare_vtab) {\n          return;\n        }\n        const wasm = sqlite3.wasm,\n          capi = sqlite3.capi,\n          toss = sqlite3.util.toss3;\n        const vtab = Object.create(null);\n        sqlite3.vtab = vtab;\n\n        const sii = capi.sqlite3_index_info;\n\n        sii.prototype.nthConstraint = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nConstraint) return false;\n          const ptr =\n            this.$aConstraint +\n            sii.sqlite3_index_constraint.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_constraint(ptr);\n        };\n\n        sii.prototype.nthConstraintUsage = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nConstraint) return false;\n          const ptr =\n            this.$aConstraintUsage +\n            sii.sqlite3_index_constraint_usage.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_constraint_usage(ptr);\n        };\n\n        sii.prototype.nthOrderBy = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nOrderBy) return false;\n          const ptr =\n            this.$aOrderBy + sii.sqlite3_index_orderby.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_orderby(ptr);\n        };\n\n        const __xWrapFactory = function (methodName, StructType) {\n          return function (ptr, removeMapping = false) {\n            if (0 === arguments.length) ptr = new StructType();\n            if (ptr instanceof StructType) {\n              this.set(ptr.pointer, ptr);\n              return ptr;\n            } else if (!wasm.isPtr(ptr)) {\n              sqlite3.SQLite3Error.toss(\n                'Invalid argument to',\n                methodName + '()',\n              );\n            }\n            let rc = this.get(ptr);\n            if (removeMapping) this.delete(ptr);\n            return rc;\n          }.bind(new Map());\n        };\n\n        const StructPtrMapper = function (name, StructType) {\n          const __xWrap = __xWrapFactory(name, StructType);\n\n          return Object.assign(Object.create(null), {\n            StructType,\n\n            create: (ppOut) => {\n              const rc = __xWrap();\n              wasm.pokePtr(ppOut, rc.pointer);\n              return rc;\n            },\n\n            get: (pCObj) => __xWrap(pCObj),\n\n            unget: (pCObj) => __xWrap(pCObj, true),\n\n            dispose: (pCObj) => {\n              const o = __xWrap(pCObj, true);\n              if (o) o.dispose();\n            },\n          });\n        };\n\n        vtab.xVtab = StructPtrMapper('xVtab', capi.sqlite3_vtab);\n\n        vtab.xCursor = StructPtrMapper('xCursor', capi.sqlite3_vtab_cursor);\n\n        vtab.xIndexInfo = (pIdxInfo) => new capi.sqlite3_index_info(pIdxInfo);\n\n        vtab.xError = function f(methodName, err, defaultRc) {\n          if (f.errorReporter instanceof Function) {\n            try {\n              f.errorReporter(\n                'sqlite3_module::' + methodName + '(): ' + err.message,\n              );\n            } catch (e) {}\n          }\n          let rc;\n          if (err instanceof sqlite3.WasmAllocError) rc = capi.SQLITE_NOMEM;\n          else if (arguments.length > 2) rc = defaultRc;\n          else if (err instanceof sqlite3.SQLite3Error) rc = err.resultCode;\n          return rc || capi.SQLITE_ERROR;\n        };\n        vtab.xError.errorReporter = 1 ? console.error.bind(console) : false;\n\n        vtab.xRowid = (ppRowid64, value) => wasm.poke(ppRowid64, value, 'i64');\n\n        vtab.setupModule = function (opt) {\n          let createdMod = false;\n          const mod =\n            this instanceof capi.sqlite3_module\n              ? this\n              : opt.struct || (createdMod = new capi.sqlite3_module());\n          try {\n            const methods = opt.methods || toss(\"Missing 'methods' object.\");\n            for (const e of Object.entries({\n              xConnect: 'xCreate',\n              xDisconnect: 'xDestroy',\n            })) {\n              const k = e[0],\n                v = e[1];\n              if (true === methods[k]) methods[k] = methods[v];\n              else if (true === methods[v]) methods[v] = methods[k];\n            }\n            if (opt.catchExceptions) {\n              const fwrap = function (methodName, func) {\n                if (['xConnect', 'xCreate'].indexOf(methodName) >= 0) {\n                  return function (pDb, pAux, argc, argv, ppVtab, pzErr) {\n                    try {\n                      return func(...arguments) || 0;\n                    } catch (e) {\n                      if (!(e instanceof sqlite3.WasmAllocError)) {\n                        wasm.dealloc(wasm.peekPtr(pzErr));\n                        wasm.pokePtr(pzErr, wasm.allocCString(e.message));\n                      }\n                      return vtab.xError(methodName, e);\n                    }\n                  };\n                } else {\n                  return function (...args) {\n                    try {\n                      return func(...args) || 0;\n                    } catch (e) {\n                      return vtab.xError(methodName, e);\n                    }\n                  };\n                }\n              };\n              const mnames = [\n                'xCreate',\n                'xConnect',\n                'xBestIndex',\n                'xDisconnect',\n                'xDestroy',\n                'xOpen',\n                'xClose',\n                'xFilter',\n                'xNext',\n                'xEof',\n                'xColumn',\n                'xRowid',\n                'xUpdate',\n                'xBegin',\n                'xSync',\n                'xCommit',\n                'xRollback',\n                'xFindFunction',\n                'xRename',\n                'xSavepoint',\n                'xRelease',\n                'xRollbackTo',\n                'xShadowName',\n              ];\n              const remethods = Object.create(null);\n              for (const k of mnames) {\n                const m = methods[k];\n                if (!(m instanceof Function)) continue;\n                else if ('xConnect' === k && methods.xCreate === m) {\n                  remethods[k] = methods.xCreate;\n                } else if ('xCreate' === k && methods.xConnect === m) {\n                  remethods[k] = methods.xConnect;\n                } else {\n                  remethods[k] = fwrap(k, m);\n                }\n              }\n              mod.installMethods(remethods, false);\n            } else {\n              mod.installMethods(methods, !!opt.applyArgcCheck);\n            }\n            if (0 === mod.$iVersion) {\n              let v;\n              if ('number' === typeof opt.iVersion) v = opt.iVersion;\n              else if (mod.$xShadowName) v = 3;\n              else if (mod.$xSavePoint || mod.$xRelease || mod.$xRollbackTo)\n                v = 2;\n              else v = 1;\n              mod.$iVersion = v;\n            }\n          } catch (e) {\n            if (createdMod) createdMod.dispose();\n            throw e;\n          }\n          return mod;\n        };\n\n        capi.sqlite3_module.prototype.setupModule = function (opt) {\n          return vtab.setupModule.call(this, opt);\n        };\n      });\n\n      ('use strict');\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const installOpfsVfs = function callee(options) {\n          if (!globalThis.SharedArrayBuffer || !globalThis.Atomics) {\n            return Promise.reject(\n              new Error(\n                'Cannot install OPFS: Missing SharedArrayBuffer and/or Atomics. ' +\n                  'The server must emit the COOP/COEP response headers to enable those. ' +\n                  'See https://sqlite.org/wasm/doc/trunk/persistence.md#coop-coep',\n              ),\n            );\n          } else if ('undefined' === typeof WorkerGlobalScope) {\n            return Promise.reject(\n              new Error(\n                'The OPFS sqlite3_vfs cannot run in the main thread ' +\n                  'because it requires Atomics.wait().',\n              ),\n            );\n          } else if (\n            !globalThis.FileSystemHandle ||\n            !globalThis.FileSystemDirectoryHandle ||\n            !globalThis.FileSystemFileHandle ||\n            !globalThis.FileSystemFileHandle.prototype.createSyncAccessHandle ||\n            !navigator?.storage?.getDirectory\n          ) {\n            return Promise.reject(new Error('Missing required OPFS APIs.'));\n          }\n          if (!options || 'object' !== typeof options) {\n            options = Object.create(null);\n          }\n          const urlParams = new URL(globalThis.location.href).searchParams;\n          if (urlParams.has('opfs-disable')) {\n            return Promise.resolve(sqlite3);\n          }\n          if (undefined === options.verbose) {\n            options.verbose = urlParams.has('opfs-verbose')\n              ? +urlParams.get('opfs-verbose') || 2\n              : 1;\n          }\n          if (undefined === options.sanityChecks) {\n            options.sanityChecks = urlParams.has('opfs-sanity-check');\n          }\n          if (undefined === options.proxyUri) {\n            options.proxyUri = callee.defaultProxyUri;\n          }\n\n          if ('function' === typeof options.proxyUri) {\n            options.proxyUri = options.proxyUri();\n          }\n          const thePromise = new Promise(function (\n            promiseResolve_,\n            promiseReject_,\n          ) {\n            const loggers = [\n              sqlite3.config.error,\n              sqlite3.config.warn,\n              sqlite3.config.log,\n            ];\n            const logImpl = (level, ...args) => {\n              if (options.verbose > level)\n                loggers[level]('OPFS syncer:', ...args);\n            };\n            const log = (...args) => logImpl(2, ...args);\n            const warn = (...args) => logImpl(1, ...args);\n            const error = (...args) => logImpl(0, ...args);\n            const toss = sqlite3.util.toss;\n            const capi = sqlite3.capi;\n            const util = sqlite3.util;\n            const wasm = sqlite3.wasm;\n            const sqlite3_vfs = capi.sqlite3_vfs;\n            const sqlite3_file = capi.sqlite3_file;\n            const sqlite3_io_methods = capi.sqlite3_io_methods;\n\n            const opfsUtil = Object.create(null);\n\n            const thisThreadHasOPFS = () => {\n              return (\n                globalThis.FileSystemHandle &&\n                globalThis.FileSystemDirectoryHandle &&\n                globalThis.FileSystemFileHandle &&\n                globalThis.FileSystemFileHandle.prototype\n                  .createSyncAccessHandle &&\n                navigator?.storage?.getDirectory\n              );\n            };\n\n            opfsUtil.metrics = {\n              dump: function () {\n                let k,\n                  n = 0,\n                  t = 0,\n                  w = 0;\n                for (k in state.opIds) {\n                  const m = metrics[k];\n                  n += m.count;\n                  t += m.time;\n                  w += m.wait;\n                  m.avgTime = m.count && m.time ? m.time / m.count : 0;\n                  m.avgWait = m.count && m.wait ? m.wait / m.count : 0;\n                }\n                sqlite3.config.log(\n                  globalThis.location.href,\n                  'metrics for',\n                  globalThis.location.href,\n                  ':',\n                  metrics,\n                  '\\nTotal of',\n                  n,\n                  'op(s) for',\n                  t,\n                  'ms (incl. ' + w + ' ms of waiting on the async side)',\n                );\n                sqlite3.config.log('Serialization metrics:', metrics.s11n);\n                W.postMessage({ type: 'opfs-async-metrics' });\n              },\n              reset: function () {\n                let k;\n                const r = (m) => (m.count = m.time = m.wait = 0);\n                for (k in state.opIds) {\n                  r((metrics[k] = Object.create(null)));\n                }\n                let s = (metrics.s11n = Object.create(null));\n                s = s.serialize = Object.create(null);\n                s.count = s.time = 0;\n                s = metrics.s11n.deserialize = Object.create(null);\n                s.count = s.time = 0;\n              },\n            };\n            const opfsIoMethods = new sqlite3_io_methods();\n            const opfsVfs = new sqlite3_vfs().addOnDispose(() =>\n              opfsIoMethods.dispose(),\n            );\n            let promiseWasRejected = undefined;\n            const promiseReject = (err) => {\n              promiseWasRejected = true;\n              opfsVfs.dispose();\n              return promiseReject_(err);\n            };\n            const promiseResolve = () => {\n              promiseWasRejected = false;\n              return promiseResolve_(sqlite3);\n            };\n            const W = new Worker(\n              new URL('sqlite3-opfs-async-proxy.js', import.meta.url),\n            );\n            setTimeout(() => {\n              if (undefined === promiseWasRejected) {\n                promiseReject(\n                  new Error(\n                    'Timeout while waiting for OPFS async proxy worker.',\n                  ),\n                );\n              }\n            }, 4000);\n            W._originalOnError = W.onerror;\n            W.onerror = function (err) {\n              error('Error initializing OPFS asyncer:', err);\n              promiseReject(\n                new Error(\n                  'Loading OPFS async Worker failed for unknown reasons.',\n                ),\n              );\n            };\n            const pDVfs = capi.sqlite3_vfs_find(null);\n            const dVfs = pDVfs ? new sqlite3_vfs(pDVfs) : null;\n            opfsIoMethods.$iVersion = 1;\n            opfsVfs.$iVersion = 2;\n            opfsVfs.$szOsFile = capi.sqlite3_file.structInfo.sizeof;\n            opfsVfs.$mxPathname = 1024;\n            opfsVfs.$zName = wasm.allocCString('opfs');\n\n            opfsVfs.$xDlOpen =\n              opfsVfs.$xDlError =\n              opfsVfs.$xDlSym =\n              opfsVfs.$xDlClose =\n                null;\n            opfsVfs.addOnDispose(\n              '$zName',\n              opfsVfs.$zName,\n              'cleanup default VFS wrapper',\n              () => (dVfs ? dVfs.dispose() : null),\n            );\n\n            const state = Object.create(null);\n            state.verbose = options.verbose;\n            state.littleEndian = (() => {\n              const buffer = new ArrayBuffer(2);\n              new DataView(buffer).setInt16(0, 256, true);\n\n              return new Int16Array(buffer)[0] === 256;\n            })();\n\n            state.asyncIdleWaitTime = 150;\n\n            state.asyncS11nExceptions = 1;\n\n            state.fileBufferSize = 1024 * 64;\n            state.sabS11nOffset = state.fileBufferSize;\n\n            state.sabS11nSize = opfsVfs.$mxPathname * 2;\n\n            state.sabIO = new SharedArrayBuffer(\n              state.fileBufferSize + state.sabS11nSize,\n            );\n            state.opIds = Object.create(null);\n            const metrics = Object.create(null);\n            {\n              let i = 0;\n\n              state.opIds.whichOp = i++;\n\n              state.opIds.rc = i++;\n\n              state.opIds.xAccess = i++;\n              state.opIds.xClose = i++;\n              state.opIds.xDelete = i++;\n              state.opIds.xDeleteNoWait = i++;\n              state.opIds.xFileSize = i++;\n              state.opIds.xLock = i++;\n              state.opIds.xOpen = i++;\n              state.opIds.xRead = i++;\n              state.opIds.xSleep = i++;\n              state.opIds.xSync = i++;\n              state.opIds.xTruncate = i++;\n              state.opIds.xUnlock = i++;\n              state.opIds.xWrite = i++;\n              state.opIds.mkdir = i++;\n              state.opIds['opfs-async-metrics'] = i++;\n              state.opIds['opfs-async-shutdown'] = i++;\n\n              state.opIds.retry = i++;\n              state.sabOP = new SharedArrayBuffer(i * 4);\n              opfsUtil.metrics.reset();\n            }\n\n            state.sq3Codes = Object.create(null);\n            [\n              'SQLITE_ACCESS_EXISTS',\n              'SQLITE_ACCESS_READWRITE',\n              'SQLITE_BUSY',\n              'SQLITE_CANTOPEN',\n              'SQLITE_ERROR',\n              'SQLITE_IOERR',\n              'SQLITE_IOERR_ACCESS',\n              'SQLITE_IOERR_CLOSE',\n              'SQLITE_IOERR_DELETE',\n              'SQLITE_IOERR_FSYNC',\n              'SQLITE_IOERR_LOCK',\n              'SQLITE_IOERR_READ',\n              'SQLITE_IOERR_SHORT_READ',\n              'SQLITE_IOERR_TRUNCATE',\n              'SQLITE_IOERR_UNLOCK',\n              'SQLITE_IOERR_WRITE',\n              'SQLITE_LOCK_EXCLUSIVE',\n              'SQLITE_LOCK_NONE',\n              'SQLITE_LOCK_PENDING',\n              'SQLITE_LOCK_RESERVED',\n              'SQLITE_LOCK_SHARED',\n              'SQLITE_LOCKED',\n              'SQLITE_MISUSE',\n              'SQLITE_NOTFOUND',\n              'SQLITE_OPEN_CREATE',\n              'SQLITE_OPEN_DELETEONCLOSE',\n              'SQLITE_OPEN_MAIN_DB',\n              'SQLITE_OPEN_READONLY',\n            ].forEach((k) => {\n              if (undefined === (state.sq3Codes[k] = capi[k])) {\n                toss('Maintenance required: not found:', k);\n              }\n            });\n            state.opfsFlags = Object.assign(Object.create(null), {\n              OPFS_UNLOCK_ASAP: 0x01,\n\n              OPFS_UNLINK_BEFORE_OPEN: 0x02,\n\n              defaultUnlockAsap: false,\n            });\n\n            const opRun = (op, ...args) => {\n              const opNdx = state.opIds[op] || toss('Invalid op ID:', op);\n              state.s11n.serialize(...args);\n              Atomics.store(state.sabOPView, state.opIds.rc, -1);\n              Atomics.store(state.sabOPView, state.opIds.whichOp, opNdx);\n              Atomics.notify(state.sabOPView, state.opIds.whichOp);\n              const t = performance.now();\n              while (\n                'not-equal' !==\n                Atomics.wait(state.sabOPView, state.opIds.rc, -1)\n              ) {}\n\n              const rc = Atomics.load(state.sabOPView, state.opIds.rc);\n              metrics[op].wait += performance.now() - t;\n              if (rc && state.asyncS11nExceptions) {\n                const err = state.s11n.deserialize();\n                if (err) error(op + '() async error:', ...err);\n              }\n              return rc;\n            };\n\n            opfsUtil.debug = {\n              asyncShutdown: () => {\n                warn(\n                  'Shutting down OPFS async listener. The OPFS VFS will no longer work.',\n                );\n                opRun('opfs-async-shutdown');\n              },\n              asyncRestart: () => {\n                warn(\n                  'Attempting to restart OPFS VFS async listener. Might work, might not.',\n                );\n                W.postMessage({ type: 'opfs-async-restart' });\n              },\n            };\n\n            const initS11n = () => {\n              if (state.s11n) return state.s11n;\n              const textDecoder = new TextDecoder(),\n                textEncoder = new TextEncoder('utf-8'),\n                viewU8 = new Uint8Array(\n                  state.sabIO,\n                  state.sabS11nOffset,\n                  state.sabS11nSize,\n                ),\n                viewDV = new DataView(\n                  state.sabIO,\n                  state.sabS11nOffset,\n                  state.sabS11nSize,\n                );\n              state.s11n = Object.create(null);\n\n              const TypeIds = Object.create(null);\n              TypeIds.number = {\n                id: 1,\n                size: 8,\n                getter: 'getFloat64',\n                setter: 'setFloat64',\n              };\n              TypeIds.bigint = {\n                id: 2,\n                size: 8,\n                getter: 'getBigInt64',\n                setter: 'setBigInt64',\n              };\n              TypeIds.boolean = {\n                id: 3,\n                size: 4,\n                getter: 'getInt32',\n                setter: 'setInt32',\n              };\n              TypeIds.string = { id: 4 };\n\n              const getTypeId = (v) =>\n                TypeIds[typeof v] ||\n                toss(\n                  'Maintenance required: this value type cannot be serialized.',\n                  v,\n                );\n              const getTypeIdById = (tid) => {\n                switch (tid) {\n                  case TypeIds.number.id:\n                    return TypeIds.number;\n                  case TypeIds.bigint.id:\n                    return TypeIds.bigint;\n                  case TypeIds.boolean.id:\n                    return TypeIds.boolean;\n                  case TypeIds.string.id:\n                    return TypeIds.string;\n                  default:\n                    toss('Invalid type ID:', tid);\n                }\n              };\n\n              state.s11n.deserialize = function (clear = false) {\n                ++metrics.s11n.deserialize.count;\n                const t = performance.now();\n                const argc = viewU8[0];\n                const rc = argc ? [] : null;\n                if (argc) {\n                  const typeIds = [];\n                  let offset = 1,\n                    i,\n                    n,\n                    v;\n                  for (i = 0; i < argc; ++i, ++offset) {\n                    typeIds.push(getTypeIdById(viewU8[offset]));\n                  }\n                  for (i = 0; i < argc; ++i) {\n                    const t = typeIds[i];\n                    if (t.getter) {\n                      v = viewDV[t.getter](offset, state.littleEndian);\n                      offset += t.size;\n                    } else {\n                      n = viewDV.getInt32(offset, state.littleEndian);\n                      offset += 4;\n                      v = textDecoder.decode(viewU8.slice(offset, offset + n));\n                      offset += n;\n                    }\n                    rc.push(v);\n                  }\n                }\n                if (clear) viewU8[0] = 0;\n\n                metrics.s11n.deserialize.time += performance.now() - t;\n                return rc;\n              };\n\n              state.s11n.serialize = function (...args) {\n                const t = performance.now();\n                ++metrics.s11n.serialize.count;\n                if (args.length) {\n                  const typeIds = [];\n                  let i = 0,\n                    offset = 1;\n                  viewU8[0] = args.length & 0xff;\n                  for (; i < args.length; ++i, ++offset) {\n                    typeIds.push(getTypeId(args[i]));\n                    viewU8[offset] = typeIds[i].id;\n                  }\n                  for (i = 0; i < args.length; ++i) {\n                    const t = typeIds[i];\n                    if (t.setter) {\n                      viewDV[t.setter](offset, args[i], state.littleEndian);\n                      offset += t.size;\n                    } else {\n                      const s = textEncoder.encode(args[i]);\n                      viewDV.setInt32(offset, s.byteLength, state.littleEndian);\n                      offset += 4;\n                      viewU8.set(s, offset);\n                      offset += s.byteLength;\n                    }\n                  }\n                } else {\n                  viewU8[0] = 0;\n                }\n                metrics.s11n.serialize.time += performance.now() - t;\n              };\n              return state.s11n;\n            };\n\n            const randomFilename = function f(len = 16) {\n              if (!f._chars) {\n                f._chars =\n                  'abcdefghijklmnopqrstuvwxyz' +\n                  'ABCDEFGHIJKLMNOPQRSTUVWXYZ' +\n                  '012346789';\n                f._n = f._chars.length;\n              }\n              const a = [];\n              let i = 0;\n              for (; i < len; ++i) {\n                const ndx = (Math.random() * (f._n * 64)) % f._n | 0;\n                a[i] = f._chars[ndx];\n              }\n              return a.join('');\n            };\n\n            const __openFiles = Object.create(null);\n\n            const opTimer = Object.create(null);\n            opTimer.op = undefined;\n            opTimer.start = undefined;\n            const mTimeStart = (op) => {\n              opTimer.start = performance.now();\n              opTimer.op = op;\n              ++metrics[op].count;\n            };\n            const mTimeEnd = () =>\n              (metrics[opTimer.op].time += performance.now() - opTimer.start);\n\n            const ioSyncWrappers = {\n              xCheckReservedLock: function (pFile, pOut) {\n                wasm.poke(pOut, 0, 'i32');\n                return 0;\n              },\n              xClose: function (pFile) {\n                mTimeStart('xClose');\n                let rc = 0;\n                const f = __openFiles[pFile];\n                if (f) {\n                  delete __openFiles[pFile];\n                  rc = opRun('xClose', pFile);\n                  if (f.sq3File) f.sq3File.dispose();\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xDeviceCharacteristics: function (pFile) {\n                return capi.SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN;\n              },\n              xFileControl: function (pFile, opId, pArg) {\n                return capi.SQLITE_NOTFOUND;\n              },\n              xFileSize: function (pFile, pSz64) {\n                mTimeStart('xFileSize');\n                let rc = opRun('xFileSize', pFile);\n                if (0 == rc) {\n                  try {\n                    const sz = state.s11n.deserialize()[0];\n                    wasm.poke(pSz64, sz, 'i64');\n                  } catch (e) {\n                    error('Unexpected error reading xFileSize() result:', e);\n                    rc = state.sq3Codes.SQLITE_IOERR;\n                  }\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xLock: function (pFile, lockType) {\n                mTimeStart('xLock');\n                const f = __openFiles[pFile];\n                let rc = 0;\n\n                if (!f.lockType) {\n                  rc = opRun('xLock', pFile, lockType);\n                  if (0 === rc) f.lockType = lockType;\n                } else {\n                  f.lockType = lockType;\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xRead: function (pFile, pDest, n, offset64) {\n                mTimeStart('xRead');\n                const f = __openFiles[pFile];\n                let rc;\n                try {\n                  rc = opRun('xRead', pFile, n, Number(offset64));\n                  if (0 === rc || capi.SQLITE_IOERR_SHORT_READ === rc) {\n                    wasm.heap8u().set(f.sabView.subarray(0, n), pDest);\n                  }\n                } catch (e) {\n                  error('xRead(', arguments, ') failed:', e, f);\n                  rc = capi.SQLITE_IOERR_READ;\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xSync: function (pFile, flags) {\n                mTimeStart('xSync');\n                ++metrics.xSync.count;\n                const rc = opRun('xSync', pFile, flags);\n                mTimeEnd();\n                return rc;\n              },\n              xTruncate: function (pFile, sz64) {\n                mTimeStart('xTruncate');\n                const rc = opRun('xTruncate', pFile, Number(sz64));\n                mTimeEnd();\n                return rc;\n              },\n              xUnlock: function (pFile, lockType) {\n                mTimeStart('xUnlock');\n                const f = __openFiles[pFile];\n                let rc = 0;\n                if (capi.SQLITE_LOCK_NONE === lockType && f.lockType) {\n                  rc = opRun('xUnlock', pFile, lockType);\n                }\n                if (0 === rc) f.lockType = lockType;\n                mTimeEnd();\n                return rc;\n              },\n              xWrite: function (pFile, pSrc, n, offset64) {\n                mTimeStart('xWrite');\n                const f = __openFiles[pFile];\n                let rc;\n                try {\n                  f.sabView.set(wasm.heap8u().subarray(pSrc, pSrc + n));\n                  rc = opRun('xWrite', pFile, n, Number(offset64));\n                } catch (e) {\n                  error('xWrite(', arguments, ') failed:', e, f);\n                  rc = capi.SQLITE_IOERR_WRITE;\n                }\n                mTimeEnd();\n                return rc;\n              },\n            };\n\n            const vfsSyncWrappers = {\n              xAccess: function (pVfs, zName, flags, pOut) {\n                mTimeStart('xAccess');\n                const rc = opRun('xAccess', wasm.cstrToJs(zName));\n                wasm.poke(pOut, rc ? 0 : 1, 'i32');\n                mTimeEnd();\n                return 0;\n              },\n              xCurrentTime: function (pVfs, pOut) {\n                wasm.poke(\n                  pOut,\n                  2440587.5 + new Date().getTime() / 86400000,\n                  'double',\n                );\n                return 0;\n              },\n              xCurrentTimeInt64: function (pVfs, pOut) {\n                wasm.poke(\n                  pOut,\n                  2440587.5 * 86400000 + new Date().getTime(),\n                  'i64',\n                );\n                return 0;\n              },\n              xDelete: function (pVfs, zName, doSyncDir) {\n                mTimeStart('xDelete');\n                const rc = opRun(\n                  'xDelete',\n                  wasm.cstrToJs(zName),\n                  doSyncDir,\n                  false,\n                );\n                mTimeEnd();\n                return rc;\n              },\n              xFullPathname: function (pVfs, zName, nOut, pOut) {\n                const i = wasm.cstrncpy(pOut, zName, nOut);\n                return i < nOut ? 0 : capi.SQLITE_CANTOPEN;\n              },\n              xGetLastError: function (pVfs, nOut, pOut) {\n                warn('OPFS xGetLastError() has nothing sensible to return.');\n                return 0;\n              },\n\n              xOpen: function f(pVfs, zName, pFile, flags, pOutFlags) {\n                mTimeStart('xOpen');\n                let opfsFlags = 0;\n                if (0 === zName) {\n                  zName = randomFilename();\n                } else if (wasm.isPtr(zName)) {\n                  if (capi.sqlite3_uri_boolean(zName, 'opfs-unlock-asap', 0)) {\n                    opfsFlags |= state.opfsFlags.OPFS_UNLOCK_ASAP;\n                  }\n                  if (\n                    capi.sqlite3_uri_boolean(zName, 'delete-before-open', 0)\n                  ) {\n                    opfsFlags |= state.opfsFlags.OPFS_UNLINK_BEFORE_OPEN;\n                  }\n                  zName = wasm.cstrToJs(zName);\n                }\n                const fh = Object.create(null);\n                fh.fid = pFile;\n                fh.filename = zName;\n                fh.sab = new SharedArrayBuffer(state.fileBufferSize);\n                fh.flags = flags;\n                fh.readOnly =\n                  !(sqlite3.SQLITE_OPEN_CREATE & flags) &&\n                  !!(flags & capi.SQLITE_OPEN_READONLY);\n                const rc = opRun('xOpen', pFile, zName, flags, opfsFlags);\n                if (!rc) {\n                  if (fh.readOnly) {\n                    wasm.poke(pOutFlags, capi.SQLITE_OPEN_READONLY, 'i32');\n                  }\n                  __openFiles[pFile] = fh;\n                  fh.sabView = state.sabFileBufView;\n                  fh.sq3File = new sqlite3_file(pFile);\n                  fh.sq3File.$pMethods = opfsIoMethods.pointer;\n                  fh.lockType = capi.SQLITE_LOCK_NONE;\n                }\n                mTimeEnd();\n                return rc;\n              },\n            };\n\n            if (dVfs) {\n              opfsVfs.$xRandomness = dVfs.$xRandomness;\n              opfsVfs.$xSleep = dVfs.$xSleep;\n            }\n            if (!opfsVfs.$xRandomness) {\n              vfsSyncWrappers.xRandomness = function (pVfs, nOut, pOut) {\n                const heap = wasm.heap8u();\n                let i = 0;\n                for (; i < nOut; ++i)\n                  heap[pOut + i] = (Math.random() * 255000) & 0xff;\n                return i;\n              };\n            }\n            if (!opfsVfs.$xSleep) {\n              vfsSyncWrappers.xSleep = function (pVfs, ms) {\n                Atomics.wait(state.sabOPView, state.opIds.xSleep, 0, ms);\n                return 0;\n              };\n            }\n\n            opfsUtil.getResolvedPath = function (filename, splitIt) {\n              const p = new URL(filename, 'file://irrelevant').pathname;\n              return splitIt ? p.split('/').filter((v) => !!v) : p;\n            };\n\n            opfsUtil.getDirForFilename = async function f(\n              absFilename,\n              createDirs = false,\n            ) {\n              const path = opfsUtil.getResolvedPath(absFilename, true);\n              const filename = path.pop();\n              let dh = opfsUtil.rootDirectory;\n              for (const dirName of path) {\n                if (dirName) {\n                  dh = await dh.getDirectoryHandle(dirName, {\n                    create: !!createDirs,\n                  });\n                }\n              }\n              return [dh, filename];\n            };\n\n            opfsUtil.mkdir = async function (absDirName) {\n              try {\n                await opfsUtil.getDirForFilename(\n                  absDirName + '/filepart',\n                  true,\n                );\n                return true;\n              } catch (e) {\n                return false;\n              }\n            };\n\n            opfsUtil.entryExists = async function (fsEntryName) {\n              try {\n                const [dh, fn] = await opfsUtil.getDirForFilename(fsEntryName);\n                await dh.getFileHandle(fn);\n                return true;\n              } catch (e) {\n                return false;\n              }\n            };\n\n            opfsUtil.randomFilename = randomFilename;\n\n            opfsUtil.treeList = async function () {\n              const doDir = async function callee(dirHandle, tgt) {\n                tgt.name = dirHandle.name;\n                tgt.dirs = [];\n                tgt.files = [];\n                for await (const handle of dirHandle.values()) {\n                  if ('directory' === handle.kind) {\n                    const subDir = Object.create(null);\n                    tgt.dirs.push(subDir);\n                    await callee(handle, subDir);\n                  } else {\n                    tgt.files.push(handle.name);\n                  }\n                }\n              };\n              const root = Object.create(null);\n              await doDir(opfsUtil.rootDirectory, root);\n              return root;\n            };\n\n            opfsUtil.rmfr = async function () {\n              const dir = opfsUtil.rootDirectory,\n                opt = { recurse: true };\n              for await (const handle of dir.values()) {\n                dir.removeEntry(handle.name, opt);\n              }\n            };\n\n            opfsUtil.unlink = async function (\n              fsEntryName,\n              recursive = false,\n              throwOnError = false,\n            ) {\n              try {\n                const [hDir, filenamePart] = await opfsUtil.getDirForFilename(\n                  fsEntryName,\n                  false,\n                );\n                await hDir.removeEntry(filenamePart, { recursive });\n                return true;\n              } catch (e) {\n                if (throwOnError) {\n                  throw new Error(\n                    'unlink(',\n                    arguments[0],\n                    ') failed: ' + e.message,\n                    {\n                      cause: e,\n                    },\n                  );\n                }\n                return false;\n              }\n            };\n\n            opfsUtil.traverse = async function (opt) {\n              const defaultOpt = {\n                recursive: true,\n                directory: opfsUtil.rootDirectory,\n              };\n              if ('function' === typeof opt) {\n                opt = { callback: opt };\n              }\n              opt = Object.assign(defaultOpt, opt || {});\n              const doDir = async function callee(dirHandle, depth) {\n                for await (const handle of dirHandle.values()) {\n                  if (false === opt.callback(handle, dirHandle, depth))\n                    return false;\n                  else if (opt.recursive && 'directory' === handle.kind) {\n                    if (false === (await callee(handle, depth + 1))) break;\n                  }\n                }\n              };\n              doDir(opt.directory, 0);\n            };\n\n            const importDbChunked = async function (filename, callback) {\n              const [hDir, fnamePart] = await opfsUtil.getDirForFilename(\n                filename,\n                true,\n              );\n              const hFile = await hDir.getFileHandle(fnamePart, {\n                create: true,\n              });\n              let sah = await hFile.createSyncAccessHandle();\n              let nWrote = 0,\n                chunk,\n                checkedHeader = false,\n                err = false;\n              try {\n                sah.truncate(0);\n                while (undefined !== (chunk = await callback())) {\n                  if (chunk instanceof ArrayBuffer)\n                    chunk = new Uint8Array(chunk);\n                  if (0 === nWrote && chunk.byteLength >= 15) {\n                    util.affirmDbHeader(chunk);\n                    checkedHeader = true;\n                  }\n                  sah.write(chunk, { at: nWrote });\n                  nWrote += chunk.byteLength;\n                }\n                if (nWrote < 512 || 0 !== nWrote % 512) {\n                  toss(\n                    'Input size',\n                    nWrote,\n                    'is not correct for an SQLite database.',\n                  );\n                }\n                if (!checkedHeader) {\n                  const header = new Uint8Array(20);\n                  sah.read(header, { at: 0 });\n                  util.affirmDbHeader(header);\n                }\n                sah.write(new Uint8Array([1, 1]), { at: 18 });\n                return nWrote;\n              } catch (e) {\n                await sah.close();\n                sah = undefined;\n                await hDir.removeEntry(fnamePart).catch(() => {});\n                throw e;\n              } finally {\n                if (sah) await sah.close();\n              }\n            };\n\n            opfsUtil.importDb = async function (filename, bytes) {\n              if (bytes instanceof Function) {\n                return importDbChunked(filename, bytes);\n              }\n              if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n              util.affirmIsDb(bytes);\n              const n = bytes.byteLength;\n              const [hDir, fnamePart] = await opfsUtil.getDirForFilename(\n                filename,\n                true,\n              );\n              let sah,\n                err,\n                nWrote = 0;\n              try {\n                const hFile = await hDir.getFileHandle(fnamePart, {\n                  create: true,\n                });\n                sah = await hFile.createSyncAccessHandle();\n                sah.truncate(0);\n                nWrote = sah.write(bytes, { at: 0 });\n                if (nWrote != n) {\n                  toss(\n                    'Expected to write ' +\n                      n +\n                      ' bytes but wrote ' +\n                      nWrote +\n                      '.',\n                  );\n                }\n                sah.write(new Uint8Array([1, 1]), { at: 18 });\n                return nWrote;\n              } catch (e) {\n                if (sah) {\n                  await sah.close();\n                  sah = undefined;\n                }\n                await hDir.removeEntry(fnamePart).catch(() => {});\n                throw e;\n              } finally {\n                if (sah) await sah.close();\n              }\n            };\n\n            if (sqlite3.oo1) {\n              const OpfsDb = function (...args) {\n                const opt = sqlite3.oo1.DB.dbCtorHelper.normalizeArgs(...args);\n                opt.vfs = opfsVfs.$zName;\n                sqlite3.oo1.DB.dbCtorHelper.call(this, opt);\n              };\n              OpfsDb.prototype = Object.create(sqlite3.oo1.DB.prototype);\n              sqlite3.oo1.OpfsDb = OpfsDb;\n              OpfsDb.importDb = opfsUtil.importDb;\n              sqlite3.oo1.DB.dbCtorHelper.setVfsPostOpenCallback(\n                opfsVfs.pointer,\n                function (oo1Db, sqlite3) {\n                  sqlite3.capi.sqlite3_busy_timeout(oo1Db, 10000);\n                },\n              );\n            }\n\n            const sanityCheck = function () {\n              const scope = wasm.scopedAllocPush();\n              const sq3File = new sqlite3_file();\n              try {\n                const fid = sq3File.pointer;\n                const openFlags =\n                  capi.SQLITE_OPEN_CREATE |\n                  capi.SQLITE_OPEN_READWRITE |\n                  capi.SQLITE_OPEN_MAIN_DB;\n                const pOut = wasm.scopedAlloc(8);\n                const dbFile = '/sanity/check/file' + randomFilename(8);\n                const zDbFile = wasm.scopedAllocCString(dbFile);\n                let rc;\n                state.s11n.serialize('This is ä string.');\n                rc = state.s11n.deserialize();\n                log('deserialize() says:', rc);\n                if ('This is ä string.' !== rc[0]) toss('String d13n error.');\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                log('xAccess(', dbFile, ') exists ?=', rc);\n                rc = vfsSyncWrappers.xOpen(\n                  opfsVfs.pointer,\n                  zDbFile,\n                  fid,\n                  openFlags,\n                  pOut,\n                );\n                log(\n                  'open rc =',\n                  rc,\n                  'state.sabOPView[xOpen] =',\n                  state.sabOPView[state.opIds.xOpen],\n                );\n                if (0 !== rc) {\n                  error('open failed with code', rc);\n                  return;\n                }\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                if (!rc) toss('xAccess() failed to detect file.');\n                rc = ioSyncWrappers.xSync(sq3File.pointer, 0);\n                if (rc) toss('sync failed w/ rc', rc);\n                rc = ioSyncWrappers.xTruncate(sq3File.pointer, 1024);\n                if (rc) toss('truncate failed w/ rc', rc);\n                wasm.poke(pOut, 0, 'i64');\n                rc = ioSyncWrappers.xFileSize(sq3File.pointer, pOut);\n                if (rc) toss('xFileSize failed w/ rc', rc);\n                log('xFileSize says:', wasm.peek(pOut, 'i64'));\n                rc = ioSyncWrappers.xWrite(sq3File.pointer, zDbFile, 10, 1);\n                if (rc) toss('xWrite() failed!');\n                const readBuf = wasm.scopedAlloc(16);\n                rc = ioSyncWrappers.xRead(sq3File.pointer, readBuf, 6, 2);\n                wasm.poke(readBuf + 6, 0);\n                let jRead = wasm.cstrToJs(readBuf);\n                log('xRead() got:', jRead);\n                if ('sanity' !== jRead) toss('Unexpected xRead() value.');\n                if (vfsSyncWrappers.xSleep) {\n                  log('xSleep()ing before close()ing...');\n                  vfsSyncWrappers.xSleep(opfsVfs.pointer, 2000);\n                  log('waking up from xSleep()');\n                }\n                rc = ioSyncWrappers.xClose(fid);\n                log('xClose rc =', rc, 'sabOPView =', state.sabOPView);\n                log('Deleting file:', dbFile);\n                vfsSyncWrappers.xDelete(opfsVfs.pointer, zDbFile, 0x1234);\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                if (rc)\n                  toss(\n                    'Expecting 0 from xAccess(',\n                    dbFile,\n                    ') after xDelete().',\n                  );\n                warn('End of OPFS sanity checks.');\n              } finally {\n                sq3File.dispose();\n                wasm.scopedAllocPop(scope);\n              }\n            };\n\n            W.onmessage = function ({ data }) {\n              switch (data.type) {\n                case 'opfs-unavailable':\n                  promiseReject(new Error(data.payload.join(' ')));\n                  break;\n                case 'opfs-async-loaded':\n                  W.postMessage({ type: 'opfs-async-init', args: state });\n                  break;\n                case 'opfs-async-inited': {\n                  if (true === promiseWasRejected) {\n                    break;\n                  }\n                  try {\n                    sqlite3.vfs.installVfs({\n                      io: { struct: opfsIoMethods, methods: ioSyncWrappers },\n                      vfs: { struct: opfsVfs, methods: vfsSyncWrappers },\n                    });\n                    state.sabOPView = new Int32Array(state.sabOP);\n                    state.sabFileBufView = new Uint8Array(\n                      state.sabIO,\n                      0,\n                      state.fileBufferSize,\n                    );\n                    state.sabS11nView = new Uint8Array(\n                      state.sabIO,\n                      state.sabS11nOffset,\n                      state.sabS11nSize,\n                    );\n                    initS11n();\n                    if (options.sanityChecks) {\n                      warn(\n                        'Running sanity checks because of opfs-sanity-check URL arg...',\n                      );\n                      sanityCheck();\n                    }\n                    if (thisThreadHasOPFS()) {\n                      navigator.storage\n                        .getDirectory()\n                        .then((d) => {\n                          W.onerror = W._originalOnError;\n                          delete W._originalOnError;\n                          sqlite3.opfs = opfsUtil;\n                          opfsUtil.rootDirectory = d;\n                          log('End of OPFS sqlite3_vfs setup.', opfsVfs);\n                          promiseResolve();\n                        })\n                        .catch(promiseReject);\n                    } else {\n                      promiseResolve();\n                    }\n                  } catch (e) {\n                    error(e);\n                    promiseReject(e);\n                  }\n                  break;\n                }\n                default: {\n                  const errMsg =\n                    'Unexpected message from the OPFS async worker: ' +\n                    JSON.stringify(data);\n                  error(errMsg);\n                  promiseReject(new Error(errMsg));\n                  break;\n                }\n              }\n            };\n          });\n          return thePromise;\n        };\n        installOpfsVfs.defaultProxyUri = 'sqlite3-opfs-async-proxy.js';\n        globalThis.sqlite3ApiBootstrap.initializersAsync.push(\n          async (sqlite3) => {\n            try {\n              let proxyJs = installOpfsVfs.defaultProxyUri;\n              if (sqlite3.scriptInfo.sqlite3Dir) {\n                installOpfsVfs.defaultProxyUri =\n                  sqlite3.scriptInfo.sqlite3Dir + proxyJs;\n              }\n              return installOpfsVfs().catch((e) => {\n                sqlite3.config.warn(\n                  'Ignoring inability to install OPFS sqlite3_vfs:',\n                  e.message,\n                );\n              });\n            } catch (e) {\n              sqlite3.config.error('installOpfsVfs() exception:', e);\n              return Promise.reject(e);\n            }\n          },\n        );\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        'use strict';\n        const toss = sqlite3.util.toss;\n        const toss3 = sqlite3.util.toss3;\n        const initPromises = Object.create(null);\n        const capi = sqlite3.capi;\n        const util = sqlite3.util;\n        const wasm = sqlite3.wasm;\n\n        const SECTOR_SIZE = 4096;\n        const HEADER_MAX_PATH_SIZE = 512;\n        const HEADER_FLAGS_SIZE = 4;\n        const HEADER_DIGEST_SIZE = 8;\n        const HEADER_CORPUS_SIZE = HEADER_MAX_PATH_SIZE + HEADER_FLAGS_SIZE;\n        const HEADER_OFFSET_FLAGS = HEADER_MAX_PATH_SIZE;\n        const HEADER_OFFSET_DIGEST = HEADER_CORPUS_SIZE;\n        const HEADER_OFFSET_DATA = SECTOR_SIZE;\n\n        const PERSISTENT_FILE_TYPES =\n          capi.SQLITE_OPEN_MAIN_DB |\n          capi.SQLITE_OPEN_MAIN_JOURNAL |\n          capi.SQLITE_OPEN_SUPER_JOURNAL |\n          capi.SQLITE_OPEN_WAL;\n        const FLAG_COMPUTE_DIGEST_V2 = capi.SQLITE_OPEN_MEMORY;\n        const OPAQUE_DIR_NAME = '.opaque';\n\n        const getRandomName = () => Math.random().toString(36).slice(2);\n\n        const textDecoder = new TextDecoder();\n        const textEncoder = new TextEncoder();\n\n        const optionDefaults = Object.assign(Object.create(null), {\n          name: 'opfs-sahpool',\n          directory: undefined,\n          initialCapacity: 6,\n          clearOnInit: false,\n\n          verbosity: 2,\n          forceReinitIfPreviouslyFailed: false,\n        });\n\n        const loggers = [\n          sqlite3.config.error,\n          sqlite3.config.warn,\n          sqlite3.config.log,\n        ];\n        const log = sqlite3.config.log;\n        const warn = sqlite3.config.warn;\n        const error = sqlite3.config.error;\n\n        const __mapVfsToPool = new Map();\n        const getPoolForVfs = (pVfs) => __mapVfsToPool.get(pVfs);\n        const setPoolForVfs = (pVfs, pool) => {\n          if (pool) __mapVfsToPool.set(pVfs, pool);\n          else __mapVfsToPool.delete(pVfs);\n        };\n\n        const __mapSqlite3File = new Map();\n        const getPoolForPFile = (pFile) => __mapSqlite3File.get(pFile);\n        const setPoolForPFile = (pFile, pool) => {\n          if (pool) __mapSqlite3File.set(pFile, pool);\n          else __mapSqlite3File.delete(pFile);\n        };\n\n        const ioMethods = {\n          xCheckReservedLock: function (pFile, pOut) {\n            const pool = getPoolForPFile(pFile);\n            pool.log('xCheckReservedLock');\n            pool.storeErr();\n            wasm.poke32(pOut, 1);\n            return 0;\n          },\n          xClose: function (pFile) {\n            const pool = getPoolForPFile(pFile);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            if (file) {\n              try {\n                pool.log(`xClose ${file.path}`);\n                pool.mapS3FileToOFile(pFile, false);\n                file.sah.flush();\n                if (file.flags & capi.SQLITE_OPEN_DELETEONCLOSE) {\n                  pool.deletePath(file.path);\n                }\n              } catch (e) {\n                return pool.storeErr(e, capi.SQLITE_IOERR);\n              }\n            }\n            return 0;\n          },\n          xDeviceCharacteristics: function (pFile) {\n            return capi.SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN;\n          },\n          xFileControl: function (pFile, opId, pArg) {\n            return capi.SQLITE_NOTFOUND;\n          },\n          xFileSize: function (pFile, pSz64) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xFileSize`);\n            const file = pool.getOFileForS3File(pFile);\n            const size = file.sah.getSize() - HEADER_OFFSET_DATA;\n\n            wasm.poke64(pSz64, BigInt(size));\n            return 0;\n          },\n          xLock: function (pFile, lockType) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xLock ${lockType}`);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            file.lockType = lockType;\n            return 0;\n          },\n          xRead: function (pFile, pDest, n, offset64) {\n            const pool = getPoolForPFile(pFile);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            pool.log(`xRead ${file.path} ${n} @ ${offset64}`);\n            try {\n              const nRead = file.sah.read(\n                wasm.heap8u().subarray(pDest, pDest + n),\n                { at: HEADER_OFFSET_DATA + Number(offset64) },\n              );\n              if (nRead < n) {\n                wasm.heap8u().fill(0, pDest + nRead, pDest + n);\n                return capi.SQLITE_IOERR_SHORT_READ;\n              }\n              return 0;\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n          xSectorSize: function (pFile) {\n            return SECTOR_SIZE;\n          },\n          xSync: function (pFile, flags) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xSync ${flags}`);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n\n            try {\n              file.sah.flush();\n              return 0;\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n          xTruncate: function (pFile, sz64) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xTruncate ${sz64}`);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n\n            try {\n              file.sah.truncate(HEADER_OFFSET_DATA + Number(sz64));\n              return 0;\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n          xUnlock: function (pFile, lockType) {\n            const pool = getPoolForPFile(pFile);\n            pool.log('xUnlock');\n            const file = pool.getOFileForS3File(pFile);\n            file.lockType = lockType;\n            return 0;\n          },\n          xWrite: function (pFile, pSrc, n, offset64) {\n            const pool = getPoolForPFile(pFile);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            pool.log(`xWrite ${file.path} ${n} ${offset64}`);\n            try {\n              const nBytes = file.sah.write(\n                wasm.heap8u().subarray(pSrc, pSrc + n),\n                { at: HEADER_OFFSET_DATA + Number(offset64) },\n              );\n              return n === nBytes ? 0 : toss('Unknown write() failure.');\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n        };\n\n        const opfsIoMethods = new capi.sqlite3_io_methods();\n        opfsIoMethods.$iVersion = 1;\n        sqlite3.vfs.installVfs({\n          io: { struct: opfsIoMethods, methods: ioMethods },\n        });\n\n        const vfsMethods = {\n          xAccess: function (pVfs, zName, flags, pOut) {\n            const pool = getPoolForVfs(pVfs);\n            pool.storeErr();\n            try {\n              const name = pool.getPath(zName);\n              wasm.poke32(pOut, pool.hasFilename(name) ? 1 : 0);\n            } catch (e) {\n              wasm.poke32(pOut, 0);\n            }\n            return 0;\n          },\n          xCurrentTime: function (pVfs, pOut) {\n            wasm.poke(\n              pOut,\n              2440587.5 + new Date().getTime() / 86400000,\n              'double',\n            );\n            return 0;\n          },\n          xCurrentTimeInt64: function (pVfs, pOut) {\n            wasm.poke(pOut, 2440587.5 * 86400000 + new Date().getTime(), 'i64');\n            return 0;\n          },\n          xDelete: function (pVfs, zName, doSyncDir) {\n            const pool = getPoolForVfs(pVfs);\n            pool.log(`xDelete ${wasm.cstrToJs(zName)}`);\n            pool.storeErr();\n            try {\n              pool.deletePath(pool.getPath(zName));\n              return 0;\n            } catch (e) {\n              pool.storeErr(e);\n              return capi.SQLITE_IOERR_DELETE;\n            }\n          },\n          xFullPathname: function (pVfs, zName, nOut, pOut) {\n            const i = wasm.cstrncpy(pOut, zName, nOut);\n            return i < nOut ? 0 : capi.SQLITE_CANTOPEN;\n          },\n          xGetLastError: function (pVfs, nOut, pOut) {\n            const pool = getPoolForVfs(pVfs);\n            const e = pool.popErr();\n            pool.log(`xGetLastError ${nOut} e =`, e);\n            if (e) {\n              const scope = wasm.scopedAllocPush();\n              try {\n                const [cMsg, n] = wasm.scopedAllocCString(e.message, true);\n                wasm.cstrncpy(pOut, cMsg, nOut);\n                if (n > nOut) wasm.poke8(pOut + nOut - 1, 0);\n              } catch (e) {\n                return capi.SQLITE_NOMEM;\n              } finally {\n                wasm.scopedAllocPop(scope);\n              }\n            }\n            return e ? e.sqlite3Rc || capi.SQLITE_IOERR : 0;\n          },\n\n          xOpen: function f(pVfs, zName, pFile, flags, pOutFlags) {\n            const pool = getPoolForVfs(pVfs);\n            try {\n              flags &= ~FLAG_COMPUTE_DIGEST_V2;\n              pool.log(`xOpen ${wasm.cstrToJs(zName)} ${flags}`);\n\n              const path =\n                zName && wasm.peek8(zName)\n                  ? pool.getPath(zName)\n                  : getRandomName();\n              let sah = pool.getSAHForPath(path);\n              if (!sah && flags & capi.SQLITE_OPEN_CREATE) {\n                if (pool.getFileCount() < pool.getCapacity()) {\n                  sah = pool.nextAvailableSAH();\n                  pool.setAssociatedPath(sah, path, flags);\n                } else {\n                  toss('SAH pool is full. Cannot create file', path);\n                }\n              }\n              if (!sah) {\n                toss('file not found:', path);\n              }\n\n              const file = { path, flags, sah };\n              pool.mapS3FileToOFile(pFile, file);\n              file.lockType = capi.SQLITE_LOCK_NONE;\n              const sq3File = new capi.sqlite3_file(pFile);\n              sq3File.$pMethods = opfsIoMethods.pointer;\n              sq3File.dispose();\n              wasm.poke32(pOutFlags, flags);\n              return 0;\n            } catch (e) {\n              pool.storeErr(e);\n              return capi.SQLITE_CANTOPEN;\n            }\n          },\n        };\n\n        const createOpfsVfs = function (vfsName) {\n          if (sqlite3.capi.sqlite3_vfs_find(vfsName)) {\n            toss3('VFS name is already registered:', vfsName);\n          }\n          const opfsVfs = new capi.sqlite3_vfs();\n\n          const pDVfs = capi.sqlite3_vfs_find(null);\n          const dVfs = pDVfs ? new capi.sqlite3_vfs(pDVfs) : null;\n          opfsVfs.$iVersion = 2;\n          opfsVfs.$szOsFile = capi.sqlite3_file.structInfo.sizeof;\n          opfsVfs.$mxPathname = HEADER_MAX_PATH_SIZE;\n          opfsVfs.addOnDispose(\n            (opfsVfs.$zName = wasm.allocCString(vfsName)),\n            () => setPoolForVfs(opfsVfs.pointer, 0),\n          );\n\n          if (dVfs) {\n            opfsVfs.$xRandomness = dVfs.$xRandomness;\n            opfsVfs.$xSleep = dVfs.$xSleep;\n            dVfs.dispose();\n          }\n          if (!opfsVfs.$xRandomness && !vfsMethods.xRandomness) {\n            vfsMethods.xRandomness = function (pVfs, nOut, pOut) {\n              const heap = wasm.heap8u();\n              let i = 0;\n              for (; i < nOut; ++i)\n                heap[pOut + i] = (Math.random() * 255000) & 0xff;\n              return i;\n            };\n          }\n          if (!opfsVfs.$xSleep && !vfsMethods.xSleep) {\n            vfsMethods.xSleep = (pVfs, ms) => 0;\n          }\n          sqlite3.vfs.installVfs({\n            vfs: { struct: opfsVfs, methods: vfsMethods },\n          });\n          return opfsVfs;\n        };\n\n        class OpfsSAHPool {\n          vfsDir;\n\n          #dhVfsRoot;\n\n          #dhOpaque;\n\n          #dhVfsParent;\n\n          #mapSAHToName = new Map();\n\n          #mapFilenameToSAH = new Map();\n\n          #availableSAH = new Set();\n\n          #mapS3FileToOFile_ = new Map();\n\n          #apBody = new Uint8Array(HEADER_CORPUS_SIZE);\n\n          #dvBody;\n\n          #cVfs;\n\n          #verbosity;\n\n          constructor(options = Object.create(null)) {\n            this.#verbosity = options.verbosity ?? optionDefaults.verbosity;\n            this.vfsName = options.name || optionDefaults.name;\n            this.#cVfs = createOpfsVfs(this.vfsName);\n            setPoolForVfs(this.#cVfs.pointer, this);\n            this.vfsDir = options.directory || '.' + this.vfsName;\n            this.#dvBody = new DataView(\n              this.#apBody.buffer,\n              this.#apBody.byteOffset,\n            );\n            this.isReady = this.reset(\n              !!(options.clearOnInit ?? optionDefaults.clearOnInit),\n            ).then(() => {\n              if (this.$error) throw this.$error;\n              return this.getCapacity()\n                ? Promise.resolve(undefined)\n                : this.addCapacity(\n                    options.initialCapacity || optionDefaults.initialCapacity,\n                  );\n            });\n          }\n\n          #logImpl(level, ...args) {\n            if (this.#verbosity > level)\n              loggers[level](this.vfsName + ':', ...args);\n          }\n          log(...args) {\n            this.#logImpl(2, ...args);\n          }\n          warn(...args) {\n            this.#logImpl(1, ...args);\n          }\n          error(...args) {\n            this.#logImpl(0, ...args);\n          }\n\n          getVfs() {\n            return this.#cVfs;\n          }\n\n          getCapacity() {\n            return this.#mapSAHToName.size;\n          }\n\n          getFileCount() {\n            return this.#mapFilenameToSAH.size;\n          }\n\n          getFileNames() {\n            const rc = [];\n            for (const n of this.#mapFilenameToSAH.keys()) rc.push(n);\n            return rc;\n          }\n\n          async addCapacity(n) {\n            for (let i = 0; i < n; ++i) {\n              const name = getRandomName();\n              const h = await this.#dhOpaque.getFileHandle(name, {\n                create: true,\n              });\n              const ah = await h.createSyncAccessHandle();\n              this.#mapSAHToName.set(ah, name);\n              this.setAssociatedPath(ah, '', 0);\n            }\n            return this.getCapacity();\n          }\n\n          async reduceCapacity(n) {\n            let nRm = 0;\n            for (const ah of Array.from(this.#availableSAH)) {\n              if (nRm === n || this.getFileCount() === this.getCapacity()) {\n                break;\n              }\n              const name = this.#mapSAHToName.get(ah);\n\n              ah.close();\n              await this.#dhOpaque.removeEntry(name);\n              this.#mapSAHToName.delete(ah);\n              this.#availableSAH.delete(ah);\n              ++nRm;\n            }\n            return nRm;\n          }\n\n          releaseAccessHandles() {\n            for (const ah of this.#mapSAHToName.keys()) ah.close();\n            this.#mapSAHToName.clear();\n            this.#mapFilenameToSAH.clear();\n            this.#availableSAH.clear();\n          }\n\n          async acquireAccessHandles(clearFiles = false) {\n            const files = [];\n            for await (const [name, h] of this.#dhOpaque) {\n              if ('file' === h.kind) {\n                files.push([name, h]);\n              }\n            }\n            return Promise.all(\n              files.map(async ([name, h]) => {\n                try {\n                  const ah = await h.createSyncAccessHandle();\n                  this.#mapSAHToName.set(ah, name);\n                  if (clearFiles) {\n                    ah.truncate(HEADER_OFFSET_DATA);\n                    this.setAssociatedPath(ah, '', 0);\n                  } else {\n                    const path = this.getAssociatedPath(ah);\n                    if (path) {\n                      this.#mapFilenameToSAH.set(path, ah);\n                    } else {\n                      this.#availableSAH.add(ah);\n                    }\n                  }\n                } catch (e) {\n                  this.storeErr(e);\n                  this.releaseAccessHandles();\n                  throw e;\n                }\n              }),\n            );\n          }\n\n          getAssociatedPath(sah) {\n            sah.read(this.#apBody, { at: 0 });\n\n            const flags = this.#dvBody.getUint32(HEADER_OFFSET_FLAGS);\n            if (\n              this.#apBody[0] &&\n              (flags & capi.SQLITE_OPEN_DELETEONCLOSE ||\n                (flags & PERSISTENT_FILE_TYPES) === 0)\n            ) {\n              warn(\n                `Removing file with unexpected flags ${flags.toString(16)}`,\n                this.#apBody,\n              );\n              this.setAssociatedPath(sah, '', 0);\n              return '';\n            }\n\n            const fileDigest = new Uint32Array(HEADER_DIGEST_SIZE / 4);\n            sah.read(fileDigest, { at: HEADER_OFFSET_DIGEST });\n            const compDigest = this.computeDigest(this.#apBody, flags);\n\n            if (fileDigest.every((v, i) => v === compDigest[i])) {\n              const pathBytes = this.#apBody.findIndex((v) => 0 === v);\n              if (0 === pathBytes) {\n                sah.truncate(HEADER_OFFSET_DATA);\n              }\n\n              return pathBytes\n                ? textDecoder.decode(this.#apBody.subarray(0, pathBytes))\n                : '';\n            } else {\n              warn('Disassociating file with bad digest.');\n              this.setAssociatedPath(sah, '', 0);\n              return '';\n            }\n          }\n\n          setAssociatedPath(sah, path, flags) {\n            const enc = textEncoder.encodeInto(path, this.#apBody);\n            if (HEADER_MAX_PATH_SIZE <= enc.written + 1) {\n              toss('Path too long:', path);\n            }\n            if (path && flags) {\n              flags |= FLAG_COMPUTE_DIGEST_V2;\n            }\n            this.#apBody.fill(0, enc.written, HEADER_MAX_PATH_SIZE);\n            this.#dvBody.setUint32(HEADER_OFFSET_FLAGS, flags);\n            const digest = this.computeDigest(this.#apBody, flags);\n\n            sah.write(this.#apBody, { at: 0 });\n            sah.write(digest, { at: HEADER_OFFSET_DIGEST });\n            sah.flush();\n\n            if (path) {\n              this.#mapFilenameToSAH.set(path, sah);\n              this.#availableSAH.delete(sah);\n            } else {\n              sah.truncate(HEADER_OFFSET_DATA);\n              this.#availableSAH.add(sah);\n            }\n          }\n\n          computeDigest(byteArray, fileFlags) {\n            if (fileFlags & FLAG_COMPUTE_DIGEST_V2) {\n              let h1 = 0xdeadbeef;\n              let h2 = 0x41c6ce57;\n              for (const v of byteArray) {\n                h1 = Math.imul(h1 ^ v, 2654435761);\n                h2 = Math.imul(h2 ^ v, 104729);\n              }\n              return new Uint32Array([h1 >>> 0, h2 >>> 0]);\n            } else {\n              return new Uint32Array([0, 0]);\n            }\n          }\n\n          async reset(clearFiles) {\n            await this.isReady;\n            let h = await navigator.storage.getDirectory();\n            let prev, prevName;\n            for (const d of this.vfsDir.split('/')) {\n              if (d) {\n                prev = h;\n                h = await h.getDirectoryHandle(d, { create: true });\n              }\n            }\n            this.#dhVfsRoot = h;\n            this.#dhVfsParent = prev;\n            this.#dhOpaque = await this.#dhVfsRoot.getDirectoryHandle(\n              OPAQUE_DIR_NAME,\n              { create: true },\n            );\n            this.releaseAccessHandles();\n            return this.acquireAccessHandles(clearFiles);\n          }\n\n          getPath(arg) {\n            if (wasm.isPtr(arg)) arg = wasm.cstrToJs(arg);\n            return (\n              arg instanceof URL ? arg : new URL(arg, 'file://localhost/')\n            ).pathname;\n          }\n\n          deletePath(path) {\n            const sah = this.#mapFilenameToSAH.get(path);\n            if (sah) {\n              this.#mapFilenameToSAH.delete(path);\n              this.setAssociatedPath(sah, '', 0);\n            }\n            return !!sah;\n          }\n\n          storeErr(e, code) {\n            if (e) {\n              e.sqlite3Rc = code || capi.SQLITE_IOERR;\n              this.error(e);\n            }\n            this.$error = e;\n            return code;\n          }\n\n          popErr() {\n            const rc = this.$error;\n            this.$error = undefined;\n            return rc;\n          }\n\n          nextAvailableSAH() {\n            const [rc] = this.#availableSAH.keys();\n            return rc;\n          }\n\n          getOFileForS3File(pFile) {\n            return this.#mapS3FileToOFile_.get(pFile);\n          }\n\n          mapS3FileToOFile(pFile, file) {\n            if (file) {\n              this.#mapS3FileToOFile_.set(pFile, file);\n              setPoolForPFile(pFile, this);\n            } else {\n              this.#mapS3FileToOFile_.delete(pFile);\n              setPoolForPFile(pFile, false);\n            }\n          }\n\n          hasFilename(name) {\n            return this.#mapFilenameToSAH.has(name);\n          }\n\n          getSAHForPath(path) {\n            return this.#mapFilenameToSAH.get(path);\n          }\n\n          async removeVfs() {\n            if (!this.#cVfs.pointer || !this.#dhOpaque) return false;\n            capi.sqlite3_vfs_unregister(this.#cVfs.pointer);\n            this.#cVfs.dispose();\n            delete initPromises[this.vfsName];\n            try {\n              this.releaseAccessHandles();\n              await this.#dhVfsRoot.removeEntry(OPAQUE_DIR_NAME, {\n                recursive: true,\n              });\n              this.#dhOpaque = undefined;\n              await this.#dhVfsParent.removeEntry(this.#dhVfsRoot.name, {\n                recursive: true,\n              });\n              this.#dhVfsRoot = this.#dhVfsParent = undefined;\n            } catch (e) {\n              sqlite3.config.error(\n                this.vfsName,\n                'removeVfs() failed with no recovery strategy:',\n                e,\n              );\n            }\n            return true;\n          }\n\n          pauseVfs() {\n            if (this.#mapS3FileToOFile_.size > 0) {\n              sqlite3.SQLite3Error.toss(\n                capi.SQLITE_MISUSE,\n                'Cannot pause VFS',\n                this.vfsName,\n                'because it has opened files.',\n              );\n            }\n            if (this.#mapSAHToName.size > 0) {\n              capi.sqlite3_vfs_unregister(this.vfsName);\n              this.releaseAccessHandles();\n            }\n            return this;\n          }\n\n          isPaused() {\n            return 0 === this.#mapSAHToName.size;\n          }\n\n          async unpauseVfs() {\n            if (0 === this.#mapSAHToName.size) {\n              return this.acquireAccessHandles(false).then(\n                () => capi.sqlite3_vfs_register(this.#cVfs, 0),\n                this,\n              );\n            }\n            return this;\n          }\n\n          exportFile(name) {\n            const sah =\n              this.#mapFilenameToSAH.get(name) || toss('File not found:', name);\n            const n = sah.getSize() - HEADER_OFFSET_DATA;\n            const b = new Uint8Array(n > 0 ? n : 0);\n            if (n > 0) {\n              const nRead = sah.read(b, { at: HEADER_OFFSET_DATA });\n              if (nRead != n) {\n                toss(\n                  'Expected to read ' + n + ' bytes but read ' + nRead + '.',\n                );\n              }\n            }\n            return b;\n          }\n\n          async importDbChunked(name, callback) {\n            const sah =\n              this.#mapFilenameToSAH.get(name) ||\n              this.nextAvailableSAH() ||\n              toss('No available handles to import to.');\n            sah.truncate(0);\n            let nWrote = 0,\n              chunk,\n              checkedHeader = false,\n              err = false;\n            try {\n              while (undefined !== (chunk = await callback())) {\n                if (chunk instanceof ArrayBuffer) chunk = new Uint8Array(chunk);\n                if (0 === nWrote && chunk.byteLength >= 15) {\n                  util.affirmDbHeader(chunk);\n                  checkedHeader = true;\n                }\n                sah.write(chunk, { at: HEADER_OFFSET_DATA + nWrote });\n                nWrote += chunk.byteLength;\n              }\n              if (nWrote < 512 || 0 !== nWrote % 512) {\n                toss(\n                  'Input size',\n                  nWrote,\n                  'is not correct for an SQLite database.',\n                );\n              }\n              if (!checkedHeader) {\n                const header = new Uint8Array(20);\n                sah.read(header, { at: 0 });\n                util.affirmDbHeader(header);\n              }\n              sah.write(new Uint8Array([1, 1]), {\n                at: HEADER_OFFSET_DATA + 18,\n              });\n            } catch (e) {\n              this.setAssociatedPath(sah, '', 0);\n              throw e;\n            }\n            this.setAssociatedPath(sah, name, capi.SQLITE_OPEN_MAIN_DB);\n            return nWrote;\n          }\n\n          importDb(name, bytes) {\n            if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n            else if (bytes instanceof Function)\n              return this.importDbChunked(name, bytes);\n            const sah =\n              this.#mapFilenameToSAH.get(name) ||\n              this.nextAvailableSAH() ||\n              toss('No available handles to import to.');\n            const n = bytes.byteLength;\n            if (n < 512 || n % 512 != 0) {\n              toss('Byte array size is invalid for an SQLite db.');\n            }\n            const header = 'SQLite format 3';\n            for (let i = 0; i < header.length; ++i) {\n              if (header.charCodeAt(i) !== bytes[i]) {\n                toss('Input does not contain an SQLite database header.');\n              }\n            }\n            const nWrote = sah.write(bytes, { at: HEADER_OFFSET_DATA });\n            if (nWrote != n) {\n              this.setAssociatedPath(sah, '', 0);\n              toss(\n                'Expected to write ' + n + ' bytes but wrote ' + nWrote + '.',\n              );\n            } else {\n              sah.write(new Uint8Array([1, 1]), {\n                at: HEADER_OFFSET_DATA + 18,\n              });\n              this.setAssociatedPath(sah, name, capi.SQLITE_OPEN_MAIN_DB);\n            }\n            return nWrote;\n          }\n        }\n\n        class OpfsSAHPoolUtil {\n          #p;\n\n          constructor(sahPool) {\n            this.#p = sahPool;\n            this.vfsName = sahPool.vfsName;\n          }\n\n          async addCapacity(n) {\n            return this.#p.addCapacity(n);\n          }\n\n          async reduceCapacity(n) {\n            return this.#p.reduceCapacity(n);\n          }\n\n          getCapacity() {\n            return this.#p.getCapacity(this.#p);\n          }\n\n          getFileCount() {\n            return this.#p.getFileCount();\n          }\n          getFileNames() {\n            return this.#p.getFileNames();\n          }\n\n          async reserveMinimumCapacity(min) {\n            const c = this.#p.getCapacity();\n            return c < min ? this.#p.addCapacity(min - c) : c;\n          }\n\n          exportFile(name) {\n            return this.#p.exportFile(name);\n          }\n\n          importDb(name, bytes) {\n            return this.#p.importDb(name, bytes);\n          }\n\n          async wipeFiles() {\n            return this.#p.reset(true);\n          }\n\n          unlink(filename) {\n            return this.#p.deletePath(filename);\n          }\n\n          async removeVfs() {\n            return this.#p.removeVfs();\n          }\n\n          pauseVfs() {\n            this.#p.pauseVfs();\n            return this;\n          }\n          async unpauseVfs() {\n            return this.#p.unpauseVfs().then(() => this);\n          }\n          isPaused() {\n            return this.#p.isPaused();\n          }\n        }\n\n        const apiVersionCheck = async () => {\n          const dh = await navigator.storage.getDirectory();\n          const fn = '.opfs-sahpool-sync-check-' + getRandomName();\n          const fh = await dh.getFileHandle(fn, { create: true });\n          const ah = await fh.createSyncAccessHandle();\n          const close = ah.close();\n          await close;\n          await dh.removeEntry(fn);\n          if (close?.then) {\n            toss(\n              'The local OPFS API is too old for opfs-sahpool:',\n              'it has an async FileSystemSyncAccessHandle.close() method.',\n            );\n          }\n          return true;\n        };\n\n        sqlite3.installOpfsSAHPoolVfs = async function (\n          options = Object.create(null),\n        ) {\n          options = Object.assign(\n            Object.create(null),\n            optionDefaults,\n            options || {},\n          );\n          const vfsName = options.name;\n          if (options.$testThrowPhase1) {\n            throw options.$testThrowPhase1;\n          }\n          if (initPromises[vfsName]) {\n            try {\n              const p = await initPromises[vfsName];\n\n              return p;\n            } catch (e) {\n              if (options.forceReinitIfPreviouslyFailed) {\n                delete initPromises[vfsName];\n              } else {\n                throw e;\n              }\n            }\n          }\n          if (\n            !globalThis.FileSystemHandle ||\n            !globalThis.FileSystemDirectoryHandle ||\n            !globalThis.FileSystemFileHandle ||\n            !globalThis.FileSystemFileHandle.prototype.createSyncAccessHandle ||\n            !navigator?.storage?.getDirectory\n          ) {\n            return (initPromises[vfsName] = Promise.reject(\n              new Error('Missing required OPFS APIs.'),\n            ));\n          }\n\n          return (initPromises[vfsName] = apiVersionCheck()\n            .then(async function () {\n              if (options.$testThrowPhase2) {\n                throw options.$testThrowPhase2;\n              }\n              const thePool = new OpfsSAHPool(options);\n              return thePool.isReady\n                .then(async () => {\n                  const poolUtil = new OpfsSAHPoolUtil(thePool);\n                  if (sqlite3.oo1) {\n                    const oo1 = sqlite3.oo1;\n                    const theVfs = thePool.getVfs();\n                    const OpfsSAHPoolDb = function (...args) {\n                      const opt = oo1.DB.dbCtorHelper.normalizeArgs(...args);\n                      opt.vfs = theVfs.$zName;\n                      oo1.DB.dbCtorHelper.call(this, opt);\n                    };\n                    OpfsSAHPoolDb.prototype = Object.create(oo1.DB.prototype);\n                    poolUtil.OpfsSAHPoolDb = OpfsSAHPoolDb;\n                  }\n                  thePool.log('VFS initialized.');\n                  return poolUtil;\n                })\n                .catch(async (e) => {\n                  await thePool.removeVfs().catch(() => {});\n                  throw e;\n                });\n            })\n            .catch((err) => {\n              return (initPromises[vfsName] = Promise.reject(err));\n            }));\n        };\n      });\n\n      ('use strict');\n      if ('undefined' !== typeof Module) {\n        const SABC = Object.assign(\n          Object.create(null),\n          {\n            exports:\n              'undefined' === typeof wasmExports ? Module['asm'] : wasmExports,\n            memory: Module.wasmMemory,\n          },\n          globalThis.sqlite3ApiConfig || {},\n        );\n\n        globalThis.sqlite3ApiConfig = SABC;\n        let sqlite3;\n        try {\n          sqlite3 = globalThis.sqlite3ApiBootstrap();\n        } catch (e) {\n          console.error('sqlite3ApiBootstrap() error:', e);\n          throw e;\n        } finally {\n          delete globalThis.sqlite3ApiBootstrap;\n          delete globalThis.sqlite3ApiConfig;\n        }\n\n        Module.sqlite3 = sqlite3;\n      } else {\n        console.warn(\n          'This is not running in an Emscripten module context, so',\n          'globalThis.sqlite3ApiBootstrap() is _not_ being called due to lack',\n          'of config info for the WASM environment.',\n          'It must be called manually.',\n        );\n      }\n    };\n\n    moduleRtn = readyPromise;\n\n    return moduleRtn;\n  };\n})();\n\nconst toExportForESM = (function () {\n  const originalInit = sqlite3InitModule;\n  if (!originalInit) {\n    throw new Error(\n      'Expecting globalThis.sqlite3InitModule to be defined by the Emscripten build.',\n    );\n  }\n\n  const initModuleState = (globalThis.sqlite3InitModuleState = Object.assign(\n    Object.create(null),\n    {\n      moduleScript: globalThis?.document?.currentScript,\n      isWorker: 'undefined' !== typeof WorkerGlobalScope,\n      location: globalThis.location,\n      urlParams: globalThis?.location?.href\n        ? new URL(globalThis.location.href).searchParams\n        : new URLSearchParams(),\n    },\n  ));\n  initModuleState.debugModule = initModuleState.urlParams.has(\n    'sqlite3.debugModule',\n  )\n    ? (...args) => console.warn('sqlite3.debugModule:', ...args)\n    : () => {};\n\n  if (initModuleState.urlParams.has('sqlite3.dir')) {\n    initModuleState.sqlite3Dir =\n      initModuleState.urlParams.get('sqlite3.dir') + '/';\n  } else if (initModuleState.moduleScript) {\n    const li = initModuleState.moduleScript.src.split('/');\n    li.pop();\n    initModuleState.sqlite3Dir = li.join('/') + '/';\n  }\n\n  globalThis.sqlite3InitModule = function ff(...args) {\n    return originalInit(...args)\n      .then((EmscriptenModule) => {\n        EmscriptenModule.runSQLite3PostLoadInit(EmscriptenModule);\n        const s = EmscriptenModule.sqlite3;\n        s.scriptInfo = initModuleState;\n\n        if (ff.__isUnderTest) s.__isUnderTest = true;\n        const f = s.asyncPostInit;\n        delete s.asyncPostInit;\n        const rv = f();\n        return rv;\n      })\n      .catch((e) => {\n        console.error('Exception loading sqlite3 module:', e);\n        throw e;\n      });\n  };\n  globalThis.sqlite3InitModule.ready = originalInit.ready;\n\n  if (globalThis.sqlite3InitModuleState.moduleScript) {\n    const sim = globalThis.sqlite3InitModuleState;\n    let src = sim.moduleScript.src.split('/');\n    src.pop();\n    sim.scriptDir = src.join('/') + '/';\n  }\n  initModuleState.debugModule('sqlite3InitModuleState =', initModuleState);\n  if (0) {\n    console.warn('Replaced sqlite3InitModule()');\n    console.warn('globalThis.location.href =', globalThis.location.href);\n    if ('undefined' !== typeof document) {\n      console.warn(\n        'document.currentScript.src =',\n        document?.currentScript?.src,\n      );\n    }\n  }\n  return globalThis.sqlite3InitModule;\n})();\nsqlite3InitModule = toExportForESM;\nexport default sqlite3InitModule;\n","/*\n  2022-08-24\n\n  The author disclaims copyright to this source code.  In place of a\n  legal notice, here is a blessing:\n\n  *   May you do good and not evil.\n  *   May you find forgiveness for yourself and forgive others.\n  *   May you share freely, never taking more than you give.\n\n  ***********************************************************************\n\n  This file implements a Promise-based proxy for the sqlite3 Worker\n  API #1. It is intended to be included either from the main thread or\n  a Worker, but only if (A) the environment supports nested Workers\n  and (B) it's _not_ a Worker which loads the sqlite3 WASM/JS\n  module. This file's features will load that module and provide a\n  slightly simpler client-side interface than the slightly-lower-level\n  Worker API does.\n\n  This script necessarily exposes one global symbol, but clients may\n  freely `delete` that symbol after calling it.\n*/\n'use strict';\n\nglobalThis.sqlite3Worker1Promiser = function callee(\n  config = callee.defaultConfig,\n) {\n  if (1 === arguments.length && 'function' === typeof arguments[0]) {\n    const f = config;\n    config = Object.assign(Object.create(null), callee.defaultConfig);\n    config.onready = f;\n  } else {\n    config = Object.assign(Object.create(null), callee.defaultConfig, config);\n  }\n  const handlerMap = Object.create(null);\n  const noop = function () {};\n  const err = config.onerror || noop;\n  const debug = config.debug || noop;\n  const idTypeMap = config.generateMessageId ? undefined : Object.create(null);\n  const genMsgId =\n    config.generateMessageId ||\n    function (msg) {\n      return (\n        msg.type + '#' + (idTypeMap[msg.type] = (idTypeMap[msg.type] || 0) + 1)\n      );\n    };\n  const toss = (...args) => {\n    throw new Error(args.join(' '));\n  };\n  if (!config.worker) config.worker = callee.defaultConfig.worker;\n  if ('function' === typeof config.worker) config.worker = config.worker();\n  let dbId;\n  let promiserFunc;\n  config.worker.onmessage = function (ev) {\n    ev = ev.data;\n    debug('worker1.onmessage', ev);\n    let msgHandler = handlerMap[ev.messageId];\n    if (!msgHandler) {\n      if (ev && 'sqlite3-api' === ev.type && 'worker1-ready' === ev.result) {\n        if (config.onready) config.onready(promiserFunc);\n        return;\n      }\n      msgHandler = handlerMap[ev.type];\n      if (msgHandler && msgHandler.onrow) {\n        msgHandler.onrow(ev);\n        return;\n      }\n      if (config.onunhandled) config.onunhandled(arguments[0]);\n      else err('sqlite3Worker1Promiser() unhandled worker message:', ev);\n      return;\n    }\n    delete handlerMap[ev.messageId];\n    switch (ev.type) {\n      case 'error':\n        msgHandler.reject(ev);\n        return;\n      case 'open':\n        if (!dbId) dbId = ev.dbId;\n        break;\n      case 'close':\n        if (ev.dbId === dbId) dbId = undefined;\n        break;\n      default:\n        break;\n    }\n    try {\n      msgHandler.resolve(ev);\n    } catch (e) {\n      msgHandler.reject(e);\n    }\n  };\n  return (promiserFunc = function () {\n    let msg;\n    if (1 === arguments.length) {\n      msg = arguments[0];\n    } else if (2 === arguments.length) {\n      msg = Object.create(null);\n      msg.type = arguments[0];\n      msg.args = arguments[1];\n      msg.dbId = msg.args.dbId;\n    } else {\n      toss('Invalid arguments for sqlite3Worker1Promiser()-created factory.');\n    }\n    if (!msg.dbId && msg.type !== 'open') msg.dbId = dbId;\n    msg.messageId = genMsgId(msg);\n    msg.departureTime = performance.now();\n    const proxy = Object.create(null);\n    proxy.message = msg;\n    let rowCallbackId;\n    if ('exec' === msg.type && msg.args) {\n      if ('function' === typeof msg.args.callback) {\n        rowCallbackId = msg.messageId + ':row';\n        proxy.onrow = msg.args.callback;\n        msg.args.callback = rowCallbackId;\n        handlerMap[rowCallbackId] = proxy;\n      } else if ('string' === typeof msg.args.callback) {\n        toss(\n          'exec callback may not be a string when using the Promise interface.',\n        );\n      }\n    }\n\n    let p = new Promise(function (resolve, reject) {\n      proxy.resolve = resolve;\n      proxy.reject = reject;\n      handlerMap[msg.messageId] = proxy;\n      debug(\n        'Posting',\n        msg.type,\n        'message to Worker dbId=' + (dbId || 'default') + ':',\n        msg,\n      );\n      config.worker.postMessage(msg);\n    });\n    if (rowCallbackId) p = p.finally(() => delete handlerMap[rowCallbackId]);\n    return p;\n  });\n};\n\nglobalThis.sqlite3Worker1Promiser.defaultConfig = {\n  worker: function () {\n    return new Worker(\n      new URL('sqlite3-worker1-bundler-friendly.mjs', import.meta.url),\n      {\n        type: 'module',\n      },\n    );\n  },\n  onerror: (...args) => console.error('worker1 promiser error', ...args),\n};\n\nsqlite3Worker1Promiser.v2 = function (config) {\n  let oldFunc;\n  if ('function' == typeof config) {\n    oldFunc = config;\n    config = {};\n  } else if ('function' === typeof config?.onready) {\n    oldFunc = config.onready;\n    delete config.onready;\n  }\n  const promiseProxy = Object.create(null);\n  config = Object.assign(config || Object.create(null), {\n    onready: async function (func) {\n      try {\n        if (oldFunc) await oldFunc(func);\n        promiseProxy.resolve(func);\n      } catch (e) {\n        promiseProxy.reject(e);\n      }\n    },\n  });\n  const p = new Promise(function (resolve, reject) {\n    promiseProxy.resolve = resolve;\n    promiseProxy.reject = reject;\n  });\n  try {\n    this.original(config);\n  } catch (e) {\n    promiseProxy.reject(e);\n  }\n  return p;\n}.bind({\n  original: sqlite3Worker1Promiser,\n});\n\nexport default sqlite3Worker1Promiser.v2;\n","import { default as sqlite3InitModule } from './sqlite-wasm/jswasm/sqlite3-bundler-friendly.mjs';\nimport './sqlite-wasm/jswasm/sqlite3-worker1-promiser.mjs';\n\nconst sqlite3Worker1Promiser = globalThis.sqlite3Worker1Promiser;\n\nexport default sqlite3InitModule;\nexport { sqlite3Worker1Promiser };\n"],"names":["sqlite3InitModule","_scriptName","moduleArg","moduleRtn","Module","readyPromiseResolve","readyPromiseReject","readyPromise","resolve","reject","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","sqlite3InitModuleState","moduleOverrides","thisProgram","scriptDirectory","locateFile","path","readAsync","readBinary","url","xhr","response","out","err","wasmBinary","wasmMemory","ABORT","HEAP8","HEAPU8","HEAP16","HEAP32","HEAPU32","HEAP64","updateMemoryViews","b","INITIAL_MEMORY","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","preRun","preRuns","addOnPreRun","callRuntimeCallbacks","initRuntime","FS","postRun","postRuns","addOnPostRun","cb","addOnInit","runDependencies","dependenciesFulfilled","getUniqueRunDependency","id","addRunDependency","removeRunDependency","callback","abort","what","e","dataURIPrefix","isDataURI","filename","findWasmBinary","f","wasmBinaryFile","getBinarySync","file","getBinaryPromise","binaryFile","instantiateArrayBuffer","imports","receiver","binary","reason","instantiateAsync","result","getWasmImports","wasmImports","createWasm","info","receiveInstance","instance","module","wasmExports","receiveInstantiationResult","callbacks","PATH","splitPathRe","parts","allowAboveRoot","up","i","last","isAbsolute","trailingSlash","p","root","dir","lastSlash","paths","l","r","initRandomFill","view","randomFill","PATH_FS","args","resolvedPath","resolvedAbsolute","from","to","trim","arr","start","end","fromParts","toParts","length","samePartsLength","outputParts","UTF8Decoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endIdx","endPtr","str","u0","u1","u2","ch","FS_stdin_getChar_buffer","lengthBytesUTF8","len","c","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","u","intArrayFromString","stringy","dontAddNull","u8array","numBytesWritten","FS_stdin_getChar","TTY","dev","ops","stream","tty","buffer","offset","pos","bytesRead","val","optional_actions","data","zeroMemory","address","size","alignMemory","alignment","mmapAlloc","ptr","_emscripten_builtin_memalign","MEMFS","mount","parent","name","mode","node","newCapacity","prevCapacity","CAPACITY_DOUBLING_MAX","oldContents","newSize","attr","old_node","new_dir","new_name","new_node","entries","key","newname","oldpath","position","contents","canOwn","whence","prot","flags","allocated","mmapFlags","asyncLoad","onload","onerror","noRunDep","dep","arrayBuffer","FS_createDataFile","fileData","canRead","canWrite","preloadPlugins","FS_handledByPreloadPlugin","byteArray","fullname","finish","handled","plugin","FS_createPreloadedFile","dontCreateFile","preFinish","processData","FS_modeStringToFlags","flagModes","FS_getMode","errno","rdev","opts","defaults","current","current_path","islast","count","link","lookup","parentid","hash","errCode","nodeName","flag","perms","isdir","fd","origStream","device","ma","mi","mounts","check","m","populate","completed","doCallback","done","type","mountpoint","pseudo","mountRoot","next","dirs","d","newpath","old_path","new_path","old_dirname","new_dirname","old_name","old_dir","relative","dontFollow","uid","gid","atime","mtime","created","seeking","bytesWritten","cmd","arg","ret","stat","buf","actualNumBytes","randomBuffer","randomLeft","randomByte","proc_self","input","output","error","code","dontResolveLastLink","part","properties","obj","LazyUint8Array","chunkOffset","chunkNum","getter","datalength","header","hasByteServing","usesGzip","chunkSize","doXHR","lazyArray","stream_ops","keys","fn","writeChunks","UTF8ToString","SYSCALLS","dirfd","allowEmpty","dirstream","func","ctime","addr","___syscall_chmod","___syscall_faccessat","amode","___syscall_fchmod","___syscall_fchown32","owner","group","syscallGetVarargI","syscallGetVarargP","___syscall_fcntl64","varargs","newStream","___syscall_fstat64","INT53_MAX","INT53_MIN","bigintToI53Checked","num","___syscall_ftruncate64","stringToUTF8","outPtr","___syscall_getcwd","cwd","cwdLengthInBytes","___syscall_ioctl","op","termios","argp","c_iflag","c_oflag","c_cflag","c_lflag","c_cc","winsize","___syscall_lstat64","___syscall_mkdirat","___syscall_newfstatat","nofollow","___syscall_openat","___syscall_readlinkat","bufsize","endChar","___syscall_rmdir","___syscall_stat64","___syscall_unlinkat","readI53FromI64","___syscall_utimensat","times","now","seconds","nanoseconds","nowIsMonotonic","__emscripten_get_now_is_monotonic","isLeapYear","year","MONTH_DAYS_LEAP_CUMULATIVE","MONTH_DAYS_REGULAR_CUMULATIVE","ydayFromDate","date","leap","monthDaysCumulative","yday","__localtime_js","time","tmPtr","summerOffset","winterOffset","dst","__mmap_js","res","__munmap_js","__tzset_js","timezone","daylight","std_name","dst_name","currentYear","winter","summer","stdTimezoneOffset","extractZone","timezoneOffset","sign","absOffset","hours","minutes","winterName","summerName","_emscripten_date_now","_emscripten_get_now","getHeapMax","growMemory","pages","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","cutDown","overGrownHeapSize","replacement","ENV","getExecutableName","getEnvStrings","lang","env","x","strings","stringToAscii","_environ_get","__environ","environ_buf","bufSize","string","_environ_sizes_get","penviron_count","penviron_buf_size","_fd_close","_fd_fdstat_get","pbuf","rightsBase","rightsInheriting","doReadv","iov","iovcnt","curr","_fd_read","pnum","_fd_seek","newOffset","_fd_sync","doWritev","_fd_write","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","calledRun","calledPrerun","runCaller","run","doRun","EmscriptenModule","sqlite3ApiBootstrap","apiConfig","config","k","capi","wasm","__rcStr","rc","__isInt","n","SQLite3Error","rcStr","toss3","isInt32","bigIntFits64","bigIntFits32","bigIntFitsDouble","isTypedArray","v","__SAB","isSharedTypedArray","aTypedArray","typedArrayPart","begin","isBindableTypedArray","isSQLableTypedArray","affirmBindableTypedArray","utf8Decoder","typedArrayToString","typedArray","flexibleString","WasmAllocError","pDb","funcName","nArg","eTextRep","pApp","xFunc","xStep","xFinal","xDestroy","xValue","xInverse","dbPtr","sql","sqlByteLen","prepFlags","stmtPtrPtr","strPtrPtr","pVoid","pErrMsg","util","bytes","srcTypedArray","pRet","keyAlloc","keyDealloc","keyRealloc","m2","optName","opt","rv","ov","sz","mem","safePtrSize","stackPos","sqlite3","ta","stack","nAlloc","__wasmfsOpfsDir","pdir","vfsName","dbName","pK","pVfs","oVfs","schema","scope","pOut","pSize","ppOut","zSchema","nOut","dbPointer","pCtx","dataLen","pData","vfs","__kvvfsInfo","which","kvinfo","s","toRm","kk","pVal","throwIfCannotConvert","valType","pBlob","argc","pArgv","tgt","pStmt","iCol","__newOldValue","pObj","impl","pv","pChangesetIter","ff","lia","postInit","catcher","target","toss","ptrIR","ptrSizeof","cache","heapWrappers","unsigned","fptr","ft","sig","method","dest","letter","sigParams","wasmCode","__installFunction","scoped","oldLen","fi","list","value","h","__utf8Decode","jstr","maxBytes","addNul","max","tgtPtr","srcPtr","__affirmAlloc","__allocCStr","returnWithLength","allocator","a","state","__allocMainArgv","isScoped","pList","__allocPtr","howMany","pIr","__argcMismatch","fname","xArg","xResult","__xArgPtr","copyToResult","adaptPtr","t","__xArgString","AbstractArgAdapter","argv","argIndex","FuncPtrAdapter","cm","pair","fp","__xArgAdapterCheck","__xResultAdapterCheck","fArg","resultType","argTypes","fIsFunc","xf","cxw","__xAdapter","typeName","adapter","modeName","xcvPart","wfetch","wui","finalThen","exports","StructBinderFactory","SBF","alloc","dealloc","log","memberPrefix","memberSuffix","bigIntEnabled","BigInt","BigInt64Array","deriveFrom","isLittleEndian","isFuncSig","isAutoPtrSig","sigLetter","sigIR","affirmBigIntArray","sigDVGetter","sigDVSetter","sigDVSetWrapper","sPropName","__propThrowOnSet","structName","propName","__instancePointerMap","xPtrPropName","__freeStruct","ctor","StructType","rop","__allocStruct","fill","__memoryDump","__memberKeyProp","__lookupMember","structInfo","memberName","tossIfNotFound","__memberSignature","emscriptenFormat","__ptrPropDescriptor","__structMemberKeys","__utf8Decoder","__utf8Encoder","__memberIsString","__affirmCStringSignature","member","__memberToJsString","__addOnDispose","__allocCString","__setMemberCString","isNumericValue","makeMemberWrapper","descr","rxSig1","rxSig2","sigGlyph","xPropName","dbg","prop","StructBinder","lastMember","debugFlags","StructCtor","externalMemory","mKey","aNames","nCols","pColVals","pColNames","aVals","pV","iCode","s0","s1","s2","s3","z0","z1","rowid","db","zDb","zTbl","iKey1","iKey2","__ipsProxy","__xString","nilType","__xRcPtr","fI64Disabled","__db_err","resultCode","message","msg","cJson","defineGroups","__rcMap","notThese","__dbArgcMismatch","__errEncoding","__argPDb","__argStr","__dbCleanupMap","arity","map","closeArgs","fmap","arities","fargs","__sqlite3CloseV2","__sqlite3SessionDelete","pSession","contextKey","__sqlite3CreateCollationV2","zName","pArg","xCompare","__cfProxy","__sqlite3CreateFunction","__sqlite3CreateWindowFunction","__flexiString","__prepare","sqlLen","ppStmt","pzTail","xSql","xSqlLen","__bindText","__bindBlob","text","nText","pMem","nMem","__autoExtFptr","fPtr","pKvvfs","kvvfsMethods","kvvfsMakeKey","pstack","kvvfsStorage","zClass","kvvfsImpls","zKey","zBuf","nBuf","astack","zXKey","jKey","jV","nV","zV","zData","installMethod","callee","applyArgcCheck","ndx","sigN","memKey","fProxy","pFunc","installMethods","structInstance","methods","seen","prior","mkey","__ptrMap","__stmtMap","getOwnOption","dflt","checkSqlite3Rc","sqliteResultCode","DB","__dbTraceToConsole","__vfsPostOpenCallback","dbCtorHelper","isWorkerThread","flagsStr","fnJs","vfsCheck","oflags","pPtr","postInitSql","BindTypes","Stmt","affirmDbOpen","affirmColIndex","stmt","parseExecArgs","row","$colName","__selectFirstRow","bind","getArgs","__selectAll","rowMode","total","sixtyFour","dbNumber","resultRows","evalFirstResult","saveSql","isTA","pSql","pSqlEnd","gotColNames","cbArgCache","isFunc","isWindow","fFlags","xArity","arityArg","asType","opener","affirmStmtOpen","isSupportedBindType","affirmSupportedBindType","affirmParamIndex","affirmNotLockedByExec","currentOpName","bindOne","bindType","asBlob","pStr","alsoClearBinds","storageName","jdb","getDbId","wState","alsoUnlink","ddNdx","xferList","require","getMsgDb","msgData","affirmExists","getDefaultDbId","wMsgHandler","ev","oargs","doUnlink","theCallback","rowNumber","hadColNames","changeCount","lastInsertRowId","src","dbId","evType","arrivalTime","asDefault","propList","o","vtab","sii","asPtr","__xWrapFactory","methodName","removeMapping","StructPtrMapper","__xWrap","pCObj","pIdxInfo","defaultRc","ppRowid64","createdMod","mod","fwrap","pAux","ppVtab","pzErr","mnames","remethods","installOpfsVfs","options","urlParams","promiseResolve_","promiseReject_","loggers","logImpl","level","warn","sqlite3_vfs","sqlite3_file","sqlite3_io_methods","opfsUtil","thisThreadHasOPFS","w","metrics","W","opfsIoMethods","opfsVfs","promiseWasRejected","promiseReject","promiseResolve","pDVfs","dVfs","opRun","opNdx","initS11n","textDecoder","textEncoder","viewU8","viewDV","TypeIds","getTypeId","getTypeIdById","tid","clear","typeIds","randomFilename","__openFiles","opTimer","mTimeStart","mTimeEnd","ioSyncWrappers","pFile","opId","pSz64","lockType","pDest","offset64","sz64","pSrc","vfsSyncWrappers","doSyncDir","pOutFlags","opfsFlags","fh","ms","splitIt","absFilename","createDirs","dh","dirName","absDirName","fsEntryName","doDir","dirHandle","handle","subDir","recursive","throwOnError","hDir","filenamePart","defaultOpt","depth","importDbChunked","fnamePart","sah","nWrote","chunk","checkedHeader","OpfsDb","oo1Db","sanityCheck","sq3File","fid","openFlags","dbFile","zDbFile","readBuf","jRead","errMsg","proxyJs","initPromises","SECTOR_SIZE","HEADER_MAX_PATH_SIZE","HEADER_FLAGS_SIZE","HEADER_DIGEST_SIZE","HEADER_CORPUS_SIZE","HEADER_OFFSET_FLAGS","HEADER_OFFSET_DIGEST","HEADER_OFFSET_DATA","PERSISTENT_FILE_TYPES","FLAG_COMPUTE_DIGEST_V2","OPAQUE_DIR_NAME","getRandomName","optionDefaults","__mapVfsToPool","getPoolForVfs","setPoolForVfs","pool","__mapSqlite3File","getPoolForPFile","setPoolForPFile","ioMethods","nRead","nBytes","vfsMethods","cMsg","createOpfsVfs","OpfsSAHPool","#dhVfsRoot","#dhOpaque","#dhVfsParent","#mapSAHToName","#mapFilenameToSAH","#availableSAH","#mapS3FileToOFile_","#apBody","#dvBody","#cVfs","#verbosity","#logImpl","ah","nRm","clearFiles","files","fileDigest","compDigest","pathBytes","enc","digest","fileFlags","h1","h2","prev","OpfsSAHPoolUtil","#p","sahPool","min","apiVersionCheck","close","thePool","poolUtil","oo1","theVfs","OpfsSAHPoolDb","SABC","toExportForESM","originalInit","initModuleState","li","sim","handlerMap","noop","debug","idTypeMap","genMsgId","promiserFunc","msgHandler","proxy","rowCallbackId","oldFunc","promiseProxy","sqlite3Worker1Promiser"],"mappings":"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","x_google_ignoreList":[0,1,2]}